{"version":3,"file":"pdf.image_decoders.js","mappings":"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","sources":["webpack://pdfjs-dist/image_decoders/pdf.image_decoders/webpack/universalModuleDefinition","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/shared/util.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/jbig2.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/core_utils.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/primitives.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/base_stream.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/arithmetic_decoder.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/ccitt.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/jpg.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/core/jpx.js","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/webpack/bootstrap","webpack://pdfjs-dist/image_decoders/pdf.image_decoders/src/pdf.image_decoders.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/image_decoders/pdf.image_decoders\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/image_decoders/pdf.image_decoders\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/image_decoders/pdf.image_decoders\"] = factory();\n})(globalThis, () => {\nreturn ","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  typeof PDFJSDev !== \"undefined\" &&\n  !PDFJSDev.test(\"SKIP_BABEL\") &&\n  !globalThis._pdfjsCompatibilityChecked\n) {\n  globalThis._pdfjsCompatibilityChecked = true;\n  require(\"./compatibility.js\");\n}\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Represent the percentage of the height of a single-line field over\n// the font size. Acrobat seems to use this value.\nconst LINE_FACTOR = 1.35;\nconst LINE_DESCENT_FACTOR = 0.35;\nconst BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  SAVE: 0x08,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\nconst AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\n\nconst AnnotationEditorType = {\n  DISABLE: -1,\n  NONE: 0,\n  FREETEXT: 3,\n  INK: 15,\n};\n\nconst AnnotationEditorParamsType = {\n  FREETEXT_SIZE: 1,\n  FREETEXT_COLOR: 2,\n  FREETEXT_OPACITY: 3,\n  INK_COLOR: 11,\n  INK_THICKNESS: 12,\n  INK_OPACITY: 13,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  // PLEASE NOTE: We purposely keep any removed operators commented out, since\n  //              re-numbering the list would risk breaking third-party users.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  // beginAnnotations: 78,\n  // endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  // paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots && dots.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch (ex) {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value, nonSerializable = false) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      prop in obj,\n      `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n    );\n  }\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: !nonSerializable,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nfunction bytesToString(bytes) {\n  if (\n    typeof bytes !== \"object\" ||\n    bytes === null ||\n    bytes.length === undefined\n  ) {\n    unreachable(\"Invalid argument for bytesToString\");\n  }\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  if (typeof str !== \"string\") {\n    unreachable(\"Invalid argument for stringToBytes\");\n  }\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\n// eslint-disable-next-line consistent-return\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  if (arr.byteLength !== undefined) {\n    return arr.byteLength;\n  }\n  unreachable(\"Invalid argument for arrayByteLength\");\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nclass FeatureTest {\n  static get isLittleEndian() {\n    return shadow(this, \"isLittleEndian\", isLittleEndian());\n  }\n\n  static get isEvalSupported() {\n    return shadow(this, \"isEvalSupported\", isEvalSupported());\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return shadow(\n      this,\n      \"isOffscreenCanvasSupported\",\n      typeof OffscreenCanvas !== \"undefined\"\n    );\n  }\n}\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Apply a scaling matrix to some min/max values.\n  // If a scaling factor is negative then min and max must be\n  // swaped.\n  static scaleMinMax(transform, minMax) {\n    let temp;\n    if (transform[0]) {\n      if (transform[0] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[0];\n      minMax[1] *= transform[0];\n\n      if (transform[3] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[3];\n      minMax[3] *= transform[3];\n    } else {\n      temp = minMax[0];\n      minMax[0] = minMax[2];\n      minMax[2] = temp;\n      temp = minMax[1];\n      minMax[1] = minMax[3];\n      minMax[3] = temp;\n\n      if (transform[1] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[1];\n      minMax[3] *= transform[1];\n\n      if (transform[2] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[2];\n      minMax[1] *= transform[2];\n    }\n    minMax[0] += transform[4];\n    minMax[1] += transform[4];\n    minMax[2] += transform[5];\n    minMax[3] += transform[5];\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'null'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    const xLow = Math.max(\n      Math.min(rect1[0], rect1[2]),\n      Math.min(rect2[0], rect2[2])\n    );\n    const xHigh = Math.min(\n      Math.max(rect1[0], rect1[2]),\n      Math.max(rect2[0], rect2[2])\n    );\n    if (xLow > xHigh) {\n      return null;\n    }\n    const yLow = Math.max(\n      Math.min(rect1[1], rect1[3]),\n      Math.min(rect2[1], rect2[3])\n    );\n    const yHigh = Math.min(\n      Math.max(rect1[1], rect1[3]),\n      Math.max(rect2[1], rect2[3])\n    );\n    if (yLow > yHigh) {\n      return null;\n    }\n\n    return [xLow, yLow, xHigh, yHigh];\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] =\n        mt * mt * mt * x0 +\n        3 * mt * mt * t * x1 +\n        3 * mt * t * t * x2 +\n        t * t * t * x3;\n      bounds[1][j] =\n        mt * mt * mt * y0 +\n        3 * mt * mt * t * y1 +\n        3 * mt * t * t * y2 +\n        t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return [\n      Math.min(...bounds[0]),\n      Math.min(...bounds[1]),\n      Math.max(...bounds[0]),\n      Math.max(...bounds[1]),\n    ];\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(str);\n        return decoder.decode(buffer);\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n  // ISO Latin 1\n  const strBuf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const code = PDFStringTranslateTable[str.charCodeAt(i)];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationEditorParamsType,\n  AnnotationEditorPrefix,\n  AnnotationEditorType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationMode,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  BASELINE_FACTOR,\n  bytesToString,\n  CMapCompressionType,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  FeatureTest,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  LINE_DESCENT_FACTOR,\n  LINE_FACTOR,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseException, shadow } from \"../shared/util.js\";\nimport { log2, readInt8, readUint16, readUint32 } from \"./core_utils.js\";\nimport { ArithmeticDecoder } from \"./arithmetic_decoder.js\";\nimport { CCITTFaxDecoder } from \"./ccitt.js\";\n\nclass Jbig2Error extends BaseException {\n  constructor(msg) {\n    super(`JBIG2 error: ${msg}`, \"Jbig2Error\");\n  }\n}\n\n// Utility data structures\nclass ContextCache {\n  getContexts(id) {\n    if (id in this) {\n      return this[id];\n    }\n    return (this[id] = new Int8Array(1 << 16));\n  }\n}\n\nclass DecodingContext {\n  constructor(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n\n  get decoder() {\n    const decoder = new ArithmeticDecoder(this.data, this.start, this.end);\n    return shadow(this, \"decoder\", decoder);\n  }\n\n  get contextCache() {\n    const cache = new ContextCache();\n    return shadow(this, \"contextCache\", cache);\n  }\n}\n\n// Annex A. Arithmetic Integer Decoding Procedure\n// A.2 Procedure for decoding values\nfunction decodeInteger(contextCache, procedure, decoder) {\n  const contexts = contextCache.getContexts(procedure);\n  let prev = 1;\n\n  function readBits(length) {\n    let v = 0;\n    for (let i = 0; i < length; i++) {\n      const bit = decoder.readBit(contexts, prev);\n      prev = prev < 256 ? (prev << 1) | bit : (((prev << 1) | bit) & 511) | 256;\n      v = (v << 1) | bit;\n    }\n    return v >>> 0;\n  }\n\n  const sign = readBits(1);\n  // prettier-ignore\n  /* eslint-disable no-nested-ternary */\n  const value = readBits(1) ?\n                  (readBits(1) ?\n                    (readBits(1) ?\n                      (readBits(1) ?\n                        (readBits(1) ?\n                          (readBits(32) + 4436) :\n                        readBits(12) + 340) :\n                      readBits(8) + 84) :\n                    readBits(6) + 20) :\n                  readBits(4) + 4) :\n                readBits(2);\n  /* eslint-enable no-nested-ternary */\n  if (sign === 0) {\n    return value;\n  } else if (value > 0) {\n    return -value;\n  }\n  return null;\n}\n\n// A.3 The IAID decoding procedure\nfunction decodeIAID(contextCache, decoder, codeLength) {\n  const contexts = contextCache.getContexts(\"IAID\");\n\n  let prev = 1;\n  for (let i = 0; i < codeLength; i++) {\n    const bit = decoder.readBit(contexts, prev);\n    prev = (prev << 1) | bit;\n  }\n  if (codeLength < 31) {\n    return prev & ((1 << codeLength) - 1);\n  }\n  return prev & 0x7fffffff;\n}\n\n// 7.3 Segment types\nconst SegmentTypes = [\n  \"SymbolDictionary\",\n  null,\n  null,\n  null,\n  \"IntermediateTextRegion\",\n  null,\n  \"ImmediateTextRegion\",\n  \"ImmediateLosslessTextRegion\",\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  \"PatternDictionary\",\n  null,\n  null,\n  null,\n  \"IntermediateHalftoneRegion\",\n  null,\n  \"ImmediateHalftoneRegion\",\n  \"ImmediateLosslessHalftoneRegion\",\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  \"IntermediateGenericRegion\",\n  null,\n  \"ImmediateGenericRegion\",\n  \"ImmediateLosslessGenericRegion\",\n  \"IntermediateGenericRefinementRegion\",\n  null,\n  \"ImmediateGenericRefinementRegion\",\n  \"ImmediateLosslessGenericRefinementRegion\",\n  null,\n  null,\n  null,\n  null,\n  \"PageInformation\",\n  \"EndOfPage\",\n  \"EndOfStripe\",\n  \"EndOfFile\",\n  \"Profiles\",\n  \"Tables\",\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  \"Extension\",\n];\n\nconst CodingTemplates = [\n  [\n    { x: -1, y: -2 },\n    { x: 0, y: -2 },\n    { x: 1, y: -2 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: 2, y: -1 },\n    { x: -4, y: 0 },\n    { x: -3, y: 0 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n  [\n    { x: -1, y: -2 },\n    { x: 0, y: -2 },\n    { x: 1, y: -2 },\n    { x: 2, y: -2 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: 2, y: -1 },\n    { x: -3, y: 0 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n  [\n    { x: -1, y: -2 },\n    { x: 0, y: -2 },\n    { x: 1, y: -2 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n  [\n    { x: -3, y: -1 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: -4, y: 0 },\n    { x: -3, y: 0 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n];\n\nconst RefinementTemplates = [\n  {\n    coding: [\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -1, y: 0 },\n    ],\n    reference: [\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -1, y: 0 },\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: -1, y: 1 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ],\n  },\n  {\n    coding: [\n      { x: -1, y: -1 },\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -1, y: 0 },\n    ],\n    reference: [\n      { x: 0, y: -1 },\n      { x: -1, y: 0 },\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ],\n  },\n];\n\n// See 6.2.5.7 Decoding the bitmap.\nconst ReusedContexts = [\n  0x9b25, // 10011 0110010 0101\n  0x0795, // 0011 110010 101\n  0x00e5, // 001 11001 01\n  0x0195, // 011001 0101\n];\n\nconst RefinementReusedContexts = [\n  0x0020, // '000' + '0' (coding) + '00010000' + '0' (reference)\n  0x0008, // '0000' + '001000'\n];\n\nfunction decodeBitmapTemplate0(width, height, decodingContext) {\n  const decoder = decodingContext.decoder;\n  const contexts = decodingContext.contextCache.getContexts(\"GB\");\n  const bitmap = [];\n  let contextLabel, i, j, pixel, row, row1, row2;\n\n  // ...ooooo....\n  // ..ooooooo... Context template for current pixel (X)\n  // .ooooX...... (concatenate values of 'o'-pixels to get contextLabel)\n  const OLD_PIXEL_MASK = 0x7bf7; // 01111 0111111 0111\n\n  for (i = 0; i < height; i++) {\n    row = bitmap[i] = new Uint8Array(width);\n    row1 = i < 1 ? row : bitmap[i - 1];\n    row2 = i < 2 ? row : bitmap[i - 2];\n\n    // At the beginning of each row:\n    // Fill contextLabel with pixels that are above/right of (X)\n    contextLabel =\n      (row2[0] << 13) |\n      (row2[1] << 12) |\n      (row2[2] << 11) |\n      (row1[0] << 7) |\n      (row1[1] << 6) |\n      (row1[2] << 5) |\n      (row1[3] << 4);\n\n    for (j = 0; j < width; j++) {\n      row[j] = pixel = decoder.readBit(contexts, contextLabel);\n\n      // At each pixel: Clear contextLabel pixels that are shifted\n      // out of the context, then add new ones.\n      contextLabel =\n        ((contextLabel & OLD_PIXEL_MASK) << 1) |\n        (j + 3 < width ? row2[j + 3] << 11 : 0) |\n        (j + 4 < width ? row1[j + 4] << 4 : 0) |\n        pixel;\n    }\n  }\n\n  return bitmap;\n}\n\n// 6.2 Generic Region Decoding Procedure\nfunction decodeBitmap(\n  mmr,\n  width,\n  height,\n  templateIndex,\n  prediction,\n  skip,\n  at,\n  decodingContext\n) {\n  if (mmr) {\n    const input = new Reader(\n      decodingContext.data,\n      decodingContext.start,\n      decodingContext.end\n    );\n    return decodeMMRBitmap(input, width, height, false);\n  }\n\n  // Use optimized version for the most common case\n  if (\n    templateIndex === 0 &&\n    !skip &&\n    !prediction &&\n    at.length === 4 &&\n    at[0].x === 3 &&\n    at[0].y === -1 &&\n    at[1].x === -3 &&\n    at[1].y === -1 &&\n    at[2].x === 2 &&\n    at[2].y === -2 &&\n    at[3].x === -2 &&\n    at[3].y === -2\n  ) {\n    return decodeBitmapTemplate0(width, height, decodingContext);\n  }\n\n  const useskip = !!skip;\n  const template = CodingTemplates[templateIndex].concat(at);\n\n  // Sorting is non-standard, and it is not required. But sorting increases\n  // the number of template bits that can be reused from the previous\n  // contextLabel in the main loop.\n  template.sort(function (a, b) {\n    return a.y - b.y || a.x - b.x;\n  });\n\n  const templateLength = template.length;\n  const templateX = new Int8Array(templateLength);\n  const templateY = new Int8Array(templateLength);\n  const changingTemplateEntries = [];\n  let reuseMask = 0,\n    minX = 0,\n    maxX = 0,\n    minY = 0;\n  let c, k;\n\n  for (k = 0; k < templateLength; k++) {\n    templateX[k] = template[k].x;\n    templateY[k] = template[k].y;\n    minX = Math.min(minX, template[k].x);\n    maxX = Math.max(maxX, template[k].x);\n    minY = Math.min(minY, template[k].y);\n    // Check if the template pixel appears in two consecutive context labels,\n    // so it can be reused. Otherwise, we add it to the list of changing\n    // template entries.\n    if (\n      k < templateLength - 1 &&\n      template[k].y === template[k + 1].y &&\n      template[k].x === template[k + 1].x - 1\n    ) {\n      reuseMask |= 1 << (templateLength - 1 - k);\n    } else {\n      changingTemplateEntries.push(k);\n    }\n  }\n  const changingEntriesLength = changingTemplateEntries.length;\n\n  const changingTemplateX = new Int8Array(changingEntriesLength);\n  const changingTemplateY = new Int8Array(changingEntriesLength);\n  const changingTemplateBit = new Uint16Array(changingEntriesLength);\n  for (c = 0; c < changingEntriesLength; c++) {\n    k = changingTemplateEntries[c];\n    changingTemplateX[c] = template[k].x;\n    changingTemplateY[c] = template[k].y;\n    changingTemplateBit[c] = 1 << (templateLength - 1 - k);\n  }\n\n  // Get the safe bounding box edges from the width, height, minX, maxX, minY\n  const sbb_left = -minX;\n  const sbb_top = -minY;\n  const sbb_right = width - maxX;\n\n  const pseudoPixelContext = ReusedContexts[templateIndex];\n  let row = new Uint8Array(width);\n  const bitmap = [];\n\n  const decoder = decodingContext.decoder;\n  const contexts = decodingContext.contextCache.getContexts(\"GB\");\n\n  let ltp = 0,\n    j,\n    i0,\n    j0,\n    contextLabel = 0,\n    bit,\n    shift;\n  for (let i = 0; i < height; i++) {\n    if (prediction) {\n      const sltp = decoder.readBit(contexts, pseudoPixelContext);\n      ltp ^= sltp;\n      if (ltp) {\n        bitmap.push(row); // duplicate previous row\n        continue;\n      }\n    }\n    row = new Uint8Array(row);\n    bitmap.push(row);\n    for (j = 0; j < width; j++) {\n      if (useskip && skip[i][j]) {\n        row[j] = 0;\n        continue;\n      }\n      // Are we in the middle of a scanline, so we can reuse contextLabel\n      // bits?\n      if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n        // If yes, we can just shift the bits that are reusable and only\n        // fetch the remaining ones.\n        contextLabel = (contextLabel << 1) & reuseMask;\n        for (k = 0; k < changingEntriesLength; k++) {\n          i0 = i + changingTemplateY[k];\n          j0 = j + changingTemplateX[k];\n          bit = bitmap[i0][j0];\n          if (bit) {\n            bit = changingTemplateBit[k];\n            contextLabel |= bit;\n          }\n        }\n      } else {\n        // compute the contextLabel from scratch\n        contextLabel = 0;\n        shift = templateLength - 1;\n        for (k = 0; k < templateLength; k++, shift--) {\n          j0 = j + templateX[k];\n          if (j0 >= 0 && j0 < width) {\n            i0 = i + templateY[k];\n            if (i0 >= 0) {\n              bit = bitmap[i0][j0];\n              if (bit) {\n                contextLabel |= bit << shift;\n              }\n            }\n          }\n        }\n      }\n      const pixel = decoder.readBit(contexts, contextLabel);\n      row[j] = pixel;\n    }\n  }\n  return bitmap;\n}\n\n// 6.3.2 Generic Refinement Region Decoding Procedure\nfunction decodeRefinement(\n  width,\n  height,\n  templateIndex,\n  referenceBitmap,\n  offsetX,\n  offsetY,\n  prediction,\n  at,\n  decodingContext\n) {\n  let codingTemplate = RefinementTemplates[templateIndex].coding;\n  if (templateIndex === 0) {\n    codingTemplate = codingTemplate.concat([at[0]]);\n  }\n  const codingTemplateLength = codingTemplate.length;\n  const codingTemplateX = new Int32Array(codingTemplateLength);\n  const codingTemplateY = new Int32Array(codingTemplateLength);\n  let k;\n  for (k = 0; k < codingTemplateLength; k++) {\n    codingTemplateX[k] = codingTemplate[k].x;\n    codingTemplateY[k] = codingTemplate[k].y;\n  }\n\n  let referenceTemplate = RefinementTemplates[templateIndex].reference;\n  if (templateIndex === 0) {\n    referenceTemplate = referenceTemplate.concat([at[1]]);\n  }\n  const referenceTemplateLength = referenceTemplate.length;\n  const referenceTemplateX = new Int32Array(referenceTemplateLength);\n  const referenceTemplateY = new Int32Array(referenceTemplateLength);\n  for (k = 0; k < referenceTemplateLength; k++) {\n    referenceTemplateX[k] = referenceTemplate[k].x;\n    referenceTemplateY[k] = referenceTemplate[k].y;\n  }\n  const referenceWidth = referenceBitmap[0].length;\n  const referenceHeight = referenceBitmap.length;\n\n  const pseudoPixelContext = RefinementReusedContexts[templateIndex];\n  const bitmap = [];\n\n  const decoder = decodingContext.decoder;\n  const contexts = decodingContext.contextCache.getContexts(\"GR\");\n\n  let ltp = 0;\n  for (let i = 0; i < height; i++) {\n    if (prediction) {\n      const sltp = decoder.readBit(contexts, pseudoPixelContext);\n      ltp ^= sltp;\n      if (ltp) {\n        throw new Jbig2Error(\"prediction is not supported\");\n      }\n    }\n    const row = new Uint8Array(width);\n    bitmap.push(row);\n    for (let j = 0; j < width; j++) {\n      let i0, j0;\n      let contextLabel = 0;\n      for (k = 0; k < codingTemplateLength; k++) {\n        i0 = i + codingTemplateY[k];\n        j0 = j + codingTemplateX[k];\n        if (i0 < 0 || j0 < 0 || j0 >= width) {\n          contextLabel <<= 1; // out of bound pixel\n        } else {\n          contextLabel = (contextLabel << 1) | bitmap[i0][j0];\n        }\n      }\n      for (k = 0; k < referenceTemplateLength; k++) {\n        i0 = i + referenceTemplateY[k] - offsetY;\n        j0 = j + referenceTemplateX[k] - offsetX;\n        if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n          contextLabel <<= 1; // out of bound pixel\n        } else {\n          contextLabel = (contextLabel << 1) | referenceBitmap[i0][j0];\n        }\n      }\n      const pixel = decoder.readBit(contexts, contextLabel);\n      row[j] = pixel;\n    }\n  }\n\n  return bitmap;\n}\n\n// 6.5.5 Decoding the symbol dictionary\nfunction decodeSymbolDictionary(\n  huffman,\n  refinement,\n  symbols,\n  numberOfNewSymbols,\n  numberOfExportedSymbols,\n  huffmanTables,\n  templateIndex,\n  at,\n  refinementTemplateIndex,\n  refinementAt,\n  decodingContext,\n  huffmanInput\n) {\n  if (huffman && refinement) {\n    throw new Jbig2Error(\"symbol refinement with Huffman is not supported\");\n  }\n\n  const newSymbols = [];\n  let currentHeight = 0;\n  let symbolCodeLength = log2(symbols.length + numberOfNewSymbols);\n\n  const decoder = decodingContext.decoder;\n  const contextCache = decodingContext.contextCache;\n  let tableB1, symbolWidths;\n  if (huffman) {\n    tableB1 = getStandardTable(1); // standard table B.1\n    symbolWidths = [];\n    symbolCodeLength = Math.max(symbolCodeLength, 1); // 6.5.8.2.3\n  }\n\n  while (newSymbols.length < numberOfNewSymbols) {\n    const deltaHeight = huffman\n      ? huffmanTables.tableDeltaHeight.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IADH\", decoder); // 6.5.6\n    currentHeight += deltaHeight;\n    let currentWidth = 0,\n      totalWidth = 0;\n    const firstSymbol = huffman ? symbolWidths.length : 0;\n    while (true) {\n      const deltaWidth = huffman\n        ? huffmanTables.tableDeltaWidth.decode(huffmanInput)\n        : decodeInteger(contextCache, \"IADW\", decoder); // 6.5.7\n      if (deltaWidth === null) {\n        break; // OOB\n      }\n      currentWidth += deltaWidth;\n      totalWidth += currentWidth;\n      let bitmap;\n      if (refinement) {\n        // 6.5.8.2 Refinement/aggregate-coded symbol bitmap\n        const numberOfInstances = decodeInteger(contextCache, \"IAAI\", decoder);\n        if (numberOfInstances > 1) {\n          bitmap = decodeTextRegion(\n            huffman,\n            refinement,\n            currentWidth,\n            currentHeight,\n            0,\n            numberOfInstances,\n            1, // strip size\n            symbols.concat(newSymbols),\n            symbolCodeLength,\n            0, // transposed\n            0, // ds offset\n            1, // top left 7.4.3.1.1\n            0, // OR operator\n            huffmanTables,\n            refinementTemplateIndex,\n            refinementAt,\n            decodingContext,\n            0,\n            huffmanInput\n          );\n        } else {\n          const symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n          const rdx = decodeInteger(contextCache, \"IARDX\", decoder); // 6.4.11.3\n          const rdy = decodeInteger(contextCache, \"IARDY\", decoder); // 6.4.11.4\n          const symbol =\n            symbolId < symbols.length\n              ? symbols[symbolId]\n              : newSymbols[symbolId - symbols.length];\n          bitmap = decodeRefinement(\n            currentWidth,\n            currentHeight,\n            refinementTemplateIndex,\n            symbol,\n            rdx,\n            rdy,\n            false,\n            refinementAt,\n            decodingContext\n          );\n        }\n        newSymbols.push(bitmap);\n      } else if (huffman) {\n        // Store only symbol width and decode a collective bitmap when the\n        // height class is done.\n        symbolWidths.push(currentWidth);\n      } else {\n        // 6.5.8.1 Direct-coded symbol bitmap\n        bitmap = decodeBitmap(\n          false,\n          currentWidth,\n          currentHeight,\n          templateIndex,\n          false,\n          null,\n          at,\n          decodingContext\n        );\n        newSymbols.push(bitmap);\n      }\n    }\n    if (huffman && !refinement) {\n      // 6.5.9 Height class collective bitmap\n      const bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n      huffmanInput.byteAlign();\n      let collectiveBitmap;\n      if (bitmapSize === 0) {\n        // Uncompressed collective bitmap\n        collectiveBitmap = readUncompressedBitmap(\n          huffmanInput,\n          totalWidth,\n          currentHeight\n        );\n      } else {\n        // MMR collective bitmap\n        const originalEnd = huffmanInput.end;\n        const bitmapEnd = huffmanInput.position + bitmapSize;\n        huffmanInput.end = bitmapEnd;\n        collectiveBitmap = decodeMMRBitmap(\n          huffmanInput,\n          totalWidth,\n          currentHeight,\n          false\n        );\n        huffmanInput.end = originalEnd;\n        huffmanInput.position = bitmapEnd;\n      }\n      const numberOfSymbolsDecoded = symbolWidths.length;\n      if (firstSymbol === numberOfSymbolsDecoded - 1) {\n        // collectiveBitmap is a single symbol.\n        newSymbols.push(collectiveBitmap);\n      } else {\n        // Divide collectiveBitmap into symbols.\n        let i,\n          y,\n          xMin = 0,\n          xMax,\n          bitmapWidth,\n          symbolBitmap;\n        for (i = firstSymbol; i < numberOfSymbolsDecoded; i++) {\n          bitmapWidth = symbolWidths[i];\n          xMax = xMin + bitmapWidth;\n          symbolBitmap = [];\n          for (y = 0; y < currentHeight; y++) {\n            symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n          }\n          newSymbols.push(symbolBitmap);\n          xMin = xMax;\n        }\n      }\n    }\n  }\n\n  // 6.5.10 Exported symbols\n  const exportedSymbols = [],\n    flags = [];\n  let currentFlag = false,\n    i,\n    ii;\n  const totalSymbolsLength = symbols.length + numberOfNewSymbols;\n  while (flags.length < totalSymbolsLength) {\n    let runLength = huffman\n      ? tableB1.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IAEX\", decoder);\n    while (runLength--) {\n      flags.push(currentFlag);\n    }\n    currentFlag = !currentFlag;\n  }\n  for (i = 0, ii = symbols.length; i < ii; i++) {\n    if (flags[i]) {\n      exportedSymbols.push(symbols[i]);\n    }\n  }\n  for (let j = 0; j < numberOfNewSymbols; i++, j++) {\n    if (flags[i]) {\n      exportedSymbols.push(newSymbols[j]);\n    }\n  }\n  return exportedSymbols;\n}\n\nfunction decodeTextRegion(\n  huffman,\n  refinement,\n  width,\n  height,\n  defaultPixelValue,\n  numberOfSymbolInstances,\n  stripSize,\n  inputSymbols,\n  symbolCodeLength,\n  transposed,\n  dsOffset,\n  referenceCorner,\n  combinationOperator,\n  huffmanTables,\n  refinementTemplateIndex,\n  refinementAt,\n  decodingContext,\n  logStripSize,\n  huffmanInput\n) {\n  if (huffman && refinement) {\n    throw new Jbig2Error(\"refinement with Huffman is not supported\");\n  }\n\n  // Prepare bitmap\n  const bitmap = [];\n  let i, row;\n  for (i = 0; i < height; i++) {\n    row = new Uint8Array(width);\n    if (defaultPixelValue) {\n      for (let j = 0; j < width; j++) {\n        row[j] = defaultPixelValue;\n      }\n    }\n    bitmap.push(row);\n  }\n\n  const decoder = decodingContext.decoder;\n  const contextCache = decodingContext.contextCache;\n\n  let stripT = huffman\n    ? -huffmanTables.tableDeltaT.decode(huffmanInput)\n    : -decodeInteger(contextCache, \"IADT\", decoder); // 6.4.6\n  let firstS = 0;\n  i = 0;\n  while (i < numberOfSymbolInstances) {\n    const deltaT = huffman\n      ? huffmanTables.tableDeltaT.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IADT\", decoder); // 6.4.6\n    stripT += deltaT;\n\n    const deltaFirstS = huffman\n      ? huffmanTables.tableFirstS.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IAFS\", decoder); // 6.4.7\n    firstS += deltaFirstS;\n    let currentS = firstS;\n    do {\n      let currentT = 0; // 6.4.9\n      if (stripSize > 1) {\n        currentT = huffman\n          ? huffmanInput.readBits(logStripSize)\n          : decodeInteger(contextCache, \"IAIT\", decoder);\n      }\n      const t = stripSize * stripT + currentT;\n      const symbolId = huffman\n        ? huffmanTables.symbolIDTable.decode(huffmanInput)\n        : decodeIAID(contextCache, decoder, symbolCodeLength);\n      const applyRefinement =\n        refinement &&\n        (huffman\n          ? huffmanInput.readBit()\n          : decodeInteger(contextCache, \"IARI\", decoder));\n      let symbolBitmap = inputSymbols[symbolId];\n      let symbolWidth = symbolBitmap[0].length;\n      let symbolHeight = symbolBitmap.length;\n      if (applyRefinement) {\n        const rdw = decodeInteger(contextCache, \"IARDW\", decoder); // 6.4.11.1\n        const rdh = decodeInteger(contextCache, \"IARDH\", decoder); // 6.4.11.2\n        const rdx = decodeInteger(contextCache, \"IARDX\", decoder); // 6.4.11.3\n        const rdy = decodeInteger(contextCache, \"IARDY\", decoder); // 6.4.11.4\n        symbolWidth += rdw;\n        symbolHeight += rdh;\n        symbolBitmap = decodeRefinement(\n          symbolWidth,\n          symbolHeight,\n          refinementTemplateIndex,\n          symbolBitmap,\n          (rdw >> 1) + rdx,\n          (rdh >> 1) + rdy,\n          false,\n          refinementAt,\n          decodingContext\n        );\n      }\n      const offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n      const offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n      let s2, t2, symbolRow;\n      if (transposed) {\n        // Place Symbol Bitmap from T1,S1\n        for (s2 = 0; s2 < symbolHeight; s2++) {\n          row = bitmap[offsetS + s2];\n          if (!row) {\n            continue;\n          }\n          symbolRow = symbolBitmap[s2];\n          // To ignore Parts of Symbol bitmap which goes\n          // outside bitmap region\n          const maxWidth = Math.min(width - offsetT, symbolWidth);\n          switch (combinationOperator) {\n            case 0: // OR\n              for (t2 = 0; t2 < maxWidth; t2++) {\n                row[offsetT + t2] |= symbolRow[t2];\n              }\n              break;\n            case 2: // XOR\n              for (t2 = 0; t2 < maxWidth; t2++) {\n                row[offsetT + t2] ^= symbolRow[t2];\n              }\n              break;\n            default:\n              throw new Jbig2Error(\n                `operator ${combinationOperator} is not supported`\n              );\n          }\n        }\n        currentS += symbolHeight - 1;\n      } else {\n        for (t2 = 0; t2 < symbolHeight; t2++) {\n          row = bitmap[offsetT + t2];\n          if (!row) {\n            continue;\n          }\n          symbolRow = symbolBitmap[t2];\n          switch (combinationOperator) {\n            case 0: // OR\n              for (s2 = 0; s2 < symbolWidth; s2++) {\n                row[offsetS + s2] |= symbolRow[s2];\n              }\n              break;\n            case 2: // XOR\n              for (s2 = 0; s2 < symbolWidth; s2++) {\n                row[offsetS + s2] ^= symbolRow[s2];\n              }\n              break;\n            default:\n              throw new Jbig2Error(\n                `operator ${combinationOperator} is not supported`\n              );\n          }\n        }\n        currentS += symbolWidth - 1;\n      }\n      i++;\n      const deltaS = huffman\n        ? huffmanTables.tableDeltaS.decode(huffmanInput)\n        : decodeInteger(contextCache, \"IADS\", decoder); // 6.4.8\n      if (deltaS === null) {\n        break; // OOB\n      }\n      currentS += deltaS + dsOffset;\n    } while (true);\n  }\n  return bitmap;\n}\n\nfunction decodePatternDictionary(\n  mmr,\n  patternWidth,\n  patternHeight,\n  maxPatternIndex,\n  template,\n  decodingContext\n) {\n  const at = [];\n  if (!mmr) {\n    at.push({\n      x: -patternWidth,\n      y: 0,\n    });\n    if (template === 0) {\n      at.push(\n        {\n          x: -3,\n          y: -1,\n        },\n        {\n          x: 2,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -2,\n        }\n      );\n    }\n  }\n  const collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n  const collectiveBitmap = decodeBitmap(\n    mmr,\n    collectiveWidth,\n    patternHeight,\n    template,\n    false,\n    null,\n    at,\n    decodingContext\n  );\n  // Divide collective bitmap into patterns.\n  const patterns = [];\n  for (let i = 0; i <= maxPatternIndex; i++) {\n    const patternBitmap = [];\n    const xMin = patternWidth * i;\n    const xMax = xMin + patternWidth;\n    for (let y = 0; y < patternHeight; y++) {\n      patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n    }\n    patterns.push(patternBitmap);\n  }\n  return patterns;\n}\n\nfunction decodeHalftoneRegion(\n  mmr,\n  patterns,\n  template,\n  regionWidth,\n  regionHeight,\n  defaultPixelValue,\n  enableSkip,\n  combinationOperator,\n  gridWidth,\n  gridHeight,\n  gridOffsetX,\n  gridOffsetY,\n  gridVectorX,\n  gridVectorY,\n  decodingContext\n) {\n  const skip = null;\n  if (enableSkip) {\n    throw new Jbig2Error(\"skip is not supported\");\n  }\n  if (combinationOperator !== 0) {\n    throw new Jbig2Error(\n      `operator \"${combinationOperator}\" is not supported in halftone region`\n    );\n  }\n\n  // Prepare bitmap.\n  const regionBitmap = [];\n  let i, j, row;\n  for (i = 0; i < regionHeight; i++) {\n    row = new Uint8Array(regionWidth);\n    if (defaultPixelValue) {\n      for (j = 0; j < regionWidth; j++) {\n        row[j] = defaultPixelValue;\n      }\n    }\n    regionBitmap.push(row);\n  }\n\n  const numberOfPatterns = patterns.length;\n  const pattern0 = patterns[0];\n  const patternWidth = pattern0[0].length,\n    patternHeight = pattern0.length;\n  const bitsPerValue = log2(numberOfPatterns);\n  const at = [];\n  if (!mmr) {\n    at.push({\n      x: template <= 1 ? 3 : 2,\n      y: -1,\n    });\n    if (template === 0) {\n      at.push(\n        {\n          x: -3,\n          y: -1,\n        },\n        {\n          x: 2,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -2,\n        }\n      );\n    }\n  }\n  // Annex C. Gray-scale Image Decoding Procedure.\n  const grayScaleBitPlanes = [];\n  let mmrInput, bitmap;\n  if (mmr) {\n    // MMR bit planes are in one continuous stream. Only EOFB codes indicate\n    // the end of each bitmap, so EOFBs must be decoded.\n    mmrInput = new Reader(\n      decodingContext.data,\n      decodingContext.start,\n      decodingContext.end\n    );\n  }\n  for (i = bitsPerValue - 1; i >= 0; i--) {\n    if (mmr) {\n      bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n    } else {\n      bitmap = decodeBitmap(\n        false,\n        gridWidth,\n        gridHeight,\n        template,\n        false,\n        skip,\n        at,\n        decodingContext\n      );\n    }\n    grayScaleBitPlanes[i] = bitmap;\n  }\n  // 6.6.5.2 Rendering the patterns.\n  let mg, ng, bit, patternIndex, patternBitmap, x, y, patternRow, regionRow;\n  for (mg = 0; mg < gridHeight; mg++) {\n    for (ng = 0; ng < gridWidth; ng++) {\n      bit = 0;\n      patternIndex = 0;\n      for (j = bitsPerValue - 1; j >= 0; j--) {\n        bit ^= grayScaleBitPlanes[j][mg][ng]; // Gray decoding\n        patternIndex |= bit << j;\n      }\n      patternBitmap = patterns[patternIndex];\n      x = (gridOffsetX + mg * gridVectorY + ng * gridVectorX) >> 8;\n      y = (gridOffsetY + mg * gridVectorX - ng * gridVectorY) >> 8;\n      // Draw patternBitmap at (x, y).\n      if (\n        x >= 0 &&\n        x + patternWidth <= regionWidth &&\n        y >= 0 &&\n        y + patternHeight <= regionHeight\n      ) {\n        for (i = 0; i < patternHeight; i++) {\n          regionRow = regionBitmap[y + i];\n          patternRow = patternBitmap[i];\n          for (j = 0; j < patternWidth; j++) {\n            regionRow[x + j] |= patternRow[j];\n          }\n        }\n      } else {\n        let regionX, regionY;\n        for (i = 0; i < patternHeight; i++) {\n          regionY = y + i;\n          if (regionY < 0 || regionY >= regionHeight) {\n            continue;\n          }\n          regionRow = regionBitmap[regionY];\n          patternRow = patternBitmap[i];\n          for (j = 0; j < patternWidth; j++) {\n            regionX = x + j;\n            if (regionX >= 0 && regionX < regionWidth) {\n              regionRow[regionX] |= patternRow[j];\n            }\n          }\n        }\n      }\n    }\n  }\n  return regionBitmap;\n}\n\nfunction readSegmentHeader(data, start) {\n  const segmentHeader = {};\n  segmentHeader.number = readUint32(data, start);\n  const flags = data[start + 4];\n  const segmentType = flags & 0x3f;\n  if (!SegmentTypes[segmentType]) {\n    throw new Jbig2Error(\"invalid segment type: \" + segmentType);\n  }\n  segmentHeader.type = segmentType;\n  segmentHeader.typeName = SegmentTypes[segmentType];\n  segmentHeader.deferredNonRetain = !!(flags & 0x80);\n\n  const pageAssociationFieldSize = !!(flags & 0x40);\n  const referredFlags = data[start + 5];\n  let referredToCount = (referredFlags >> 5) & 7;\n  const retainBits = [referredFlags & 31];\n  let position = start + 6;\n  if (referredFlags === 7) {\n    referredToCount = readUint32(data, position - 1) & 0x1fffffff;\n    position += 3;\n    let bytes = (referredToCount + 7) >> 3;\n    retainBits[0] = data[position++];\n    while (--bytes > 0) {\n      retainBits.push(data[position++]);\n    }\n  } else if (referredFlags === 5 || referredFlags === 6) {\n    throw new Jbig2Error(\"invalid referred-to flags\");\n  }\n\n  segmentHeader.retainBits = retainBits;\n\n  let referredToSegmentNumberSize = 4;\n  if (segmentHeader.number <= 256) {\n    referredToSegmentNumberSize = 1;\n  } else if (segmentHeader.number <= 65536) {\n    referredToSegmentNumberSize = 2;\n  }\n  const referredTo = [];\n  let i, ii;\n  for (i = 0; i < referredToCount; i++) {\n    let number;\n    if (referredToSegmentNumberSize === 1) {\n      number = data[position];\n    } else if (referredToSegmentNumberSize === 2) {\n      number = readUint16(data, position);\n    } else {\n      number = readUint32(data, position);\n    }\n    referredTo.push(number);\n    position += referredToSegmentNumberSize;\n  }\n  segmentHeader.referredTo = referredTo;\n  if (!pageAssociationFieldSize) {\n    segmentHeader.pageAssociation = data[position++];\n  } else {\n    segmentHeader.pageAssociation = readUint32(data, position);\n    position += 4;\n  }\n  segmentHeader.length = readUint32(data, position);\n  position += 4;\n\n  if (segmentHeader.length === 0xffffffff) {\n    // 7.2.7 Segment data length, unknown segment length\n    if (segmentType === 38) {\n      // ImmediateGenericRegion\n      const genericRegionInfo = readRegionSegmentInformation(data, position);\n      const genericRegionSegmentFlags =\n        data[position + RegionSegmentInformationFieldLength];\n      const genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n      // searching for the segment end\n      const searchPatternLength = 6;\n      const searchPattern = new Uint8Array(searchPatternLength);\n      if (!genericRegionMmr) {\n        searchPattern[0] = 0xff;\n        searchPattern[1] = 0xac;\n      }\n      searchPattern[2] = (genericRegionInfo.height >>> 24) & 0xff;\n      searchPattern[3] = (genericRegionInfo.height >> 16) & 0xff;\n      searchPattern[4] = (genericRegionInfo.height >> 8) & 0xff;\n      searchPattern[5] = genericRegionInfo.height & 0xff;\n      for (i = position, ii = data.length; i < ii; i++) {\n        let j = 0;\n        while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n          j++;\n        }\n        if (j === searchPatternLength) {\n          segmentHeader.length = i + searchPatternLength;\n          break;\n        }\n      }\n      if (segmentHeader.length === 0xffffffff) {\n        throw new Jbig2Error(\"segment end was not found\");\n      }\n    } else {\n      throw new Jbig2Error(\"invalid unknown segment length\");\n    }\n  }\n  segmentHeader.headerEnd = position;\n  return segmentHeader;\n}\n\nfunction readSegments(header, data, start, end) {\n  const segments = [];\n  let position = start;\n  while (position < end) {\n    const segmentHeader = readSegmentHeader(data, position);\n    position = segmentHeader.headerEnd;\n    const segment = {\n      header: segmentHeader,\n      data,\n    };\n    if (!header.randomAccess) {\n      segment.start = position;\n      position += segmentHeader.length;\n      segment.end = position;\n    }\n    segments.push(segment);\n    if (segmentHeader.type === 51) {\n      break; // end of file is found\n    }\n  }\n  if (header.randomAccess) {\n    for (let i = 0, ii = segments.length; i < ii; i++) {\n      segments[i].start = position;\n      position += segments[i].header.length;\n      segments[i].end = position;\n    }\n  }\n  return segments;\n}\n\n// 7.4.1 Region segment information field\nfunction readRegionSegmentInformation(data, start) {\n  return {\n    width: readUint32(data, start),\n    height: readUint32(data, start + 4),\n    x: readUint32(data, start + 8),\n    y: readUint32(data, start + 12),\n    combinationOperator: data[start + 16] & 7,\n  };\n}\nconst RegionSegmentInformationFieldLength = 17;\n\nfunction processSegment(segment, visitor) {\n  const header = segment.header;\n\n  const data = segment.data,\n    end = segment.end;\n  let position = segment.start;\n  let args, at, i, atLength;\n  switch (header.type) {\n    case 0: // SymbolDictionary\n      // 7.4.2 Symbol dictionary segment syntax\n      const dictionary = {};\n      const dictionaryFlags = readUint16(data, position); // 7.4.2.1.1\n      dictionary.huffman = !!(dictionaryFlags & 1);\n      dictionary.refinement = !!(dictionaryFlags & 2);\n      dictionary.huffmanDHSelector = (dictionaryFlags >> 2) & 3;\n      dictionary.huffmanDWSelector = (dictionaryFlags >> 4) & 3;\n      dictionary.bitmapSizeSelector = (dictionaryFlags >> 6) & 1;\n      dictionary.aggregationInstancesSelector = (dictionaryFlags >> 7) & 1;\n      dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n      dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n      dictionary.template = (dictionaryFlags >> 10) & 3;\n      dictionary.refinementTemplate = (dictionaryFlags >> 12) & 1;\n      position += 2;\n      if (!dictionary.huffman) {\n        atLength = dictionary.template === 0 ? 4 : 1;\n        at = [];\n        for (i = 0; i < atLength; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        dictionary.at = at;\n      }\n      if (dictionary.refinement && !dictionary.refinementTemplate) {\n        at = [];\n        for (i = 0; i < 2; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        dictionary.refinementAt = at;\n      }\n      dictionary.numberOfExportedSymbols = readUint32(data, position);\n      position += 4;\n      dictionary.numberOfNewSymbols = readUint32(data, position);\n      position += 4;\n      args = [\n        dictionary,\n        header.number,\n        header.referredTo,\n        data,\n        position,\n        end,\n      ];\n      break;\n    case 6: // ImmediateTextRegion\n    case 7: // ImmediateLosslessTextRegion\n      const textRegion = {};\n      textRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      const textRegionSegmentFlags = readUint16(data, position);\n      position += 2;\n      textRegion.huffman = !!(textRegionSegmentFlags & 1);\n      textRegion.refinement = !!(textRegionSegmentFlags & 2);\n      textRegion.logStripSize = (textRegionSegmentFlags >> 2) & 3;\n      textRegion.stripSize = 1 << textRegion.logStripSize;\n      textRegion.referenceCorner = (textRegionSegmentFlags >> 4) & 3;\n      textRegion.transposed = !!(textRegionSegmentFlags & 64);\n      textRegion.combinationOperator = (textRegionSegmentFlags >> 7) & 3;\n      textRegion.defaultPixelValue = (textRegionSegmentFlags >> 9) & 1;\n      textRegion.dsOffset = (textRegionSegmentFlags << 17) >> 27;\n      textRegion.refinementTemplate = (textRegionSegmentFlags >> 15) & 1;\n      if (textRegion.huffman) {\n        const textRegionHuffmanFlags = readUint16(data, position);\n        position += 2;\n        textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n        textRegion.huffmanDS = (textRegionHuffmanFlags >> 2) & 3;\n        textRegion.huffmanDT = (textRegionHuffmanFlags >> 4) & 3;\n        textRegion.huffmanRefinementDW = (textRegionHuffmanFlags >> 6) & 3;\n        textRegion.huffmanRefinementDH = (textRegionHuffmanFlags >> 8) & 3;\n        textRegion.huffmanRefinementDX = (textRegionHuffmanFlags >> 10) & 3;\n        textRegion.huffmanRefinementDY = (textRegionHuffmanFlags >> 12) & 3;\n        textRegion.huffmanRefinementSizeSelector = !!(\n          textRegionHuffmanFlags & 0x4000\n        );\n      }\n      if (textRegion.refinement && !textRegion.refinementTemplate) {\n        at = [];\n        for (i = 0; i < 2; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        textRegion.refinementAt = at;\n      }\n      textRegion.numberOfSymbolInstances = readUint32(data, position);\n      position += 4;\n      args = [textRegion, header.referredTo, data, position, end];\n      break;\n    case 16: // PatternDictionary\n      // 7.4.4. Pattern dictionary segment syntax\n      const patternDictionary = {};\n      const patternDictionaryFlags = data[position++];\n      patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n      patternDictionary.template = (patternDictionaryFlags >> 1) & 3;\n      patternDictionary.patternWidth = data[position++];\n      patternDictionary.patternHeight = data[position++];\n      patternDictionary.maxPatternIndex = readUint32(data, position);\n      position += 4;\n      args = [patternDictionary, header.number, data, position, end];\n      break;\n    case 22: // ImmediateHalftoneRegion\n    case 23: // ImmediateLosslessHalftoneRegion\n      // 7.4.5 Halftone region segment syntax\n      const halftoneRegion = {};\n      halftoneRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      const halftoneRegionFlags = data[position++];\n      halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n      halftoneRegion.template = (halftoneRegionFlags >> 1) & 3;\n      halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n      halftoneRegion.combinationOperator = (halftoneRegionFlags >> 4) & 7;\n      halftoneRegion.defaultPixelValue = (halftoneRegionFlags >> 7) & 1;\n      halftoneRegion.gridWidth = readUint32(data, position);\n      position += 4;\n      halftoneRegion.gridHeight = readUint32(data, position);\n      position += 4;\n      halftoneRegion.gridOffsetX = readUint32(data, position) & 0xffffffff;\n      position += 4;\n      halftoneRegion.gridOffsetY = readUint32(data, position) & 0xffffffff;\n      position += 4;\n      halftoneRegion.gridVectorX = readUint16(data, position);\n      position += 2;\n      halftoneRegion.gridVectorY = readUint16(data, position);\n      position += 2;\n      args = [halftoneRegion, header.referredTo, data, position, end];\n      break;\n    case 38: // ImmediateGenericRegion\n    case 39: // ImmediateLosslessGenericRegion\n      const genericRegion = {};\n      genericRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      const genericRegionSegmentFlags = data[position++];\n      genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n      genericRegion.template = (genericRegionSegmentFlags >> 1) & 3;\n      genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n      if (!genericRegion.mmr) {\n        atLength = genericRegion.template === 0 ? 4 : 1;\n        at = [];\n        for (i = 0; i < atLength; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        genericRegion.at = at;\n      }\n      args = [genericRegion, data, position, end];\n      break;\n    case 48: // PageInformation\n      const pageInfo = {\n        width: readUint32(data, position),\n        height: readUint32(data, position + 4),\n        resolutionX: readUint32(data, position + 8),\n        resolutionY: readUint32(data, position + 12),\n      };\n      if (pageInfo.height === 0xffffffff) {\n        delete pageInfo.height;\n      }\n      const pageSegmentFlags = data[position + 16];\n      readUint16(data, position + 17); // pageStripingInformation\n      pageInfo.lossless = !!(pageSegmentFlags & 1);\n      pageInfo.refinement = !!(pageSegmentFlags & 2);\n      pageInfo.defaultPixelValue = (pageSegmentFlags >> 2) & 1;\n      pageInfo.combinationOperator = (pageSegmentFlags >> 3) & 3;\n      pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n      pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n      args = [pageInfo];\n      break;\n    case 49: // EndOfPage\n      break;\n    case 50: // EndOfStripe\n      break;\n    case 51: // EndOfFile\n      break;\n    case 53: // Tables\n      args = [header.number, data, position, end];\n      break;\n    case 62: // 7.4.15 defines 2 extension types which\n      // are comments and can be ignored.\n      break;\n    default:\n      throw new Jbig2Error(\n        `segment type ${header.typeName}(${header.type}) is not implemented`\n      );\n  }\n  const callbackName = \"on\" + header.typeName;\n  if (callbackName in visitor) {\n    // eslint-disable-next-line prefer-spread\n    visitor[callbackName].apply(visitor, args);\n  }\n}\n\nfunction processSegments(segments, visitor) {\n  for (let i = 0, ii = segments.length; i < ii; i++) {\n    processSegment(segments[i], visitor);\n  }\n}\n\nfunction parseJbig2Chunks(chunks) {\n  const visitor = new SimpleSegmentVisitor();\n  for (let i = 0, ii = chunks.length; i < ii; i++) {\n    const chunk = chunks[i];\n    const segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n    processSegments(segments, visitor);\n  }\n  return visitor.buffer;\n}\n\nfunction parseJbig2(data) {\n  if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"IMAGE_DECODERS\")) {\n    throw new Error(\"Not implemented: parseJbig2\");\n  }\n  const end = data.length;\n  let position = 0;\n\n  if (\n    data[position] !== 0x97 ||\n    data[position + 1] !== 0x4a ||\n    data[position + 2] !== 0x42 ||\n    data[position + 3] !== 0x32 ||\n    data[position + 4] !== 0x0d ||\n    data[position + 5] !== 0x0a ||\n    data[position + 6] !== 0x1a ||\n    data[position + 7] !== 0x0a\n  ) {\n    throw new Jbig2Error(\"parseJbig2 - invalid header.\");\n  }\n\n  const header = Object.create(null);\n  position += 8;\n  const flags = data[position++];\n  header.randomAccess = !(flags & 1);\n  if (!(flags & 2)) {\n    header.numberOfPages = readUint32(data, position);\n    position += 4;\n  }\n\n  const segments = readSegments(header, data, position, end);\n  const visitor = new SimpleSegmentVisitor();\n  processSegments(segments, visitor);\n\n  const { width, height } = visitor.currentPageInfo;\n  const bitPacked = visitor.buffer;\n  const imgData = new Uint8ClampedArray(width * height);\n  let q = 0,\n    k = 0;\n  for (let i = 0; i < height; i++) {\n    let mask = 0,\n      buffer;\n    for (let j = 0; j < width; j++) {\n      if (!mask) {\n        mask = 128;\n        buffer = bitPacked[k++];\n      }\n      imgData[q++] = buffer & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  return { imgData, width, height };\n}\n\nclass SimpleSegmentVisitor {\n  onPageInformation(info) {\n    this.currentPageInfo = info;\n    const rowSize = (info.width + 7) >> 3;\n    const buffer = new Uint8ClampedArray(rowSize * info.height);\n    // The contents of ArrayBuffers are initialized to 0.\n    // Fill the buffer with 0xFF only if info.defaultPixelValue is set\n    if (info.defaultPixelValue) {\n      buffer.fill(0xff);\n    }\n    this.buffer = buffer;\n  }\n\n  drawBitmap(regionInfo, bitmap) {\n    const pageInfo = this.currentPageInfo;\n    const width = regionInfo.width,\n      height = regionInfo.height;\n    const rowSize = (pageInfo.width + 7) >> 3;\n    const combinationOperator = pageInfo.combinationOperatorOverride\n      ? regionInfo.combinationOperator\n      : pageInfo.combinationOperator;\n    const buffer = this.buffer;\n    const mask0 = 128 >> (regionInfo.x & 7);\n    let offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n    let i, j, mask, offset;\n    switch (combinationOperator) {\n      case 0: // OR\n        for (i = 0; i < height; i++) {\n          mask = mask0;\n          offset = offset0;\n          for (j = 0; j < width; j++) {\n            if (bitmap[i][j]) {\n              buffer[offset] |= mask;\n            }\n            mask >>= 1;\n            if (!mask) {\n              mask = 128;\n              offset++;\n            }\n          }\n          offset0 += rowSize;\n        }\n        break;\n      case 2: // XOR\n        for (i = 0; i < height; i++) {\n          mask = mask0;\n          offset = offset0;\n          for (j = 0; j < width; j++) {\n            if (bitmap[i][j]) {\n              buffer[offset] ^= mask;\n            }\n            mask >>= 1;\n            if (!mask) {\n              mask = 128;\n              offset++;\n            }\n          }\n          offset0 += rowSize;\n        }\n        break;\n      default:\n        throw new Jbig2Error(\n          `operator ${combinationOperator} is not supported`\n        );\n    }\n  }\n\n  onImmediateGenericRegion(region, data, start, end) {\n    const regionInfo = region.info;\n    const decodingContext = new DecodingContext(data, start, end);\n    const bitmap = decodeBitmap(\n      region.mmr,\n      regionInfo.width,\n      regionInfo.height,\n      region.template,\n      region.prediction,\n      null,\n      region.at,\n      decodingContext\n    );\n    this.drawBitmap(regionInfo, bitmap);\n  }\n\n  onImmediateLosslessGenericRegion() {\n    this.onImmediateGenericRegion(...arguments);\n  }\n\n  onSymbolDictionary(\n    dictionary,\n    currentSegment,\n    referredSegments,\n    data,\n    start,\n    end\n  ) {\n    let huffmanTables, huffmanInput;\n    if (dictionary.huffman) {\n      huffmanTables = getSymbolDictionaryHuffmanTables(\n        dictionary,\n        referredSegments,\n        this.customTables\n      );\n      huffmanInput = new Reader(data, start, end);\n    }\n\n    // Combines exported symbols from all referred segments\n    let symbols = this.symbols;\n    if (!symbols) {\n      this.symbols = symbols = {};\n    }\n\n    const inputSymbols = [];\n    for (const referredSegment of referredSegments) {\n      const referredSymbols = symbols[referredSegment];\n      // referredSymbols is undefined when we have a reference to a Tables\n      // segment instead of a SymbolDictionary.\n      if (referredSymbols) {\n        inputSymbols.push(...referredSymbols);\n      }\n    }\n\n    const decodingContext = new DecodingContext(data, start, end);\n    symbols[currentSegment] = decodeSymbolDictionary(\n      dictionary.huffman,\n      dictionary.refinement,\n      inputSymbols,\n      dictionary.numberOfNewSymbols,\n      dictionary.numberOfExportedSymbols,\n      huffmanTables,\n      dictionary.template,\n      dictionary.at,\n      dictionary.refinementTemplate,\n      dictionary.refinementAt,\n      decodingContext,\n      huffmanInput\n    );\n  }\n\n  onImmediateTextRegion(region, referredSegments, data, start, end) {\n    const regionInfo = region.info;\n    let huffmanTables, huffmanInput;\n\n    // Combines exported symbols from all referred segments\n    const symbols = this.symbols;\n    const inputSymbols = [];\n    for (const referredSegment of referredSegments) {\n      const referredSymbols = symbols[referredSegment];\n      // referredSymbols is undefined when we have a reference to a Tables\n      // segment instead of a SymbolDictionary.\n      if (referredSymbols) {\n        inputSymbols.push(...referredSymbols);\n      }\n    }\n    const symbolCodeLength = log2(inputSymbols.length);\n    if (region.huffman) {\n      huffmanInput = new Reader(data, start, end);\n      huffmanTables = getTextRegionHuffmanTables(\n        region,\n        referredSegments,\n        this.customTables,\n        inputSymbols.length,\n        huffmanInput\n      );\n    }\n\n    const decodingContext = new DecodingContext(data, start, end);\n    const bitmap = decodeTextRegion(\n      region.huffman,\n      region.refinement,\n      regionInfo.width,\n      regionInfo.height,\n      region.defaultPixelValue,\n      region.numberOfSymbolInstances,\n      region.stripSize,\n      inputSymbols,\n      symbolCodeLength,\n      region.transposed,\n      region.dsOffset,\n      region.referenceCorner,\n      region.combinationOperator,\n      huffmanTables,\n      region.refinementTemplate,\n      region.refinementAt,\n      decodingContext,\n      region.logStripSize,\n      huffmanInput\n    );\n    this.drawBitmap(regionInfo, bitmap);\n  }\n\n  onImmediateLosslessTextRegion() {\n    this.onImmediateTextRegion(...arguments);\n  }\n\n  onPatternDictionary(dictionary, currentSegment, data, start, end) {\n    let patterns = this.patterns;\n    if (!patterns) {\n      this.patterns = patterns = {};\n    }\n    const decodingContext = new DecodingContext(data, start, end);\n    patterns[currentSegment] = decodePatternDictionary(\n      dictionary.mmr,\n      dictionary.patternWidth,\n      dictionary.patternHeight,\n      dictionary.maxPatternIndex,\n      dictionary.template,\n      decodingContext\n    );\n  }\n\n  onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n    // HalftoneRegion refers to exactly one PatternDictionary.\n    const patterns = this.patterns[referredSegments[0]];\n    const regionInfo = region.info;\n    const decodingContext = new DecodingContext(data, start, end);\n    const bitmap = decodeHalftoneRegion(\n      region.mmr,\n      patterns,\n      region.template,\n      regionInfo.width,\n      regionInfo.height,\n      region.defaultPixelValue,\n      region.enableSkip,\n      region.combinationOperator,\n      region.gridWidth,\n      region.gridHeight,\n      region.gridOffsetX,\n      region.gridOffsetY,\n      region.gridVectorX,\n      region.gridVectorY,\n      decodingContext\n    );\n    this.drawBitmap(regionInfo, bitmap);\n  }\n\n  onImmediateLosslessHalftoneRegion() {\n    this.onImmediateHalftoneRegion(...arguments);\n  }\n\n  onTables(currentSegment, data, start, end) {\n    let customTables = this.customTables;\n    if (!customTables) {\n      this.customTables = customTables = {};\n    }\n    customTables[currentSegment] = decodeTablesSegment(data, start, end);\n  }\n}\n\nclass HuffmanLine {\n  constructor(lineData) {\n    if (lineData.length === 2) {\n      // OOB line.\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      // Normal, upper range or lower range line.\n      // Upper range lines are processed like normal lines.\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === \"lower\";\n    }\n  }\n}\n\nclass HuffmanTreeNode {\n  constructor(line) {\n    this.children = [];\n    if (line) {\n      // Leaf node\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      // Intermediate or root node\n      this.isLeaf = false;\n    }\n  }\n\n  buildTree(line, shift) {\n    const bit = (line.prefixCode >> shift) & 1;\n    if (shift <= 0) {\n      // Create a leaf node.\n      this.children[bit] = new HuffmanTreeNode(line);\n    } else {\n      // Create an intermediate node and continue recursively.\n      let node = this.children[bit];\n      if (!node) {\n        this.children[bit] = node = new HuffmanTreeNode(null);\n      }\n      node.buildTree(line, shift - 1);\n    }\n  }\n\n  decodeNode(reader) {\n    if (this.isLeaf) {\n      if (this.isOOB) {\n        return null;\n      }\n      const htOffset = reader.readBits(this.rangeLength);\n      return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n    }\n    const node = this.children[reader.readBit()];\n    if (!node) {\n      throw new Jbig2Error(\"invalid Huffman data\");\n    }\n    return node.decodeNode(reader);\n  }\n}\n\nclass HuffmanTable {\n  constructor(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    // Create Huffman tree.\n    this.rootNode = new HuffmanTreeNode(null);\n    for (let i = 0, ii = lines.length; i < ii; i++) {\n      const line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n\n  decode(reader) {\n    return this.rootNode.decodeNode(reader);\n  }\n\n  assignPrefixCodes(lines) {\n    // Annex B.3 Assigning the prefix codes.\n    const linesLength = lines.length;\n    let prefixLengthMax = 0;\n    for (let i = 0; i < linesLength; i++) {\n      prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n    }\n\n    const histogram = new Uint32Array(prefixLengthMax + 1);\n    for (let i = 0; i < linesLength; i++) {\n      histogram[lines[i].prefixLength]++;\n    }\n    let currentLength = 1,\n      firstCode = 0,\n      currentCode,\n      currentTemp,\n      line;\n    histogram[0] = 0;\n\n    while (currentLength <= prefixLengthMax) {\n      firstCode = (firstCode + histogram[currentLength - 1]) << 1;\n      currentCode = firstCode;\n      currentTemp = 0;\n      while (currentTemp < linesLength) {\n        line = lines[currentTemp];\n        if (line.prefixLength === currentLength) {\n          line.prefixCode = currentCode;\n          currentCode++;\n        }\n        currentTemp++;\n      }\n      currentLength++;\n    }\n  }\n}\n\nfunction decodeTablesSegment(data, start, end) {\n  // Decodes a Tables segment, i.e., a custom Huffman table.\n  // Annex B.2 Code table structure.\n  const flags = data[start];\n  const lowestValue = readUint32(data, start + 1) & 0xffffffff;\n  const highestValue = readUint32(data, start + 5) & 0xffffffff;\n  const reader = new Reader(data, start + 9, end);\n\n  const prefixSizeBits = ((flags >> 1) & 7) + 1;\n  const rangeSizeBits = ((flags >> 4) & 7) + 1;\n  const lines = [];\n  let prefixLength,\n    rangeLength,\n    currentRangeLow = lowestValue;\n\n  // Normal table lines\n  do {\n    prefixLength = reader.readBits(prefixSizeBits);\n    rangeLength = reader.readBits(rangeSizeBits);\n    lines.push(\n      new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0])\n    );\n    currentRangeLow += 1 << rangeLength;\n  } while (currentRangeLow < highestValue);\n\n  // Lower range table line\n  prefixLength = reader.readBits(prefixSizeBits);\n  lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, \"lower\"]));\n\n  // Upper range table line\n  prefixLength = reader.readBits(prefixSizeBits);\n  lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n\n  if (flags & 1) {\n    // Out-of-band table line\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([prefixLength, 0]));\n  }\n\n  return new HuffmanTable(lines, false);\n}\n\nconst standardTablesCache = {};\n\nfunction getStandardTable(number) {\n  // Annex B.5 Standard Huffman tables.\n  let table = standardTablesCache[number];\n  if (table) {\n    return table;\n  }\n  let lines;\n  switch (number) {\n    case 1:\n      lines = [\n        [0, 1, 4, 0x0],\n        [16, 2, 8, 0x2],\n        [272, 3, 16, 0x6],\n        [65808, 3, 32, 0x7], // upper\n      ];\n      break;\n    case 2:\n      lines = [\n        [0, 1, 0, 0x0],\n        [1, 2, 0, 0x2],\n        [2, 3, 0, 0x6],\n        [3, 4, 3, 0xe],\n        [11, 5, 6, 0x1e],\n        [75, 6, 32, 0x3e], // upper\n        [6, 0x3f], // OOB\n      ];\n      break;\n    case 3:\n      lines = [\n        [-256, 8, 8, 0xfe],\n        [0, 1, 0, 0x0],\n        [1, 2, 0, 0x2],\n        [2, 3, 0, 0x6],\n        [3, 4, 3, 0xe],\n        [11, 5, 6, 0x1e],\n        [-257, 8, 32, 0xff, \"lower\"],\n        [75, 7, 32, 0x7e], // upper\n        [6, 0x3e], // OOB\n      ];\n      break;\n    case 4:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 2, 0, 0x2],\n        [3, 3, 0, 0x6],\n        [4, 4, 3, 0xe],\n        [12, 5, 6, 0x1e],\n        [76, 5, 32, 0x1f], // upper\n      ];\n      break;\n    case 5:\n      lines = [\n        [-255, 7, 8, 0x7e],\n        [1, 1, 0, 0x0],\n        [2, 2, 0, 0x2],\n        [3, 3, 0, 0x6],\n        [4, 4, 3, 0xe],\n        [12, 5, 6, 0x1e],\n        [-256, 7, 32, 0x7f, \"lower\"],\n        [76, 6, 32, 0x3e], // upper\n      ];\n      break;\n    case 6:\n      lines = [\n        [-2048, 5, 10, 0x1c],\n        [-1024, 4, 9, 0x8],\n        [-512, 4, 8, 0x9],\n        [-256, 4, 7, 0xa],\n        [-128, 5, 6, 0x1d],\n        [-64, 5, 5, 0x1e],\n        [-32, 4, 5, 0xb],\n        [0, 2, 7, 0x0],\n        [128, 3, 7, 0x2],\n        [256, 3, 8, 0x3],\n        [512, 4, 9, 0xc],\n        [1024, 4, 10, 0xd],\n        [-2049, 6, 32, 0x3e, \"lower\"],\n        [2048, 6, 32, 0x3f], // upper\n      ];\n      break;\n    case 7:\n      lines = [\n        [-1024, 4, 9, 0x8],\n        [-512, 3, 8, 0x0],\n        [-256, 4, 7, 0x9],\n        [-128, 5, 6, 0x1a],\n        [-64, 5, 5, 0x1b],\n        [-32, 4, 5, 0xa],\n        [0, 4, 5, 0xb],\n        [32, 5, 5, 0x1c],\n        [64, 5, 6, 0x1d],\n        [128, 4, 7, 0xc],\n        [256, 3, 8, 0x1],\n        [512, 3, 9, 0x2],\n        [1024, 3, 10, 0x3],\n        [-1025, 5, 32, 0x1e, \"lower\"],\n        [2048, 5, 32, 0x1f], // upper\n      ];\n      break;\n    case 8:\n      lines = [\n        [-15, 8, 3, 0xfc],\n        [-7, 9, 1, 0x1fc],\n        [-5, 8, 1, 0xfd],\n        [-3, 9, 0, 0x1fd],\n        [-2, 7, 0, 0x7c],\n        [-1, 4, 0, 0xa],\n        [0, 2, 1, 0x0],\n        [2, 5, 0, 0x1a],\n        [3, 6, 0, 0x3a],\n        [4, 3, 4, 0x4],\n        [20, 6, 1, 0x3b],\n        [22, 4, 4, 0xb],\n        [38, 4, 5, 0xc],\n        [70, 5, 6, 0x1b],\n        [134, 5, 7, 0x1c],\n        [262, 6, 7, 0x3c],\n        [390, 7, 8, 0x7d],\n        [646, 6, 10, 0x3d],\n        [-16, 9, 32, 0x1fe, \"lower\"],\n        [1670, 9, 32, 0x1ff], // upper\n        [2, 0x1], // OOB\n      ];\n      break;\n    case 9:\n      lines = [\n        [-31, 8, 4, 0xfc],\n        [-15, 9, 2, 0x1fc],\n        [-11, 8, 2, 0xfd],\n        [-7, 9, 1, 0x1fd],\n        [-5, 7, 1, 0x7c],\n        [-3, 4, 1, 0xa],\n        [-1, 3, 1, 0x2],\n        [1, 3, 1, 0x3],\n        [3, 5, 1, 0x1a],\n        [5, 6, 1, 0x3a],\n        [7, 3, 5, 0x4],\n        [39, 6, 2, 0x3b],\n        [43, 4, 5, 0xb],\n        [75, 4, 6, 0xc],\n        [139, 5, 7, 0x1b],\n        [267, 5, 8, 0x1c],\n        [523, 6, 8, 0x3c],\n        [779, 7, 9, 0x7d],\n        [1291, 6, 11, 0x3d],\n        [-32, 9, 32, 0x1fe, \"lower\"],\n        [3339, 9, 32, 0x1ff], // upper\n        [2, 0x0], // OOB\n      ];\n      break;\n    case 10:\n      lines = [\n        [-21, 7, 4, 0x7a],\n        [-5, 8, 0, 0xfc],\n        [-4, 7, 0, 0x7b],\n        [-3, 5, 0, 0x18],\n        [-2, 2, 2, 0x0],\n        [2, 5, 0, 0x19],\n        [3, 6, 0, 0x36],\n        [4, 7, 0, 0x7c],\n        [5, 8, 0, 0xfd],\n        [6, 2, 6, 0x1],\n        [70, 5, 5, 0x1a],\n        [102, 6, 5, 0x37],\n        [134, 6, 6, 0x38],\n        [198, 6, 7, 0x39],\n        [326, 6, 8, 0x3a],\n        [582, 6, 9, 0x3b],\n        [1094, 6, 10, 0x3c],\n        [2118, 7, 11, 0x7d],\n        [-22, 8, 32, 0xfe, \"lower\"],\n        [4166, 8, 32, 0xff], // upper\n        [2, 0x2], // OOB\n      ];\n      break;\n    case 11:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 2, 1, 0x2],\n        [4, 4, 0, 0xc],\n        [5, 4, 1, 0xd],\n        [7, 5, 1, 0x1c],\n        [9, 5, 2, 0x1d],\n        [13, 6, 2, 0x3c],\n        [17, 7, 2, 0x7a],\n        [21, 7, 3, 0x7b],\n        [29, 7, 4, 0x7c],\n        [45, 7, 5, 0x7d],\n        [77, 7, 6, 0x7e],\n        [141, 7, 32, 0x7f], // upper\n      ];\n      break;\n    case 12:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 2, 0, 0x2],\n        [3, 3, 1, 0x6],\n        [5, 5, 0, 0x1c],\n        [6, 5, 1, 0x1d],\n        [8, 6, 1, 0x3c],\n        [10, 7, 0, 0x7a],\n        [11, 7, 1, 0x7b],\n        [13, 7, 2, 0x7c],\n        [17, 7, 3, 0x7d],\n        [25, 7, 4, 0x7e],\n        [41, 8, 5, 0xfe],\n        [73, 8, 32, 0xff], // upper\n      ];\n      break;\n    case 13:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 3, 0, 0x4],\n        [3, 4, 0, 0xc],\n        [4, 5, 0, 0x1c],\n        [5, 4, 1, 0xd],\n        [7, 3, 3, 0x5],\n        [15, 6, 1, 0x3a],\n        [17, 6, 2, 0x3b],\n        [21, 6, 3, 0x3c],\n        [29, 6, 4, 0x3d],\n        [45, 6, 5, 0x3e],\n        [77, 7, 6, 0x7e],\n        [141, 7, 32, 0x7f], // upper\n      ];\n      break;\n    case 14:\n      lines = [\n        [-2, 3, 0, 0x4],\n        [-1, 3, 0, 0x5],\n        [0, 1, 0, 0x0],\n        [1, 3, 0, 0x6],\n        [2, 3, 0, 0x7],\n      ];\n      break;\n    case 15:\n      lines = [\n        [-24, 7, 4, 0x7c],\n        [-8, 6, 2, 0x3c],\n        [-4, 5, 1, 0x1c],\n        [-2, 4, 0, 0xc],\n        [-1, 3, 0, 0x4],\n        [0, 1, 0, 0x0],\n        [1, 3, 0, 0x5],\n        [2, 4, 0, 0xd],\n        [3, 5, 1, 0x1d],\n        [5, 6, 2, 0x3d],\n        [9, 7, 4, 0x7d],\n        [-25, 7, 32, 0x7e, \"lower\"],\n        [25, 7, 32, 0x7f], // upper\n      ];\n      break;\n    default:\n      throw new Jbig2Error(`standard table B.${number} does not exist`);\n  }\n\n  for (let i = 0, ii = lines.length; i < ii; i++) {\n    lines[i] = new HuffmanLine(lines[i]);\n  }\n  table = new HuffmanTable(lines, true);\n  standardTablesCache[number] = table;\n  return table;\n}\n\nclass Reader {\n  constructor(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n\n  readBit() {\n    if (this.shift < 0) {\n      if (this.position >= this.end) {\n        throw new Jbig2Error(\"end of data while reading bit\");\n      }\n      this.currentByte = this.data[this.position++];\n      this.shift = 7;\n    }\n    const bit = (this.currentByte >> this.shift) & 1;\n    this.shift--;\n    return bit;\n  }\n\n  readBits(numBits) {\n    let result = 0,\n      i;\n    for (i = numBits - 1; i >= 0; i--) {\n      result |= this.readBit() << i;\n    }\n    return result;\n  }\n\n  byteAlign() {\n    this.shift = -1;\n  }\n\n  next() {\n    if (this.position >= this.end) {\n      return -1;\n    }\n    return this.data[this.position++];\n  }\n}\n\nfunction getCustomHuffmanTable(index, referredTo, customTables) {\n  // Returns a Tables segment that has been earlier decoded.\n  // See 7.4.2.1.6 (symbol dictionary) or 7.4.3.1.6 (text region).\n  let currentIndex = 0;\n  for (let i = 0, ii = referredTo.length; i < ii; i++) {\n    const table = customTables[referredTo[i]];\n    if (table) {\n      if (index === currentIndex) {\n        return table;\n      }\n      currentIndex++;\n    }\n  }\n  throw new Jbig2Error(\"can't find custom Huffman table\");\n}\n\nfunction getTextRegionHuffmanTables(\n  textRegion,\n  referredTo,\n  customTables,\n  numberOfSymbols,\n  reader\n) {\n  // 7.4.3.1.7 Symbol ID Huffman table decoding\n\n  // Read code lengths for RUNCODEs 0...34.\n  const codes = [];\n  for (let i = 0; i <= 34; i++) {\n    const codeLength = reader.readBits(4);\n    codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n  }\n  // Assign Huffman codes for RUNCODEs.\n  const runCodesTable = new HuffmanTable(codes, false);\n\n  // Read a Huffman code using the assignment above.\n  // Interpret the RUNCODE codes and the additional bits (if any).\n  codes.length = 0;\n  for (let i = 0; i < numberOfSymbols; ) {\n    const codeLength = runCodesTable.decode(reader);\n    if (codeLength >= 32) {\n      let repeatedLength, numberOfRepeats, j;\n      switch (codeLength) {\n        case 32:\n          if (i === 0) {\n            throw new Jbig2Error(\"no previous value in symbol ID table\");\n          }\n          numberOfRepeats = reader.readBits(2) + 3;\n          repeatedLength = codes[i - 1].prefixLength;\n          break;\n        case 33:\n          numberOfRepeats = reader.readBits(3) + 3;\n          repeatedLength = 0;\n          break;\n        case 34:\n          numberOfRepeats = reader.readBits(7) + 11;\n          repeatedLength = 0;\n          break;\n        default:\n          throw new Jbig2Error(\"invalid code length in symbol ID table\");\n      }\n      for (j = 0; j < numberOfRepeats; j++) {\n        codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n        i++;\n      }\n    } else {\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n      i++;\n    }\n  }\n  reader.byteAlign();\n  const symbolIDTable = new HuffmanTable(codes, false);\n\n  // 7.4.3.1.6 Text region segment Huffman table selection\n\n  let customIndex = 0,\n    tableFirstS,\n    tableDeltaS,\n    tableDeltaT;\n\n  switch (textRegion.huffmanFS) {\n    case 0:\n    case 1:\n      tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n      break;\n    case 3:\n      tableFirstS = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman FS selector\");\n  }\n\n  switch (textRegion.huffmanDS) {\n    case 0:\n    case 1:\n    case 2:\n      tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n      break;\n    case 3:\n      tableDeltaS = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DS selector\");\n  }\n\n  switch (textRegion.huffmanDT) {\n    case 0:\n    case 1:\n    case 2:\n      tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n      break;\n    case 3:\n      tableDeltaT = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DT selector\");\n  }\n\n  if (textRegion.refinement) {\n    // Load tables RDW, RDH, RDX and RDY.\n    throw new Jbig2Error(\"refinement with Huffman is not supported\");\n  }\n\n  return {\n    symbolIDTable,\n    tableFirstS,\n    tableDeltaS,\n    tableDeltaT,\n  };\n}\n\nfunction getSymbolDictionaryHuffmanTables(\n  dictionary,\n  referredTo,\n  customTables\n) {\n  // 7.4.2.1.6 Symbol dictionary segment Huffman table selection\n\n  let customIndex = 0,\n    tableDeltaHeight,\n    tableDeltaWidth;\n  switch (dictionary.huffmanDHSelector) {\n    case 0:\n    case 1:\n      tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n      break;\n    case 3:\n      tableDeltaHeight = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DH selector\");\n  }\n\n  switch (dictionary.huffmanDWSelector) {\n    case 0:\n    case 1:\n      tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n      break;\n    case 3:\n      tableDeltaWidth = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DW selector\");\n  }\n\n  let tableBitmapSize, tableAggregateInstances;\n  if (dictionary.bitmapSizeSelector) {\n    tableBitmapSize = getCustomHuffmanTable(\n      customIndex,\n      referredTo,\n      customTables\n    );\n    customIndex++;\n  } else {\n    tableBitmapSize = getStandardTable(1);\n  }\n\n  if (dictionary.aggregationInstancesSelector) {\n    tableAggregateInstances = getCustomHuffmanTable(\n      customIndex,\n      referredTo,\n      customTables\n    );\n  } else {\n    tableAggregateInstances = getStandardTable(1);\n  }\n\n  return {\n    tableDeltaHeight,\n    tableDeltaWidth,\n    tableBitmapSize,\n    tableAggregateInstances,\n  };\n}\n\nfunction readUncompressedBitmap(reader, width, height) {\n  const bitmap = [];\n  for (let y = 0; y < height; y++) {\n    const row = new Uint8Array(width);\n    bitmap.push(row);\n    for (let x = 0; x < width; x++) {\n      row[x] = reader.readBit();\n    }\n    reader.byteAlign();\n  }\n  return bitmap;\n}\n\nfunction decodeMMRBitmap(input, width, height, endOfBlock) {\n  // MMR is the same compression algorithm as the PDF filter\n  // CCITTFaxDecode with /K -1.\n  const params = {\n    K: -1,\n    Columns: width,\n    Rows: height,\n    BlackIs1: true,\n    EndOfBlock: endOfBlock,\n  };\n  const decoder = new CCITTFaxDecoder(input, params);\n  const bitmap = [];\n  let currentByte,\n    eof = false;\n\n  for (let y = 0; y < height; y++) {\n    const row = new Uint8Array(width);\n    bitmap.push(row);\n    let shift = -1;\n    for (let x = 0; x < width; x++) {\n      if (shift < 0) {\n        currentByte = decoder.readNextChar();\n        if (currentByte === -1) {\n          // Set the rest of the bits to zero.\n          currentByte = 0;\n          eof = true;\n        }\n        shift = 7;\n      }\n      row[x] = (currentByte >> shift) & 1;\n      shift--;\n    }\n  }\n\n  if (endOfBlock && !eof) {\n    // Read until EOFB has been consumed.\n    const lookForEOFLimit = 5;\n    for (let i = 0; i < lookForEOFLimit; i++) {\n      if (decoder.readNextChar() === -1) {\n        break;\n      }\n    }\n  }\n\n  return bitmap;\n}\n\nclass Jbig2Image {\n  parseChunks(chunks) {\n    return parseJbig2Chunks(chunks);\n  }\n\n  parse(data) {\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      throw new Error(\"Not implemented: Jbig2Image.parse\");\n    }\n    const { imgData, width, height } = parseJbig2(data);\n    this.width = width;\n    this.height = height;\n    return imgData;\n  }\n}\n\nexport { Jbig2Image };\n","/* Copyright 2019 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnnotationEditorPrefix,\n  assert,\n  BaseException,\n  FontType,\n  objectSize,\n  StreamType,\n  stringToPDFString,\n  warn,\n} from \"../shared/util.js\";\nimport { Dict, isName, Ref, RefSet } from \"./primitives.js\";\nimport { BaseStream } from \"./base_stream.js\";\n\nconst PDF_VERSION_REGEXP = /^[1-9]\\.\\d$/;\n\nfunction getLookupTableFactory(initializer) {\n  let lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\n\nfunction getArrayLookupTableFactory(initializer) {\n  let lookup;\n  return function () {\n    if (initializer) {\n      let arr = initializer();\n      initializer = null;\n      lookup = Object.create(null);\n      for (let i = 0, ii = arr.length; i < ii; i += 2) {\n        lookup[arr[i]] = arr[i + 1];\n      }\n      arr = null;\n    }\n    return lookup;\n  };\n}\n\nclass MissingDataException extends BaseException {\n  constructor(begin, end) {\n    super(`Missing data [${begin}, ${end})`, \"MissingDataException\");\n    this.begin = begin;\n    this.end = end;\n  }\n}\n\nclass ParserEOFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"ParserEOFException\");\n  }\n}\n\nclass XRefEntryException extends BaseException {\n  constructor(msg) {\n    super(msg, \"XRefEntryException\");\n  }\n}\n\nclass XRefParseException extends BaseException {\n  constructor(msg) {\n    super(msg, \"XRefParseException\");\n  }\n}\n\nclass DocStats {\n  constructor(handler) {\n    this._handler = handler;\n\n    this._streamTypes = new Set();\n    this._fontTypes = new Set();\n  }\n\n  _send() {\n    const streamTypes = Object.create(null),\n      fontTypes = Object.create(null);\n    for (const type of this._streamTypes) {\n      streamTypes[type] = true;\n    }\n    for (const type of this._fontTypes) {\n      fontTypes[type] = true;\n    }\n    this._handler.send(\"DocStats\", { streamTypes, fontTypes });\n  }\n\n  addStreamType(type) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(StreamType[type] === type, 'addStreamType: Invalid \"type\" value.');\n    }\n    if (this._streamTypes.has(type)) {\n      return;\n    }\n    this._streamTypes.add(type);\n    this._send();\n  }\n\n  addFontType(type) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(FontType[type] === type, 'addFontType: Invalid \"type\" value.');\n    }\n    if (this._fontTypes.has(type)) {\n      return;\n    }\n    this._fontTypes.add(type);\n    this._send();\n  }\n}\n\n/**\n * Get the value of an inheritable property.\n *\n * If the PDF specification explicitly lists a property in a dictionary as\n * inheritable, then the value of the property may be present in the dictionary\n * itself or in one or more parents of the dictionary.\n *\n * If the key is not found in the tree, `undefined` is returned. Otherwise,\n * the value for the key is returned or, if `stopWhenFound` is `false`, a list\n * of values is returned.\n *\n * @param {Dict} dict - Dictionary from where to start the traversal.\n * @param {string} key - The key of the property to find the value for.\n * @param {boolean} getArray - Whether or not the value should be fetched as an\n *   array. The default value is `false`.\n * @param {boolean} stopWhenFound - Whether or not to stop the traversal when\n *   the key is found. If set to `false`, we always walk up the entire parent\n *   chain, for example to be able to find `\\Resources` placed on multiple\n *   levels of the tree. The default value is `true`.\n */\nfunction getInheritableProperty({\n  dict,\n  key,\n  getArray = false,\n  stopWhenFound = true,\n}) {\n  let values;\n  const visited = new RefSet();\n\n  while (dict instanceof Dict && !(dict.objId && visited.has(dict.objId))) {\n    if (dict.objId) {\n      visited.put(dict.objId);\n    }\n    const value = getArray ? dict.getArray(key) : dict.get(key);\n    if (value !== undefined) {\n      if (stopWhenFound) {\n        return value;\n      }\n      if (!values) {\n        values = [];\n      }\n      values.push(value);\n    }\n    dict = dict.get(\"Parent\");\n  }\n  return values;\n}\n\n// prettier-ignore\nconst ROMAN_NUMBER_MAP = [\n  \"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\",\n  \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\",\n  \"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"\n];\n\n/**\n * Converts positive integers to (upper case) Roman numerals.\n * @param {number} number - The number that should be converted.\n * @param {boolean} lowerCase - Indicates if the result should be converted\n *   to lower case letters. The default value is `false`.\n * @returns {string} The resulting Roman number.\n */\nfunction toRomanNumerals(number, lowerCase = false) {\n  assert(\n    Number.isInteger(number) && number > 0,\n    \"The number should be a positive integer.\"\n  );\n  const romanBuf = [];\n  let pos;\n  // Thousands\n  while (number >= 1000) {\n    number -= 1000;\n    romanBuf.push(\"M\");\n  }\n  // Hundreds\n  pos = (number / 100) | 0;\n  number %= 100;\n  romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n  // Tens\n  pos = (number / 10) | 0;\n  number %= 10;\n  romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n  // Ones\n  romanBuf.push(ROMAN_NUMBER_MAP[20 + number]); // eslint-disable-line unicorn/no-array-push-push\n\n  const romanStr = romanBuf.join(\"\");\n  return lowerCase ? romanStr.toLowerCase() : romanStr;\n}\n\n// Calculate the base 2 logarithm of the number `x`. This differs from the\n// native function in the sense that it returns the ceiling value and that it\n// returns 0 instead of `Infinity`/`NaN` for `x` values smaller than/equal to 0.\nfunction log2(x) {\n  if (x <= 0) {\n    return 0;\n  }\n  return Math.ceil(Math.log2(x));\n}\n\nfunction readInt8(data, offset) {\n  return (data[offset] << 24) >> 24;\n}\n\nfunction readUint16(data, offset) {\n  return (data[offset] << 8) | data[offset + 1];\n}\n\nfunction readUint32(data, offset) {\n  return (\n    ((data[offset] << 24) |\n      (data[offset + 1] << 16) |\n      (data[offset + 2] << 8) |\n      data[offset + 3]) >>>\n    0\n  );\n}\n\n// Checks if ch is one of the following characters: SPACE, TAB, CR or LF.\nfunction isWhiteSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n}\n\n/**\n * AcroForm field names use an array like notation to refer to\n * repeated XFA elements e.g. foo.bar[nnn].\n * see: XFA Spec Chapter 3 - Repeated Elements\n *\n * @param {string} path - XFA path name.\n * @returns {Array} - Array of Objects with the name and pos of\n * each part of the path.\n */\nfunction parseXFAPath(path) {\n  const positionPattern = /(.+)\\[(\\d+)\\]$/;\n  return path.split(\".\").map(component => {\n    const m = component.match(positionPattern);\n    if (m) {\n      return { name: m[1], pos: parseInt(m[2], 10) };\n    }\n    return { name: component, pos: 0 };\n  });\n}\n\nfunction escapePDFName(str) {\n  const buffer = [];\n  let start = 0;\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    // Whitespace or delimiters aren't regular chars, so escape them.\n    if (\n      char < 0x21 ||\n      char > 0x7e ||\n      char === 0x23 /* # */ ||\n      char === 0x28 /* ( */ ||\n      char === 0x29 /* ) */ ||\n      char === 0x3c /* < */ ||\n      char === 0x3e /* > */ ||\n      char === 0x5b /* [ */ ||\n      char === 0x5d /* ] */ ||\n      char === 0x7b /* { */ ||\n      char === 0x7d /* } */ ||\n      char === 0x2f /* / */ ||\n      char === 0x25 /* % */\n    ) {\n      if (start < i) {\n        buffer.push(str.substring(start, i));\n      }\n      buffer.push(`#${char.toString(16)}`);\n      start = i + 1;\n    }\n  }\n\n  if (buffer.length === 0) {\n    return str;\n  }\n\n  if (start < str.length) {\n    buffer.push(str.substring(start, str.length));\n  }\n\n  return buffer.join(\"\");\n}\n\n// Replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\" by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n// in order to write it in a PDF file.\nfunction escapeString(str) {\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction _collectJS(entry, xref, list, parents) {\n  if (!entry) {\n    return;\n  }\n\n  let parent = null;\n  if (entry instanceof Ref) {\n    if (parents.has(entry)) {\n      // If we've already found entry then we've a cycle.\n      return;\n    }\n    parent = entry;\n    parents.put(parent);\n    entry = xref.fetch(entry);\n  }\n  if (Array.isArray(entry)) {\n    for (const element of entry) {\n      _collectJS(element, xref, list, parents);\n    }\n  } else if (entry instanceof Dict) {\n    if (isName(entry.get(\"S\"), \"JavaScript\")) {\n      const js = entry.get(\"JS\");\n      let code;\n      if (js instanceof BaseStream) {\n        code = js.getString();\n      } else if (typeof js === \"string\") {\n        code = js;\n      }\n      code = code && stringToPDFString(code).replace(/\\u0000/g, \"\");\n      if (code) {\n        list.push(code);\n      }\n    }\n    _collectJS(entry.getRaw(\"Next\"), xref, list, parents);\n  }\n\n  if (parent) {\n    parents.remove(parent);\n  }\n}\n\nfunction collectActions(xref, dict, eventType) {\n  const actions = Object.create(null);\n  const additionalActionsDicts = getInheritableProperty({\n    dict,\n    key: \"AA\",\n    stopWhenFound: false,\n  });\n  if (additionalActionsDicts) {\n    // additionalActionsDicts contains dicts from ancestors\n    // as they're found in the tree from bottom to top.\n    // So the dicts are visited in reverse order to guarantee\n    // that actions from elder ancestors will be overwritten\n    // by ones from younger ancestors.\n    for (let i = additionalActionsDicts.length - 1; i >= 0; i--) {\n      const additionalActions = additionalActionsDicts[i];\n      if (!(additionalActions instanceof Dict)) {\n        continue;\n      }\n      for (const key of additionalActions.getKeys()) {\n        const action = eventType[key];\n        if (!action) {\n          continue;\n        }\n        const actionDict = additionalActions.getRaw(key);\n        const parents = new RefSet();\n        const list = [];\n        _collectJS(actionDict, xref, list, parents);\n        if (list.length > 0) {\n          actions[action] = list;\n        }\n      }\n    }\n  }\n  // Collect the Action if any (we may have one on pushbutton).\n  if (dict.has(\"A\")) {\n    const actionDict = dict.get(\"A\");\n    const parents = new RefSet();\n    const list = [];\n    _collectJS(actionDict, xref, list, parents);\n    if (list.length > 0) {\n      actions.Action = list;\n    }\n  }\n  return objectSize(actions) > 0 ? actions : null;\n}\n\nconst XMLEntities = {\n  /* < */ 0x3c: \"&lt;\",\n  /* > */ 0x3e: \"&gt;\",\n  /* & */ 0x26: \"&amp;\",\n  /* \" */ 0x22: \"&quot;\",\n  /* ' */ 0x27: \"&apos;\",\n};\n\nfunction encodeToXmlString(str) {\n  const buffer = [];\n  let start = 0;\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.codePointAt(i);\n    if (0x20 <= char && char <= 0x7e) {\n      // ascii\n      const entity = XMLEntities[char];\n      if (entity) {\n        if (start < i) {\n          buffer.push(str.substring(start, i));\n        }\n        buffer.push(entity);\n        start = i + 1;\n      }\n    } else {\n      if (start < i) {\n        buffer.push(str.substring(start, i));\n      }\n      buffer.push(`&#x${char.toString(16).toUpperCase()};`);\n      if (char > 0xd7ff && (char < 0xe000 || char > 0xfffd)) {\n        // char is represented by two u16\n        i++;\n      }\n      start = i + 1;\n    }\n  }\n\n  if (buffer.length === 0) {\n    return str;\n  }\n  if (start < str.length) {\n    buffer.push(str.substring(start, str.length));\n  }\n  return buffer.join(\"\");\n}\n\nfunction validateCSSFont(cssFontInfo) {\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/font-style.\n  const DEFAULT_CSS_FONT_OBLIQUE = \"14\";\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight.\n  const DEFAULT_CSS_FONT_WEIGHT = \"400\";\n  const CSS_FONT_WEIGHT_VALUES = new Set([\n    \"100\",\n    \"200\",\n    \"300\",\n    \"400\",\n    \"500\",\n    \"600\",\n    \"700\",\n    \"800\",\n    \"900\",\n    \"1000\",\n    \"normal\",\n    \"bold\",\n    \"bolder\",\n    \"lighter\",\n  ]);\n\n  const { fontFamily, fontWeight, italicAngle } = cssFontInfo;\n\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/string.\n  if (/^\".*\"$/.test(fontFamily)) {\n    if (/[^\\\\]\"/.test(fontFamily.slice(1, fontFamily.length - 1))) {\n      warn(`XFA - FontFamily contains some unescaped \": ${fontFamily}.`);\n      return false;\n    }\n  } else if (/^'.*'$/.test(fontFamily)) {\n    if (/[^\\\\]'/.test(fontFamily.slice(1, fontFamily.length - 1))) {\n      warn(`XFA - FontFamily contains some unescaped ': ${fontFamily}.`);\n      return false;\n    }\n  } else {\n    // See https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident.\n    for (const ident of fontFamily.split(/[ \\t]+/)) {\n      if (/^(\\d|(-(\\d|-)))/.test(ident) || !/^[\\w-\\\\]+$/.test(ident)) {\n        warn(\n          `XFA - FontFamily contains some invalid <custom-ident>: ${fontFamily}.`\n        );\n        return false;\n      }\n    }\n  }\n\n  const weight = fontWeight ? fontWeight.toString() : \"\";\n  cssFontInfo.fontWeight = CSS_FONT_WEIGHT_VALUES.has(weight)\n    ? weight\n    : DEFAULT_CSS_FONT_WEIGHT;\n\n  const angle = parseFloat(italicAngle);\n  cssFontInfo.italicAngle =\n    isNaN(angle) || angle < -90 || angle > 90\n      ? DEFAULT_CSS_FONT_OBLIQUE\n      : italicAngle.toString();\n\n  return true;\n}\n\nfunction recoverJsURL(str) {\n  // Attempt to recover valid URLs from `JS` entries with certain\n  // white-listed formats:\n  //  - window.open('http://example.com')\n  //  - app.launchURL('http://example.com', true)\n  //  - xfa.host.gotoURL('http://example.com')\n  const URL_OPEN_METHODS = [\"app.launchURL\", \"window.open\", \"xfa.host.gotoURL\"];\n  const regex = new RegExp(\n    \"^\\\\s*(\" +\n      URL_OPEN_METHODS.join(\"|\").split(\".\").join(\"\\\\.\") +\n      \")\\\\((?:'|\\\")([^'\\\"]*)(?:'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))\",\n    \"i\"\n  );\n\n  const jsUrl = regex.exec(str);\n  if (jsUrl && jsUrl[2]) {\n    const url = jsUrl[2];\n    let newWindow = false;\n\n    if (jsUrl[3] === \"true\" && jsUrl[1] === \"app.launchURL\") {\n      newWindow = true;\n    }\n    return { url, newWindow };\n  }\n\n  return null;\n}\n\nfunction numberToString(value) {\n  if (Number.isInteger(value)) {\n    return value.toString();\n  }\n\n  const roundedValue = Math.round(value * 100);\n  if (roundedValue % 100 === 0) {\n    return (roundedValue / 100).toString();\n  }\n\n  if (roundedValue % 10 === 0) {\n    return value.toFixed(1);\n  }\n\n  return value.toFixed(2);\n}\n\nfunction getNewAnnotationsMap(annotationStorage) {\n  if (!annotationStorage) {\n    return null;\n  }\n  const newAnnotationsByPage = new Map();\n  // The concept of page in a XFA is very different, so\n  // editing is just not implemented.\n  for (const [key, value] of annotationStorage) {\n    if (!key.startsWith(AnnotationEditorPrefix)) {\n      continue;\n    }\n    let annotations = newAnnotationsByPage.get(value.pageIndex);\n    if (!annotations) {\n      annotations = [];\n      newAnnotationsByPage.set(value.pageIndex, annotations);\n    }\n    annotations.push(value);\n  }\n  return newAnnotationsByPage.size > 0 ? newAnnotationsByPage : null;\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16HexString(str) {\n  const buf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      ((char >> 8) & 0xff).toString(16).padStart(2, \"0\"),\n      (char & 0xff).toString(16).padStart(2, \"0\")\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF16String(str, bigEndian = false) {\n  const buf = [];\n  if (bigEndian) {\n    buf.push(\"\\xFE\\xFF\");\n  }\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction getRotationMatrix(rotation, width, height) {\n  switch (rotation) {\n    case 90:\n      return [0, 1, -1, 0, width, 0];\n    case 180:\n      return [-1, 0, 0, -1, width, height];\n    case 270:\n      return [0, -1, 1, 0, 0, height];\n    default:\n      throw new Error(\"Invalid rotation\");\n  }\n}\n\nexport {\n  collectActions,\n  DocStats,\n  encodeToXmlString,\n  escapePDFName,\n  escapeString,\n  getArrayLookupTableFactory,\n  getInheritableProperty,\n  getLookupTableFactory,\n  getNewAnnotationsMap,\n  getRotationMatrix,\n  isAscii,\n  isWhiteSpace,\n  log2,\n  MissingDataException,\n  numberToString,\n  ParserEOFException,\n  parseXFAPath,\n  PDF_VERSION_REGEXP,\n  readInt8,\n  readUint16,\n  readUint32,\n  recoverJsURL,\n  stringToUTF16HexString,\n  stringToUTF16String,\n  toRomanNumerals,\n  validateCSSFont,\n  XRefEntryException,\n  XRefParseException,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, shadow, unreachable } from \"../shared/util.js\";\n\nconst CIRCULAR_REF = Symbol(\"CIRCULAR_REF\");\nconst EOF = Symbol(\"EOF\");\n\nconst Name = (function NameClosure() {\n  let nameCache = Object.create(null);\n\n  // eslint-disable-next-line no-shadow\n  class Name {\n    constructor(name) {\n      if (\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n        typeof name !== \"string\"\n      ) {\n        unreachable('Name: The \"name\" must be a string.');\n      }\n      this.name = name;\n    }\n\n    static get(name) {\n      // eslint-disable-next-line no-restricted-syntax\n      return nameCache[name] || (nameCache[name] = new Name(name));\n    }\n\n    static _clearCache() {\n      nameCache = Object.create(null);\n    }\n  }\n\n  return Name;\n})();\n\nconst Cmd = (function CmdClosure() {\n  let cmdCache = Object.create(null);\n\n  // eslint-disable-next-line no-shadow\n  class Cmd {\n    constructor(cmd) {\n      if (\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n        typeof cmd !== \"string\"\n      ) {\n        unreachable('Cmd: The \"cmd\" must be a string.');\n      }\n      this.cmd = cmd;\n    }\n\n    static get(cmd) {\n      // eslint-disable-next-line no-restricted-syntax\n      return cmdCache[cmd] || (cmdCache[cmd] = new Cmd(cmd));\n    }\n\n    static _clearCache() {\n      cmdCache = Object.create(null);\n    }\n  }\n\n  return Cmd;\n})();\n\nconst nonSerializable = function nonSerializableClosure() {\n  return nonSerializable; // Creating closure on some variable.\n};\n\nclass Dict {\n  constructor(xref = null) {\n    // Map should only be used internally, use functions below to access.\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable; // Disable cloning of the Dict.\n  }\n\n  assignXref(newXref) {\n    this.xref = newXref;\n  }\n\n  get size() {\n    return Object.keys(this._map).length;\n  }\n\n  // Automatically dereferences Ref objects.\n  get(key1, key2, key3) {\n    let value = this._map[key1];\n    if (value === undefined && key2 !== undefined) {\n      if (\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n        key2.length < key1.length\n      ) {\n        unreachable(\"Dict.get: Expected keys to be ordered by length.\");\n      }\n      value = this._map[key2];\n      if (value === undefined && key3 !== undefined) {\n        if (\n          (typeof PDFJSDev === \"undefined\" ||\n            PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n          key3.length < key2.length\n        ) {\n          unreachable(\"Dict.get: Expected keys to be ordered by length.\");\n        }\n        value = this._map[key3];\n      }\n    }\n    if (value instanceof Ref && this.xref) {\n      return this.xref.fetch(value, this.suppressEncryption);\n    }\n    return value;\n  }\n\n  // Same as get(), but returns a promise and uses fetchIfRefAsync().\n  async getAsync(key1, key2, key3) {\n    let value = this._map[key1];\n    if (value === undefined && key2 !== undefined) {\n      if (\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n        key2.length < key1.length\n      ) {\n        unreachable(\"Dict.getAsync: Expected keys to be ordered by length.\");\n      }\n      value = this._map[key2];\n      if (value === undefined && key3 !== undefined) {\n        if (\n          (typeof PDFJSDev === \"undefined\" ||\n            PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n          key3.length < key2.length\n        ) {\n          unreachable(\"Dict.getAsync: Expected keys to be ordered by length.\");\n        }\n        value = this._map[key3];\n      }\n    }\n    if (value instanceof Ref && this.xref) {\n      return this.xref.fetchAsync(value, this.suppressEncryption);\n    }\n    return value;\n  }\n\n  // Same as get(), but dereferences all elements if the result is an Array.\n  getArray(key1, key2, key3) {\n    let value = this._map[key1];\n    if (value === undefined && key2 !== undefined) {\n      if (\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n        key2.length < key1.length\n      ) {\n        unreachable(\"Dict.getArray: Expected keys to be ordered by length.\");\n      }\n      value = this._map[key2];\n      if (value === undefined && key3 !== undefined) {\n        if (\n          (typeof PDFJSDev === \"undefined\" ||\n            PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n          key3.length < key2.length\n        ) {\n          unreachable(\"Dict.getArray: Expected keys to be ordered by length.\");\n        }\n        value = this._map[key3];\n      }\n    }\n    if (value instanceof Ref && this.xref) {\n      value = this.xref.fetch(value, this.suppressEncryption);\n    }\n\n    if (Array.isArray(value)) {\n      value = value.slice(); // Ensure that we don't modify the Dict data.\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        if (value[i] instanceof Ref && this.xref) {\n          value[i] = this.xref.fetch(value[i], this.suppressEncryption);\n        }\n      }\n    }\n    return value;\n  }\n\n  // No dereferencing.\n  getRaw(key) {\n    return this._map[key];\n  }\n\n  getKeys() {\n    return Object.keys(this._map);\n  }\n\n  // No dereferencing.\n  getRawValues() {\n    return Object.values(this._map);\n  }\n\n  set(key, value) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      if (typeof key !== \"string\") {\n        unreachable('Dict.set: The \"key\" must be a string.');\n      } else if (value === undefined) {\n        unreachable('Dict.set: The \"value\" cannot be undefined.');\n      }\n    }\n    this._map[key] = value;\n  }\n\n  has(key) {\n    return this._map[key] !== undefined;\n  }\n\n  forEach(callback) {\n    for (const key in this._map) {\n      callback(key, this.get(key));\n    }\n  }\n\n  static get empty() {\n    const emptyDict = new Dict(null);\n\n    emptyDict.set = (key, value) => {\n      unreachable(\"Should not call `set` on the empty dictionary.\");\n    };\n    return shadow(this, \"empty\", emptyDict);\n  }\n\n  static merge({ xref, dictArray, mergeSubDicts = false }) {\n    const mergedDict = new Dict(xref),\n      properties = new Map();\n\n    for (const dict of dictArray) {\n      if (!(dict instanceof Dict)) {\n        continue;\n      }\n      for (const [key, value] of Object.entries(dict._map)) {\n        let property = properties.get(key);\n        if (property === undefined) {\n          property = [];\n          properties.set(key, property);\n        } else if (!mergeSubDicts || !(value instanceof Dict)) {\n          // Ignore additional entries, if either:\n          //  - This is a \"shallow\" merge, where only the first element matters.\n          //  - The value is *not* a `Dict`, since other types cannot be merged.\n          continue;\n        }\n        property.push(value);\n      }\n    }\n    for (const [name, values] of properties) {\n      if (values.length === 1 || !(values[0] instanceof Dict)) {\n        mergedDict._map[name] = values[0];\n        continue;\n      }\n      const subDict = new Dict(xref);\n\n      for (const dict of values) {\n        for (const [key, value] of Object.entries(dict._map)) {\n          if (subDict._map[key] === undefined) {\n            subDict._map[key] = value;\n          }\n        }\n      }\n      if (subDict.size > 0) {\n        mergedDict._map[name] = subDict;\n      }\n    }\n    properties.clear();\n\n    return mergedDict.size > 0 ? mergedDict : Dict.empty;\n  }\n}\n\nconst Ref = (function RefClosure() {\n  let refCache = Object.create(null);\n\n  // eslint-disable-next-line no-shadow\n  class Ref {\n    constructor(num, gen) {\n      this.num = num;\n      this.gen = gen;\n    }\n\n    toString() {\n      // This function is hot, so we make the string as compact as possible.\n      // |this.gen| is almost always zero, so we treat that case specially.\n      if (this.gen === 0) {\n        return `${this.num}R`;\n      }\n      return `${this.num}R${this.gen}`;\n    }\n\n    static get(num, gen) {\n      const key = gen === 0 ? `${num}R` : `${num}R${gen}`;\n      // eslint-disable-next-line no-restricted-syntax\n      return refCache[key] || (refCache[key] = new Ref(num, gen));\n    }\n\n    static _clearCache() {\n      refCache = Object.create(null);\n    }\n  }\n\n  return Ref;\n})();\n\n// The reference is identified by number and generation.\n// This structure stores only one instance of the reference.\nclass RefSet {\n  constructor(parent = null) {\n    if (\n      (typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || TESTING\")) &&\n      parent &&\n      !(parent instanceof RefSet)\n    ) {\n      unreachable('RefSet: Invalid \"parent\" value.');\n    }\n    this._set = new Set(parent && parent._set);\n  }\n\n  has(ref) {\n    return this._set.has(ref.toString());\n  }\n\n  put(ref) {\n    this._set.add(ref.toString());\n  }\n\n  remove(ref) {\n    this._set.delete(ref.toString());\n  }\n\n  [Symbol.iterator]() {\n    return this._set.values();\n  }\n\n  clear() {\n    this._set.clear();\n  }\n}\n\nclass RefSetCache {\n  constructor() {\n    this._map = new Map();\n  }\n\n  get size() {\n    return this._map.size;\n  }\n\n  get(ref) {\n    return this._map.get(ref.toString());\n  }\n\n  has(ref) {\n    return this._map.has(ref.toString());\n  }\n\n  put(ref, obj) {\n    this._map.set(ref.toString(), obj);\n  }\n\n  putAlias(ref, aliasRef) {\n    this._map.set(ref.toString(), this.get(aliasRef));\n  }\n\n  [Symbol.iterator]() {\n    return this._map.values();\n  }\n\n  clear() {\n    this._map.clear();\n  }\n}\n\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\n\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\n\nfunction isDict(v, type) {\n  return (\n    v instanceof Dict && (type === undefined || isName(v.get(\"Type\"), type))\n  );\n}\n\nfunction isRefsEqual(v1, v2) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      v1 instanceof Ref && v2 instanceof Ref,\n      \"isRefsEqual: Both parameters should be `Ref`s.\"\n    );\n  }\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\n\nfunction clearPrimitiveCaches() {\n  Cmd._clearCache();\n  Name._clearCache();\n  Ref._clearCache();\n}\n\nexport {\n  CIRCULAR_REF,\n  clearPrimitiveCaches,\n  Cmd,\n  Dict,\n  EOF,\n  isCmd,\n  isDict,\n  isName,\n  isRefsEqual,\n  Name,\n  Ref,\n  RefSet,\n  RefSetCache,\n};\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bytesToString, shadow, unreachable } from \"../shared/util.js\";\n\nclass BaseStream {\n  constructor() {\n    if (this.constructor === BaseStream) {\n      unreachable(\"Cannot initialize BaseStream.\");\n    }\n  }\n\n  // eslint-disable-next-line getter-return\n  get length() {\n    unreachable(\"Abstract getter `length` accessed\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get isEmpty() {\n    unreachable(\"Abstract getter `isEmpty` accessed\");\n  }\n\n  get isDataLoaded() {\n    return shadow(this, \"isDataLoaded\", true);\n  }\n\n  getByte() {\n    unreachable(\"Abstract method `getByte` called\");\n  }\n\n  getBytes(length) {\n    unreachable(\"Abstract method `getBytes` called\");\n  }\n\n  peekByte() {\n    const peekedByte = this.getByte();\n    if (peekedByte !== -1) {\n      this.pos--;\n    }\n    return peekedByte;\n  }\n\n  peekBytes(length) {\n    const bytes = this.getBytes(length);\n    this.pos -= bytes.length;\n    return bytes;\n  }\n\n  getUint16() {\n    const b0 = this.getByte();\n    const b1 = this.getByte();\n    if (b0 === -1 || b1 === -1) {\n      return -1;\n    }\n    return (b0 << 8) + b1;\n  }\n\n  getInt32() {\n    const b0 = this.getByte();\n    const b1 = this.getByte();\n    const b2 = this.getByte();\n    const b3 = this.getByte();\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n\n  getByteRange(begin, end) {\n    unreachable(\"Abstract method `getByteRange` called\");\n  }\n\n  getString(length) {\n    return bytesToString(this.getBytes(length));\n  }\n\n  skip(n) {\n    this.pos += n || 1;\n  }\n\n  reset() {\n    unreachable(\"Abstract method `reset` called\");\n  }\n\n  moveStart() {\n    unreachable(\"Abstract method `moveStart` called\");\n  }\n\n  makeSubStream(start, length, dict = null) {\n    unreachable(\"Abstract method `makeSubStream` called\");\n  }\n\n  /**\n   * @returns {Array | null}\n   */\n  getBaseStreams() {\n    return null;\n  }\n}\n\nexport { BaseStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Table C-2\nconst QeTable = [\n  { qe: 0x5601, nmps: 1, nlps: 1, switchFlag: 1 },\n  { qe: 0x3401, nmps: 2, nlps: 6, switchFlag: 0 },\n  { qe: 0x1801, nmps: 3, nlps: 9, switchFlag: 0 },\n  { qe: 0x0ac1, nmps: 4, nlps: 12, switchFlag: 0 },\n  { qe: 0x0521, nmps: 5, nlps: 29, switchFlag: 0 },\n  { qe: 0x0221, nmps: 38, nlps: 33, switchFlag: 0 },\n  { qe: 0x5601, nmps: 7, nlps: 6, switchFlag: 1 },\n  { qe: 0x5401, nmps: 8, nlps: 14, switchFlag: 0 },\n  { qe: 0x4801, nmps: 9, nlps: 14, switchFlag: 0 },\n  { qe: 0x3801, nmps: 10, nlps: 14, switchFlag: 0 },\n  { qe: 0x3001, nmps: 11, nlps: 17, switchFlag: 0 },\n  { qe: 0x2401, nmps: 12, nlps: 18, switchFlag: 0 },\n  { qe: 0x1c01, nmps: 13, nlps: 20, switchFlag: 0 },\n  { qe: 0x1601, nmps: 29, nlps: 21, switchFlag: 0 },\n  { qe: 0x5601, nmps: 15, nlps: 14, switchFlag: 1 },\n  { qe: 0x5401, nmps: 16, nlps: 14, switchFlag: 0 },\n  { qe: 0x5101, nmps: 17, nlps: 15, switchFlag: 0 },\n  { qe: 0x4801, nmps: 18, nlps: 16, switchFlag: 0 },\n  { qe: 0x3801, nmps: 19, nlps: 17, switchFlag: 0 },\n  { qe: 0x3401, nmps: 20, nlps: 18, switchFlag: 0 },\n  { qe: 0x3001, nmps: 21, nlps: 19, switchFlag: 0 },\n  { qe: 0x2801, nmps: 22, nlps: 19, switchFlag: 0 },\n  { qe: 0x2401, nmps: 23, nlps: 20, switchFlag: 0 },\n  { qe: 0x2201, nmps: 24, nlps: 21, switchFlag: 0 },\n  { qe: 0x1c01, nmps: 25, nlps: 22, switchFlag: 0 },\n  { qe: 0x1801, nmps: 26, nlps: 23, switchFlag: 0 },\n  { qe: 0x1601, nmps: 27, nlps: 24, switchFlag: 0 },\n  { qe: 0x1401, nmps: 28, nlps: 25, switchFlag: 0 },\n  { qe: 0x1201, nmps: 29, nlps: 26, switchFlag: 0 },\n  { qe: 0x1101, nmps: 30, nlps: 27, switchFlag: 0 },\n  { qe: 0x0ac1, nmps: 31, nlps: 28, switchFlag: 0 },\n  { qe: 0x09c1, nmps: 32, nlps: 29, switchFlag: 0 },\n  { qe: 0x08a1, nmps: 33, nlps: 30, switchFlag: 0 },\n  { qe: 0x0521, nmps: 34, nlps: 31, switchFlag: 0 },\n  { qe: 0x0441, nmps: 35, nlps: 32, switchFlag: 0 },\n  { qe: 0x02a1, nmps: 36, nlps: 33, switchFlag: 0 },\n  { qe: 0x0221, nmps: 37, nlps: 34, switchFlag: 0 },\n  { qe: 0x0141, nmps: 38, nlps: 35, switchFlag: 0 },\n  { qe: 0x0111, nmps: 39, nlps: 36, switchFlag: 0 },\n  { qe: 0x0085, nmps: 40, nlps: 37, switchFlag: 0 },\n  { qe: 0x0049, nmps: 41, nlps: 38, switchFlag: 0 },\n  { qe: 0x0025, nmps: 42, nlps: 39, switchFlag: 0 },\n  { qe: 0x0015, nmps: 43, nlps: 40, switchFlag: 0 },\n  { qe: 0x0009, nmps: 44, nlps: 41, switchFlag: 0 },\n  { qe: 0x0005, nmps: 45, nlps: 42, switchFlag: 0 },\n  { qe: 0x0001, nmps: 45, nlps: 43, switchFlag: 0 },\n  { qe: 0x5601, nmps: 46, nlps: 46, switchFlag: 0 },\n];\n\n/**\n * This class implements the QM Coder decoding as defined in\n *   JPEG 2000 Part I Final Committee Draft Version 1.0\n *   Annex C.3 Arithmetic decoding procedure\n * available at http://www.jpeg.org/public/fcd15444-1.pdf\n *\n * The arithmetic decoder is used in conjunction with context models to decode\n * JPEG2000 and JBIG2 streams.\n */\nclass ArithmeticDecoder {\n  // C.3.5 Initialisation of the decoder (INITDEC)\n  constructor(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n\n    this.chigh = data[start];\n    this.clow = 0;\n\n    this.byteIn();\n\n    this.chigh = ((this.chigh << 7) & 0xffff) | ((this.clow >> 9) & 0x7f);\n    this.clow = (this.clow << 7) & 0xffff;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n\n  // C.3.4 Compressed data input (BYTEIN)\n  byteIn() {\n    const data = this.data;\n    let bp = this.bp;\n\n    if (data[bp] === 0xff) {\n      if (data[bp + 1] > 0x8f) {\n        this.clow += 0xff00;\n        this.ct = 8;\n      } else {\n        bp++;\n        this.clow += data[bp] << 9;\n        this.ct = 7;\n        this.bp = bp;\n      }\n    } else {\n      bp++;\n      this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xff00;\n      this.ct = 8;\n      this.bp = bp;\n    }\n    if (this.clow > 0xffff) {\n      this.chigh += this.clow >> 16;\n      this.clow &= 0xffff;\n    }\n  }\n\n  // C.3.2 Decoding a decision (DECODE)\n  readBit(contexts, pos) {\n    // Contexts are packed into 1 byte:\n    // highest 7 bits carry cx.index, lowest bit carries cx.mps\n    let cx_index = contexts[pos] >> 1,\n      cx_mps = contexts[pos] & 1;\n    const qeTableIcx = QeTable[cx_index];\n    const qeIcx = qeTableIcx.qe;\n    let d;\n    let a = this.a - qeIcx;\n\n    if (this.chigh < qeIcx) {\n      // exchangeLps\n      if (a < qeIcx) {\n        a = qeIcx;\n        d = cx_mps;\n        cx_index = qeTableIcx.nmps;\n      } else {\n        a = qeIcx;\n        d = 1 ^ cx_mps;\n        if (qeTableIcx.switchFlag === 1) {\n          cx_mps = d;\n        }\n        cx_index = qeTableIcx.nlps;\n      }\n    } else {\n      this.chigh -= qeIcx;\n      if ((a & 0x8000) !== 0) {\n        this.a = a;\n        return cx_mps;\n      }\n      // exchangeMps\n      if (a < qeIcx) {\n        d = 1 ^ cx_mps;\n        if (qeTableIcx.switchFlag === 1) {\n          cx_mps = d;\n        }\n        cx_index = qeTableIcx.nlps;\n      } else {\n        d = cx_mps;\n        cx_index = qeTableIcx.nmps;\n      }\n    }\n    // C.3.3 renormD;\n    do {\n      if (this.ct === 0) {\n        this.byteIn();\n      }\n\n      a <<= 1;\n      this.chigh = ((this.chigh << 1) & 0xffff) | ((this.clow >> 15) & 1);\n      this.clow = (this.clow << 1) & 0xffff;\n      this.ct--;\n    } while ((a & 0x8000) === 0);\n    this.a = a;\n\n    contexts[pos] = (cx_index << 1) | cx_mps;\n    return d;\n  }\n}\n\nexport { ArithmeticDecoder };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* Copyright 1996-2003 Glyph & Cog, LLC\n *\n * The CCITT stream implementation contained in this file is a JavaScript port\n * of XPDF's implementation, made available under the Apache 2.0 open source\n * license.\n */\n\nimport { FormatError, info } from \"../shared/util.js\";\n\n/**\n * @typedef {Object} CCITTFaxDecoderSource\n * @property {function} next - Method that return one byte of data for decoding,\n *   or -1 when EOF is reached.\n */\n\nconst ccittEOL = -2;\nconst ccittEOF = -1;\nconst twoDimPass = 0;\nconst twoDimHoriz = 1;\nconst twoDimVert0 = 2;\nconst twoDimVertR1 = 3;\nconst twoDimVertL1 = 4;\nconst twoDimVertR2 = 5;\nconst twoDimVertL2 = 6;\nconst twoDimVertR3 = 7;\nconst twoDimVertL3 = 8;\n\n// prettier-ignore\nconst twoDimTable = [\n  [-1, -1], [-1, -1],                   // 000000x\n  [7, twoDimVertL3],                    // 0000010\n  [7, twoDimVertR3],                    // 0000011\n  [6, twoDimVertL2], [6, twoDimVertL2], // 000010x\n  [6, twoDimVertR2], [6, twoDimVertR2], // 000011x\n  [4, twoDimPass], [4, twoDimPass],     // 0001xxx\n  [4, twoDimPass], [4, twoDimPass],\n  [4, twoDimPass], [4, twoDimPass],\n  [4, twoDimPass], [4, twoDimPass],\n  [3, twoDimHoriz], [3, twoDimHoriz],   // 001xxxx\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimVertL1], [3, twoDimVertL1], // 010xxxx\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertR1], [3, twoDimVertR1], // 011xxxx\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [1, twoDimVert0], [1, twoDimVert0],   // 1xxxxxx\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0]\n];\n\n// prettier-ignore\nconst whiteTable1 = [\n  [-1, -1],                               // 00000\n  [12, ccittEOL],                         // 00001\n  [-1, -1], [-1, -1],                     // 0001x\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 001xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 010xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 011xx\n  [11, 1792], [11, 1792],                 // 1000x\n  [12, 1984],                             // 10010\n  [12, 2048],                             // 10011\n  [12, 2112],                             // 10100\n  [12, 2176],                             // 10101\n  [12, 2240],                             // 10110\n  [12, 2304],                             // 10111\n  [11, 1856], [11, 1856],                 // 1100x\n  [11, 1920], [11, 1920],                 // 1101x\n  [12, 2368],                             // 11100\n  [12, 2432],                             // 11101\n  [12, 2496],                             // 11110\n  [12, 2560]                              // 11111\n];\n\n// prettier-ignore\nconst whiteTable2 = [\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],     // 0000000xx\n  [8, 29], [8, 29],                           // 00000010x\n  [8, 30], [8, 30],                           // 00000011x\n  [8, 45], [8, 45],                           // 00000100x\n  [8, 46], [8, 46],                           // 00000101x\n  [7, 22], [7, 22], [7, 22], [7, 22],         // 0000011xx\n  [7, 23], [7, 23], [7, 23], [7, 23],         // 0000100xx\n  [8, 47], [8, 47],                           // 00001010x\n  [8, 48], [8, 48],                           // 00001011x\n  [6, 13], [6, 13], [6, 13], [6, 13],         // 000011xxx\n  [6, 13], [6, 13], [6, 13], [6, 13],\n  [7, 20], [7, 20], [7, 20], [7, 20],         // 0001000xx\n  [8, 33], [8, 33],                           // 00010010x\n  [8, 34], [8, 34],                           // 00010011x\n  [8, 35], [8, 35],                           // 00010100x\n  [8, 36], [8, 36],                           // 00010101x\n  [8, 37], [8, 37],                           // 00010110x\n  [8, 38], [8, 38],                           // 00010111x\n  [7, 19], [7, 19], [7, 19], [7, 19],         // 0001100xx\n  [8, 31], [8, 31],                           // 00011010x\n  [8, 32], [8, 32],                           // 00011011x\n  [6, 1], [6, 1], [6, 1], [6, 1],             // 000111xxx\n  [6, 1], [6, 1], [6, 1], [6, 1],\n  [6, 12], [6, 12], [6, 12], [6, 12],         // 001000xxx\n  [6, 12], [6, 12], [6, 12], [6, 12],\n  [8, 53], [8, 53],                           // 00100100x\n  [8, 54], [8, 54],                           // 00100101x\n  [7, 26], [7, 26], [7, 26], [7, 26],         // 0010011xx\n  [8, 39], [8, 39],                           // 00101000x\n  [8, 40], [8, 40],                           // 00101001x\n  [8, 41], [8, 41],                           // 00101010x\n  [8, 42], [8, 42],                           // 00101011x\n  [8, 43], [8, 43],                           // 00101100x\n  [8, 44], [8, 44],                           // 00101101x\n  [7, 21], [7, 21], [7, 21], [7, 21],         // 0010111xx\n  [7, 28], [7, 28], [7, 28], [7, 28],         // 0011000xx\n  [8, 61], [8, 61],                           // 00110010x\n  [8, 62], [8, 62],                           // 00110011x\n  [8, 63], [8, 63],                           // 00110100x\n  [8, 0], [8, 0],                             // 00110101x\n  [8, 320], [8, 320],                         // 00110110x\n  [8, 384], [8, 384],                         // 00110111x\n  [5, 10], [5, 10], [5, 10], [5, 10],         // 00111xxxx\n  [5, 10], [5, 10], [5, 10], [5, 10],\n  [5, 10], [5, 10], [5, 10], [5, 10],\n  [5, 10], [5, 10], [5, 10], [5, 10],\n  [5, 11], [5, 11], [5, 11], [5, 11],         // 01000xxxx\n  [5, 11], [5, 11], [5, 11], [5, 11],\n  [5, 11], [5, 11], [5, 11], [5, 11],\n  [5, 11], [5, 11], [5, 11], [5, 11],\n  [7, 27], [7, 27], [7, 27], [7, 27],         // 0100100xx\n  [8, 59], [8, 59],                           // 01001010x\n  [8, 60], [8, 60],                           // 01001011x\n  [9, 1472],                                  // 010011000\n  [9, 1536],                                  // 010011001\n  [9, 1600],                                  // 010011010\n  [9, 1728],                                  // 010011011\n  [7, 18], [7, 18], [7, 18], [7, 18],         // 0100111xx\n  [7, 24], [7, 24], [7, 24], [7, 24],         // 0101000xx\n  [8, 49], [8, 49],                           // 01010010x\n  [8, 50], [8, 50],                           // 01010011x\n  [8, 51], [8, 51],                           // 01010100x\n  [8, 52], [8, 52],                           // 01010101x\n  [7, 25], [7, 25], [7, 25], [7, 25],         // 0101011xx\n  [8, 55], [8, 55],                           // 01011000x\n  [8, 56], [8, 56],                           // 01011001x\n  [8, 57], [8, 57],                           // 01011010x\n  [8, 58], [8, 58],                           // 01011011x\n  [6, 192], [6, 192], [6, 192], [6, 192],     // 010111xxx\n  [6, 192], [6, 192], [6, 192], [6, 192],\n  [6, 1664], [6, 1664], [6, 1664], [6, 1664], // 011000xxx\n  [6, 1664], [6, 1664], [6, 1664], [6, 1664],\n  [8, 448], [8, 448],                         // 01100100x\n  [8, 512], [8, 512],                         // 01100101x\n  [9, 704],                                   // 011001100\n  [9, 768],                                   // 011001101\n  [8, 640], [8, 640],                         // 01100111x\n  [8, 576], [8, 576],                         // 01101000x\n  [9, 832],                                   // 011010010\n  [9, 896],                                   // 011010011\n  [9, 960],                                   // 011010100\n  [9, 1024],                                  // 011010101\n  [9, 1088],                                  // 011010110\n  [9, 1152],                                  // 011010111\n  [9, 1216],                                  // 011011000\n  [9, 1280],                                  // 011011001\n  [9, 1344],                                  // 011011010\n  [9, 1408],                                  // 011011011\n  [7, 256], [7, 256], [7, 256], [7, 256],     // 0110111xx\n  [4, 2], [4, 2], [4, 2], [4, 2],             // 0111xxxxx\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 3], [4, 3], [4, 3], [4, 3],             // 1000xxxxx\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [5, 128], [5, 128], [5, 128], [5, 128],     // 10010xxxx\n  [5, 128], [5, 128], [5, 128], [5, 128],\n  [5, 128], [5, 128], [5, 128], [5, 128],\n  [5, 128], [5, 128], [5, 128], [5, 128],\n  [5, 8], [5, 8], [5, 8], [5, 8],             // 10011xxxx\n  [5, 8], [5, 8], [5, 8], [5, 8],\n  [5, 8], [5, 8], [5, 8], [5, 8],\n  [5, 8], [5, 8], [5, 8], [5, 8],\n  [5, 9], [5, 9], [5, 9], [5, 9],             // 10100xxxx\n  [5, 9], [5, 9], [5, 9], [5, 9],\n  [5, 9], [5, 9], [5, 9], [5, 9],\n  [5, 9], [5, 9], [5, 9], [5, 9],\n  [6, 16], [6, 16], [6, 16], [6, 16],         // 101010xxx\n  [6, 16], [6, 16], [6, 16], [6, 16],\n  [6, 17], [6, 17], [6, 17], [6, 17],         // 101011xxx\n  [6, 17], [6, 17], [6, 17], [6, 17],\n  [4, 4], [4, 4], [4, 4], [4, 4],             // 1011xxxxx\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 5], [4, 5], [4, 5], [4, 5],             // 1100xxxxx\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [6, 14], [6, 14], [6, 14], [6, 14],         // 110100xxx\n  [6, 14], [6, 14], [6, 14], [6, 14],\n  [6, 15], [6, 15], [6, 15], [6, 15],         // 110101xxx\n  [6, 15], [6, 15], [6, 15], [6, 15],\n  [5, 64], [5, 64], [5, 64], [5, 64],         // 11011xxxx\n  [5, 64], [5, 64], [5, 64], [5, 64],\n  [5, 64], [5, 64], [5, 64], [5, 64],\n  [5, 64], [5, 64], [5, 64], [5, 64],\n  [4, 6], [4, 6], [4, 6], [4, 6],             // 1110xxxxx\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 7], [4, 7], [4, 7], [4, 7],             // 1111xxxxx\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7]\n];\n\n// prettier-ignore\nconst blackTable1 = [\n  [-1, -1], [-1, -1],                             // 000000000000x\n  [12, ccittEOL], [12, ccittEOL],                 // 000000000001x\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000001xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000010xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000011xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000100xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000101xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000110xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000111xx\n  [11, 1792], [11, 1792], [11, 1792], [11, 1792], // 00000001000xx\n  [12, 1984], [12, 1984],                         // 000000010010x\n  [12, 2048], [12, 2048],                         // 000000010011x\n  [12, 2112], [12, 2112],                         // 000000010100x\n  [12, 2176], [12, 2176],                         // 000000010101x\n  [12, 2240], [12, 2240],                         // 000000010110x\n  [12, 2304], [12, 2304],                         // 000000010111x\n  [11, 1856], [11, 1856], [11, 1856], [11, 1856], // 00000001100xx\n  [11, 1920], [11, 1920], [11, 1920], [11, 1920], // 00000001101xx\n  [12, 2368], [12, 2368],                         // 000000011100x\n  [12, 2432], [12, 2432],                         // 000000011101x\n  [12, 2496], [12, 2496],                         // 000000011110x\n  [12, 2560], [12, 2560],                         // 000000011111x\n  [10, 18], [10, 18], [10, 18], [10, 18],         // 0000001000xxx\n  [10, 18], [10, 18], [10, 18], [10, 18],\n  [12, 52], [12, 52],                             // 000000100100x\n  [13, 640],                                      // 0000001001010\n  [13, 704],                                      // 0000001001011\n  [13, 768],                                      // 0000001001100\n  [13, 832],                                      // 0000001001101\n  [12, 55], [12, 55],                             // 000000100111x\n  [12, 56], [12, 56],                             // 000000101000x\n  [13, 1280],                                     // 0000001010010\n  [13, 1344],                                     // 0000001010011\n  [13, 1408],                                     // 0000001010100\n  [13, 1472],                                     // 0000001010101\n  [12, 59], [12, 59],                             // 000000101011x\n  [12, 60], [12, 60],                             // 000000101100x\n  [13, 1536],                                     // 0000001011010\n  [13, 1600],                                     // 0000001011011\n  [11, 24], [11, 24], [11, 24], [11, 24],         // 00000010111xx\n  [11, 25], [11, 25], [11, 25], [11, 25],         // 00000011000xx\n  [13, 1664],                                     // 0000001100100\n  [13, 1728],                                     // 0000001100101\n  [12, 320], [12, 320],                           // 000000110011x\n  [12, 384], [12, 384],                           // 000000110100x\n  [12, 448], [12, 448],                           // 000000110101x\n  [13, 512],                                      // 0000001101100\n  [13, 576],                                      // 0000001101101\n  [12, 53], [12, 53],                             // 000000110111x\n  [12, 54], [12, 54],                             // 000000111000x\n  [13, 896],                                      // 0000001110010\n  [13, 960],                                      // 0000001110011\n  [13, 1024],                                     // 0000001110100\n  [13, 1088],                                     // 0000001110101\n  [13, 1152],                                     // 0000001110110\n  [13, 1216],                                     // 0000001110111\n  [10, 64], [10, 64], [10, 64], [10, 64],         // 0000001111xxx\n  [10, 64], [10, 64], [10, 64], [10, 64]\n];\n\n// prettier-ignore\nconst blackTable2 = [\n  [8, 13], [8, 13], [8, 13], [8, 13],     // 00000100xxxx\n  [8, 13], [8, 13], [8, 13], [8, 13],\n  [8, 13], [8, 13], [8, 13], [8, 13],\n  [8, 13], [8, 13], [8, 13], [8, 13],\n  [11, 23], [11, 23],                     // 00000101000x\n  [12, 50],                               // 000001010010\n  [12, 51],                               // 000001010011\n  [12, 44],                               // 000001010100\n  [12, 45],                               // 000001010101\n  [12, 46],                               // 000001010110\n  [12, 47],                               // 000001010111\n  [12, 57],                               // 000001011000\n  [12, 58],                               // 000001011001\n  [12, 61],                               // 000001011010\n  [12, 256],                              // 000001011011\n  [10, 16], [10, 16], [10, 16], [10, 16], // 0000010111xx\n  [10, 17], [10, 17], [10, 17], [10, 17], // 0000011000xx\n  [12, 48],                               // 000001100100\n  [12, 49],                               // 000001100101\n  [12, 62],                               // 000001100110\n  [12, 63],                               // 000001100111\n  [12, 30],                               // 000001101000\n  [12, 31],                               // 000001101001\n  [12, 32],                               // 000001101010\n  [12, 33],                               // 000001101011\n  [12, 40],                               // 000001101100\n  [12, 41],                               // 000001101101\n  [11, 22], [11, 22],                     // 00000110111x\n  [8, 14], [8, 14], [8, 14], [8, 14],     // 00000111xxxx\n  [8, 14], [8, 14], [8, 14], [8, 14],\n  [8, 14], [8, 14], [8, 14], [8, 14],\n  [8, 14], [8, 14], [8, 14], [8, 14],\n  [7, 10], [7, 10], [7, 10], [7, 10],     // 0000100xxxxx\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 11], [7, 11], [7, 11], [7, 11],     // 0000101xxxxx\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [9, 15], [9, 15], [9, 15], [9, 15],     // 000011000xxx\n  [9, 15], [9, 15], [9, 15], [9, 15],\n  [12, 128],                              // 000011001000\n  [12, 192],                              // 000011001001\n  [12, 26],                               // 000011001010\n  [12, 27],                               // 000011001011\n  [12, 28],                               // 000011001100\n  [12, 29],                               // 000011001101\n  [11, 19], [11, 19],                     // 00001100111x\n  [11, 20], [11, 20],                     // 00001101000x\n  [12, 34],                               // 000011010010\n  [12, 35],                               // 000011010011\n  [12, 36],                               // 000011010100\n  [12, 37],                               // 000011010101\n  [12, 38],                               // 000011010110\n  [12, 39],                               // 000011010111\n  [11, 21], [11, 21],                     // 00001101100x\n  [12, 42],                               // 000011011010\n  [12, 43],                               // 000011011011\n  [10, 0], [10, 0], [10, 0], [10, 0],     // 0000110111xx\n  [7, 12], [7, 12], [7, 12], [7, 12],     // 0000111xxxxx\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12]\n];\n\n// prettier-ignore\nconst blackTable3 = [\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 0000xx\n  [6, 9],                                 // 000100\n  [6, 8],                                 // 000101\n  [5, 7], [5, 7],                         // 00011x\n  [4, 6], [4, 6], [4, 6], [4, 6],         // 0010xx\n  [4, 5], [4, 5], [4, 5], [4, 5],         // 0011xx\n  [3, 1], [3, 1], [3, 1], [3, 1],         // 010xxx\n  [3, 1], [3, 1], [3, 1], [3, 1],\n  [3, 4], [3, 4], [3, 4], [3, 4],         // 011xxx\n  [3, 4], [3, 4], [3, 4], [3, 4],\n  [2, 3], [2, 3], [2, 3], [2, 3],         // 10xxxx\n  [2, 3], [2, 3], [2, 3], [2, 3],\n  [2, 3], [2, 3], [2, 3], [2, 3],\n  [2, 3], [2, 3], [2, 3], [2, 3],\n  [2, 2], [2, 2], [2, 2], [2, 2],         // 11xxxx\n  [2, 2], [2, 2], [2, 2], [2, 2],\n  [2, 2], [2, 2], [2, 2], [2, 2],\n  [2, 2], [2, 2], [2, 2], [2, 2]\n];\n\n/**\n * @param {CCITTFaxDecoderSource} source - The data which should be decoded.\n * @param {Object} [options] - Decoding options.\n */\nclass CCITTFaxDecoder {\n  constructor(source, options = {}) {\n    if (!source || typeof source.next !== \"function\") {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n\n    this.encoding = options.K || 0;\n    this.eoline = options.EndOfLine || false;\n    this.byteAlign = options.EncodedByteAlign || false;\n    this.columns = options.Columns || 1728;\n    this.rows = options.Rows || 0;\n    let eoblock = options.EndOfBlock;\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options.BlackIs1 || false;\n\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n\n    let code1;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n\n  readNextChar() {\n    if (this.eof) {\n      return -1;\n    }\n    const refLine = this.refLine;\n    const codingLine = this.codingLine;\n    const columns = this.columns;\n\n    let refPos, blackPixels, bits, i;\n\n    if (this.outputBits === 0) {\n      if (this.rowsDone) {\n        this.eof = true;\n      }\n      if (this.eof) {\n        return -1;\n      }\n      this.err = false;\n\n      let code1, code2, code3;\n      if (this.nextLine2D) {\n        for (i = 0; codingLine[i] < columns; ++i) {\n          refLine[i] = codingLine[i];\n        }\n        refLine[i++] = columns;\n        refLine[i] = columns;\n        codingLine[0] = 0;\n        this.codingPos = 0;\n        refPos = 0;\n        blackPixels = 0;\n\n        while (codingLine[this.codingPos] < columns) {\n          code1 = this._getTwoDimCode();\n          switch (code1) {\n            case twoDimPass:\n              this._addPixels(refLine[refPos + 1], blackPixels);\n              if (refLine[refPos + 1] < columns) {\n                refPos += 2;\n              }\n              break;\n            case twoDimHoriz:\n              code1 = code2 = 0;\n              if (blackPixels) {\n                do {\n                  code1 += code3 = this._getBlackCode();\n                } while (code3 >= 64);\n                do {\n                  code2 += code3 = this._getWhiteCode();\n                } while (code3 >= 64);\n              } else {\n                do {\n                  code1 += code3 = this._getWhiteCode();\n                } while (code3 >= 64);\n                do {\n                  code2 += code3 = this._getBlackCode();\n                } while (code3 >= 64);\n              }\n              this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n              if (codingLine[this.codingPos] < columns) {\n                this._addPixels(\n                  codingLine[this.codingPos] + code2,\n                  blackPixels ^ 1\n                );\n              }\n              while (\n                refLine[refPos] <= codingLine[this.codingPos] &&\n                refLine[refPos] < columns\n              ) {\n                refPos += 2;\n              }\n              break;\n            case twoDimVertR3:\n              this._addPixels(refLine[refPos] + 3, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertR2:\n              this._addPixels(refLine[refPos] + 2, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertR1:\n              this._addPixels(refLine[refPos] + 1, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVert0:\n              this._addPixels(refLine[refPos], blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL3:\n              this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL2:\n              this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL1:\n              this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case ccittEOF:\n              this._addPixels(columns, 0);\n              this.eof = true;\n              break;\n            default:\n              info(\"bad 2d code\");\n              this._addPixels(columns, 0);\n              this.err = true;\n          }\n        }\n      } else {\n        codingLine[0] = 0;\n        this.codingPos = 0;\n        blackPixels = 0;\n        while (codingLine[this.codingPos] < columns) {\n          code1 = 0;\n          if (blackPixels) {\n            do {\n              code1 += code3 = this._getBlackCode();\n            } while (code3 >= 64);\n          } else {\n            do {\n              code1 += code3 = this._getWhiteCode();\n            } while (code3 >= 64);\n          }\n          this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n          blackPixels ^= 1;\n        }\n      }\n\n      let gotEOL = false;\n\n      if (this.byteAlign) {\n        this.inputBits &= ~7;\n      }\n\n      if (!this.eoblock && this.row === this.rows - 1) {\n        this.rowsDone = true;\n      } else {\n        code1 = this._lookBits(12);\n        if (this.eoline) {\n          while (code1 !== ccittEOF && code1 !== 1) {\n            this._eatBits(1);\n            code1 = this._lookBits(12);\n          }\n        } else {\n          while (code1 === 0) {\n            this._eatBits(1);\n            code1 = this._lookBits(12);\n          }\n        }\n        if (code1 === 1) {\n          this._eatBits(12);\n          gotEOL = true;\n        } else if (code1 === ccittEOF) {\n          this.eof = true;\n        }\n      }\n\n      if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n        this.nextLine2D = !this._lookBits(1);\n        this._eatBits(1);\n      }\n\n      if (this.eoblock && gotEOL && this.byteAlign) {\n        code1 = this._lookBits(12);\n        if (code1 === 1) {\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._lookBits(1);\n            this._eatBits(1);\n          }\n          if (this.encoding >= 0) {\n            for (i = 0; i < 4; ++i) {\n              code1 = this._lookBits(12);\n              if (code1 !== 1) {\n                info(\"bad rtc code: \" + code1);\n              }\n              this._eatBits(12);\n              if (this.encoding > 0) {\n                this._lookBits(1);\n                this._eatBits(1);\n              }\n            }\n          }\n          this.eof = true;\n        }\n      } else if (this.err && this.eoline) {\n        while (true) {\n          code1 = this._lookBits(13);\n          if (code1 === ccittEOF) {\n            this.eof = true;\n            return -1;\n          }\n          if (code1 >> 1 === 1) {\n            break;\n          }\n          this._eatBits(1);\n        }\n        this._eatBits(12);\n        if (this.encoding > 0) {\n          this._eatBits(1);\n          this.nextLine2D = !(code1 & 1);\n        }\n      }\n\n      if (codingLine[0] > 0) {\n        this.outputBits = codingLine[(this.codingPos = 0)];\n      } else {\n        this.outputBits = codingLine[(this.codingPos = 1)];\n      }\n      this.row++;\n    }\n\n    let c;\n    if (this.outputBits >= 8) {\n      c = this.codingPos & 1 ? 0 : 0xff;\n      this.outputBits -= 8;\n      if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n        this.codingPos++;\n        this.outputBits =\n          codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n      }\n    } else {\n      bits = 8;\n      c = 0;\n      do {\n        if (typeof this.outputBits !== \"number\") {\n          throw new FormatError(\n            'Invalid /CCITTFaxDecode data, \"outputBits\" must be a number.'\n          );\n        }\n\n        if (this.outputBits > bits) {\n          c <<= bits;\n          if (!(this.codingPos & 1)) {\n            c |= 0xff >> (8 - bits);\n          }\n          this.outputBits -= bits;\n          bits = 0;\n        } else {\n          c <<= this.outputBits;\n          if (!(this.codingPos & 1)) {\n            c |= 0xff >> (8 - this.outputBits);\n          }\n          bits -= this.outputBits;\n          this.outputBits = 0;\n          if (codingLine[this.codingPos] < columns) {\n            this.codingPos++;\n            this.outputBits =\n              codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n          } else if (bits > 0) {\n            c <<= bits;\n            bits = 0;\n          }\n        }\n      } while (bits);\n    }\n    if (this.black) {\n      c ^= 0xff;\n    }\n    return c;\n  }\n\n  /**\n   * @private\n   */\n  _addPixels(a1, blackPixels) {\n    const codingLine = this.codingLine;\n    let codingPos = this.codingPos;\n\n    if (a1 > codingLine[codingPos]) {\n      if (a1 > this.columns) {\n        info(\"row is wrong length\");\n        this.err = true;\n        a1 = this.columns;\n      }\n      if ((codingPos & 1) ^ blackPixels) {\n        ++codingPos;\n      }\n\n      codingLine[codingPos] = a1;\n    }\n    this.codingPos = codingPos;\n  }\n\n  /**\n   * @private\n   */\n  _addPixelsNeg(a1, blackPixels) {\n    const codingLine = this.codingLine;\n    let codingPos = this.codingPos;\n\n    if (a1 > codingLine[codingPos]) {\n      if (a1 > this.columns) {\n        info(\"row is wrong length\");\n        this.err = true;\n        a1 = this.columns;\n      }\n      if ((codingPos & 1) ^ blackPixels) {\n        ++codingPos;\n      }\n\n      codingLine[codingPos] = a1;\n    } else if (a1 < codingLine[codingPos]) {\n      if (a1 < 0) {\n        info(\"invalid code\");\n        this.err = true;\n        a1 = 0;\n      }\n      while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n        --codingPos;\n      }\n      codingLine[codingPos] = a1;\n    }\n\n    this.codingPos = codingPos;\n  }\n\n  /**\n   * This function returns the code found from the table.\n   * The start and end parameters set the boundaries for searching the table.\n   * The limit parameter is optional. Function returns an array with three\n   * values. The first array element indicates whether a valid code is being\n   * returned. The second array element is the actual code. The third array\n   * element indicates whether EOF was reached.\n   * @private\n   */\n  _findTableCode(start, end, table, limit) {\n    const limitValue = limit || 0;\n    for (let i = start; i <= end; ++i) {\n      let code = this._lookBits(i);\n      if (code === ccittEOF) {\n        return [true, 1, false];\n      }\n      if (i < end) {\n        code <<= end - i;\n      }\n      if (!limitValue || code >= limitValue) {\n        const p = table[code - limitValue];\n        if (p[0] === i) {\n          this._eatBits(i);\n          return [true, p[1], true];\n        }\n      }\n    }\n    return [false, 0, false];\n  }\n\n  /**\n   * @private\n   */\n  _getTwoDimCode() {\n    let code = 0;\n    let p;\n    if (this.eoblock) {\n      code = this._lookBits(7);\n      p = twoDimTable[code];\n      if (p && p[0] > 0) {\n        this._eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      const result = this._findTableCode(1, 7, twoDimTable);\n      if (result[0] && result[2]) {\n        return result[1];\n      }\n    }\n    info(\"Bad two dim code\");\n    return ccittEOF;\n  }\n\n  /**\n   * @private\n   */\n  _getWhiteCode() {\n    let code = 0;\n    let p;\n    if (this.eoblock) {\n      code = this._lookBits(12);\n      if (code === ccittEOF) {\n        return 1;\n      }\n\n      if (code >> 5 === 0) {\n        p = whiteTable1[code];\n      } else {\n        p = whiteTable2[code >> 3];\n      }\n\n      if (p[0] > 0) {\n        this._eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      let result = this._findTableCode(1, 9, whiteTable2);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this._findTableCode(11, 12, whiteTable1);\n      if (result[0]) {\n        return result[1];\n      }\n    }\n    info(\"bad white code\");\n    this._eatBits(1);\n    return 1;\n  }\n\n  /**\n   * @private\n   */\n  _getBlackCode() {\n    let code, p;\n    if (this.eoblock) {\n      code = this._lookBits(13);\n      if (code === ccittEOF) {\n        return 1;\n      }\n      if (code >> 7 === 0) {\n        p = blackTable1[code];\n      } else if (code >> 9 === 0 && code >> 7 !== 0) {\n        p = blackTable2[(code >> 1) - 64];\n      } else {\n        p = blackTable3[code >> 7];\n      }\n\n      if (p[0] > 0) {\n        this._eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      let result = this._findTableCode(2, 6, blackTable3);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this._findTableCode(7, 12, blackTable2, 64);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this._findTableCode(10, 13, blackTable1);\n      if (result[0]) {\n        return result[1];\n      }\n    }\n    info(\"bad black code\");\n    this._eatBits(1);\n    return 1;\n  }\n\n  /**\n   * @private\n   */\n  _lookBits(n) {\n    let c;\n    while (this.inputBits < n) {\n      if ((c = this.source.next()) === -1) {\n        if (this.inputBits === 0) {\n          return ccittEOF;\n        }\n        return (this.inputBuf << (n - this.inputBits)) & (0xffff >> (16 - n));\n      }\n      this.inputBuf = (this.inputBuf << 8) | c;\n      this.inputBits += 8;\n    }\n    return (this.inputBuf >> (this.inputBits - n)) & (0xffff >> (16 - n));\n  }\n\n  /**\n   * @private\n   */\n  _eatBits(n) {\n    if ((this.inputBits -= n) < 0) {\n      this.inputBits = 0;\n    }\n  }\n}\n\nexport { CCITTFaxDecoder };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, BaseException, warn } from \"../shared/util.js\";\nimport { readUint16 } from \"./core_utils.js\";\n\nclass JpegError extends BaseException {\n  constructor(msg) {\n    super(`JPEG error: ${msg}`, \"JpegError\");\n  }\n}\n\nclass DNLMarkerError extends BaseException {\n  constructor(message, scanLines) {\n    super(message, \"DNLMarkerError\");\n    this.scanLines = scanLines;\n  }\n}\n\nclass EOIMarkerError extends BaseException {\n  constructor(msg) {\n    super(msg, \"EOIMarkerError\");\n  }\n}\n\n/**\n * This code was forked from https://github.com/notmasteryet/jpgjs.\n * The original version was created by GitHub user notmasteryet.\n *\n * - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n *   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n * - The JFIF specification can be found in the JPEG File Interchange Format\n *   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n * - The Adobe Application-Specific JPEG markers in the\n *   Supporting the DCT Filters in PostScript Level 2, Technical Note #5116\n *   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n */\n\n// prettier-ignore\nconst dctZigZag = new Uint8Array([\n   0,\n   1,  8,\n  16,  9,  2,\n   3, 10, 17, 24,\n  32, 25, 18, 11, 4,\n   5, 12, 19, 26, 33, 40,\n  48, 41, 34, 27, 20, 13,  6,\n   7, 14, 21, 28, 35, 42, 49, 56,\n  57, 50, 43, 36, 29, 22, 15,\n  23, 30, 37, 44, 51, 58,\n  59, 52, 45, 38, 31,\n  39, 46, 53, 60,\n  61, 54, 47,\n  55, 62,\n  63\n]);\n\nconst dctCos1 = 4017; // cos(pi/16)\nconst dctSin1 = 799; // sin(pi/16)\nconst dctCos3 = 3406; // cos(3*pi/16)\nconst dctSin3 = 2276; // sin(3*pi/16)\nconst dctCos6 = 1567; // cos(6*pi/16)\nconst dctSin6 = 3784; // sin(6*pi/16)\nconst dctSqrt2 = 5793; // sqrt(2)\nconst dctSqrt1d2 = 2896; // sqrt(2) / 2\n\nfunction buildHuffmanTable(codeLengths, values) {\n  let k = 0,\n    i,\n    j,\n    length = 16;\n  while (length > 0 && !codeLengths[length - 1]) {\n    length--;\n  }\n  const code = [{ children: [], index: 0 }];\n  let p = code[0],\n    q;\n  for (i = 0; i < length; i++) {\n    for (j = 0; j < codeLengths[i]; j++) {\n      p = code.pop();\n      p.children[p.index] = values[k];\n      while (p.index > 0) {\n        p = code.pop();\n      }\n      p.index++;\n      code.push(p);\n      while (code.length <= i) {\n        code.push((q = { children: [], index: 0 }));\n        p.children[p.index] = q.children;\n        p = q;\n      }\n      k++;\n    }\n    if (i + 1 < length) {\n      // p here points to last code\n      code.push((q = { children: [], index: 0 }));\n      p.children[p.index] = q.children;\n      p = q;\n    }\n  }\n  return code[0].children;\n}\n\nfunction getBlockBufferOffset(component, row, col) {\n  return 64 * ((component.blocksPerLine + 1) * row + col);\n}\n\nfunction decodeScan(\n  data,\n  offset,\n  frame,\n  components,\n  resetInterval,\n  spectralStart,\n  spectralEnd,\n  successivePrev,\n  successive,\n  parseDNLMarker = false\n) {\n  const mcusPerLine = frame.mcusPerLine;\n  const progressive = frame.progressive;\n\n  const startOffset = offset;\n  let bitsData = 0,\n    bitsCount = 0;\n\n  function readBit() {\n    if (bitsCount > 0) {\n      bitsCount--;\n      return (bitsData >> bitsCount) & 1;\n    }\n    bitsData = data[offset++];\n    if (bitsData === 0xff) {\n      const nextByte = data[offset++];\n      if (nextByte) {\n        if (nextByte === /* DNL = */ 0xdc && parseDNLMarker) {\n          offset += 2; // Skip marker length.\n\n          const scanLines = readUint16(data, offset);\n          offset += 2;\n          if (scanLines > 0 && scanLines !== frame.scanLines) {\n            throw new DNLMarkerError(\n              \"Found DNL marker (0xFFDC) while parsing scan data\",\n              scanLines\n            );\n          }\n        } else if (nextByte === /* EOI = */ 0xd9) {\n          if (parseDNLMarker) {\n            // NOTE: only 8-bit JPEG images are supported in this decoder.\n            const maybeScanLines = blockRow * (frame.precision === 8 ? 8 : 0);\n            // Heuristic to attempt to handle corrupt JPEG images with too\n            // large `scanLines` parameter, by falling back to the currently\n            // parsed number of scanLines when it's at least (approximately)\n            // one \"half\" order of magnitude smaller than expected (fixes\n            // issue10880.pdf, issue10989.pdf, issue15492.pdf).\n            if (\n              maybeScanLines > 0 &&\n              Math.round(frame.scanLines / maybeScanLines) >= 5\n            ) {\n              throw new DNLMarkerError(\n                \"Found EOI marker (0xFFD9) while parsing scan data, \" +\n                  \"possibly caused by incorrect `scanLines` parameter\",\n                maybeScanLines\n              );\n            }\n          }\n          throw new EOIMarkerError(\n            \"Found EOI marker (0xFFD9) while parsing scan data\"\n          );\n        }\n        throw new JpegError(\n          `unexpected marker ${((bitsData << 8) | nextByte).toString(16)}`\n        );\n      }\n      // unstuff 0\n    }\n    bitsCount = 7;\n    return bitsData >>> 7;\n  }\n\n  function decodeHuffman(tree) {\n    let node = tree;\n    while (true) {\n      node = node[readBit()];\n      switch (typeof node) {\n        case \"number\":\n          return node;\n        case \"object\":\n          continue;\n      }\n      throw new JpegError(\"invalid huffman sequence\");\n    }\n  }\n\n  function receive(length) {\n    let n = 0;\n    while (length > 0) {\n      n = (n << 1) | readBit();\n      length--;\n    }\n    return n;\n  }\n\n  function receiveAndExtend(length) {\n    if (length === 1) {\n      return readBit() === 1 ? 1 : -1;\n    }\n    const n = receive(length);\n    if (n >= 1 << (length - 1)) {\n      return n;\n    }\n    return n + (-1 << length) + 1;\n  }\n\n  function decodeBaseline(component, blockOffset) {\n    const t = decodeHuffman(component.huffmanTableDC);\n    const diff = t === 0 ? 0 : receiveAndExtend(t);\n    component.blockData[blockOffset] = component.pred += diff;\n    let k = 1;\n    while (k < 64) {\n      const rs = decodeHuffman(component.huffmanTableAC);\n      const s = rs & 15,\n        r = rs >> 4;\n      if (s === 0) {\n        if (r < 15) {\n          break;\n        }\n        k += 16;\n        continue;\n      }\n      k += r;\n      const z = dctZigZag[k];\n      component.blockData[blockOffset + z] = receiveAndExtend(s);\n      k++;\n    }\n  }\n\n  function decodeDCFirst(component, blockOffset) {\n    const t = decodeHuffman(component.huffmanTableDC);\n    const diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n    component.blockData[blockOffset] = component.pred += diff;\n  }\n\n  function decodeDCSuccessive(component, blockOffset) {\n    component.blockData[blockOffset] |= readBit() << successive;\n  }\n\n  let eobrun = 0;\n  function decodeACFirst(component, blockOffset) {\n    if (eobrun > 0) {\n      eobrun--;\n      return;\n    }\n    let k = spectralStart;\n    const e = spectralEnd;\n    while (k <= e) {\n      const rs = decodeHuffman(component.huffmanTableAC);\n      const s = rs & 15,\n        r = rs >> 4;\n      if (s === 0) {\n        if (r < 15) {\n          eobrun = receive(r) + (1 << r) - 1;\n          break;\n        }\n        k += 16;\n        continue;\n      }\n      k += r;\n      const z = dctZigZag[k];\n      component.blockData[blockOffset + z] =\n        receiveAndExtend(s) * (1 << successive);\n      k++;\n    }\n  }\n\n  let successiveACState = 0,\n    successiveACNextValue;\n  function decodeACSuccessive(component, blockOffset) {\n    let k = spectralStart;\n    const e = spectralEnd;\n    let r = 0;\n    let s;\n    let rs;\n    while (k <= e) {\n      const offsetZ = blockOffset + dctZigZag[k];\n      const sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n      switch (successiveACState) {\n        case 0: // initial state\n          rs = decodeHuffman(component.huffmanTableAC);\n          s = rs & 15;\n          r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              eobrun = receive(r) + (1 << r);\n              successiveACState = 4;\n            } else {\n              r = 16;\n              successiveACState = 1;\n            }\n          } else {\n            if (s !== 1) {\n              throw new JpegError(\"invalid ACn encoding\");\n            }\n            successiveACNextValue = receiveAndExtend(s);\n            successiveACState = r ? 2 : 3;\n          }\n          continue;\n        case 1: // skipping r zero items\n        case 2:\n          if (component.blockData[offsetZ]) {\n            component.blockData[offsetZ] += sign * (readBit() << successive);\n          } else {\n            r--;\n            if (r === 0) {\n              successiveACState = successiveACState === 2 ? 3 : 0;\n            }\n          }\n          break;\n        case 3: // set value for a zero item\n          if (component.blockData[offsetZ]) {\n            component.blockData[offsetZ] += sign * (readBit() << successive);\n          } else {\n            component.blockData[offsetZ] = successiveACNextValue << successive;\n            successiveACState = 0;\n          }\n          break;\n        case 4: // eob\n          if (component.blockData[offsetZ]) {\n            component.blockData[offsetZ] += sign * (readBit() << successive);\n          }\n          break;\n      }\n      k++;\n    }\n    if (successiveACState === 4) {\n      eobrun--;\n      if (eobrun === 0) {\n        successiveACState = 0;\n      }\n    }\n  }\n\n  let blockRow = 0;\n  function decodeMcu(component, decode, mcu, row, col) {\n    const mcuRow = (mcu / mcusPerLine) | 0;\n    const mcuCol = mcu % mcusPerLine;\n    blockRow = mcuRow * component.v + row;\n    const blockCol = mcuCol * component.h + col;\n    const blockOffset = getBlockBufferOffset(component, blockRow, blockCol);\n    decode(component, blockOffset);\n  }\n\n  function decodeBlock(component, decode, mcu) {\n    blockRow = (mcu / component.blocksPerLine) | 0;\n    const blockCol = mcu % component.blocksPerLine;\n    const blockOffset = getBlockBufferOffset(component, blockRow, blockCol);\n    decode(component, blockOffset);\n  }\n\n  const componentsLength = components.length;\n  let component, i, j, k, n;\n  let decodeFn;\n  if (progressive) {\n    if (spectralStart === 0) {\n      decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n    } else {\n      decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n    }\n  } else {\n    decodeFn = decodeBaseline;\n  }\n\n  let mcu = 0,\n    fileMarker;\n  let mcuExpected;\n  if (componentsLength === 1) {\n    mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n  } else {\n    mcuExpected = mcusPerLine * frame.mcusPerColumn;\n  }\n\n  let h, v;\n  while (mcu <= mcuExpected) {\n    // reset interval stuff\n    const mcuToRead = resetInterval\n      ? Math.min(mcuExpected - mcu, resetInterval)\n      : mcuExpected;\n\n    // The `mcuToRead === 0` case should only occur when all of the expected\n    // MCU data has been already parsed, i.e. when `mcu === mcuExpected`, but\n    // some corrupt JPEG images contain more data than intended and we thus\n    // want to skip over any extra RSTx markers below (fixes issue11794.pdf).\n    if (mcuToRead > 0) {\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n    }\n\n    // find marker\n    bitsCount = 0;\n    fileMarker = findNextFileMarker(data, offset);\n    if (!fileMarker) {\n      break; // Reached the end of the image data without finding any marker.\n    }\n    if (fileMarker.invalid) {\n      // Some bad images seem to pad Scan blocks with e.g. zero bytes, skip\n      // past those to attempt to find a valid marker (fixes issue4090.pdf).\n      const partialMsg = mcuToRead > 0 ? \"unexpected\" : \"excessive\";\n      warn(\n        `decodeScan - ${partialMsg} MCU data, current marker is: ${fileMarker.invalid}`\n      );\n      offset = fileMarker.offset;\n    }\n    if (fileMarker.marker >= 0xffd0 && fileMarker.marker <= 0xffd7) {\n      // RSTx\n      offset += 2;\n    } else {\n      break;\n    }\n  }\n\n  return offset - startOffset;\n}\n\n// A port of poppler's IDCT method which in turn is taken from:\n//   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n//   'Practical Fast 1-D DCT Algorithms with 11 Multiplications',\n//   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n//   988-991.\nfunction quantizeAndInverse(component, blockBufferOffset, p) {\n  const qt = component.quantizationTable,\n    blockData = component.blockData;\n  let v0, v1, v2, v3, v4, v5, v6, v7;\n  let p0, p1, p2, p3, p4, p5, p6, p7;\n  let t;\n\n  if (!qt) {\n    throw new JpegError(\"missing required Quantization Table.\");\n  }\n\n  // inverse DCT on rows\n  for (let row = 0; row < 64; row += 8) {\n    // gather block data\n    p0 = blockData[blockBufferOffset + row];\n    p1 = blockData[blockBufferOffset + row + 1];\n    p2 = blockData[blockBufferOffset + row + 2];\n    p3 = blockData[blockBufferOffset + row + 3];\n    p4 = blockData[blockBufferOffset + row + 4];\n    p5 = blockData[blockBufferOffset + row + 5];\n    p6 = blockData[blockBufferOffset + row + 6];\n    p7 = blockData[blockBufferOffset + row + 7];\n\n    // dequant p0\n    p0 *= qt[row];\n\n    // check for all-zero AC coefficients\n    if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n      t = (dctSqrt2 * p0 + 512) >> 10;\n      p[row] = t;\n      p[row + 1] = t;\n      p[row + 2] = t;\n      p[row + 3] = t;\n      p[row + 4] = t;\n      p[row + 5] = t;\n      p[row + 6] = t;\n      p[row + 7] = t;\n      continue;\n    }\n    // dequant p1 ... p7\n    p1 *= qt[row + 1];\n    p2 *= qt[row + 2];\n    p3 *= qt[row + 3];\n    p4 *= qt[row + 4];\n    p5 *= qt[row + 5];\n    p6 *= qt[row + 6];\n    p7 *= qt[row + 7];\n\n    // stage 4\n    v0 = (dctSqrt2 * p0 + 128) >> 8;\n    v1 = (dctSqrt2 * p4 + 128) >> 8;\n    v2 = p2;\n    v3 = p6;\n    v4 = (dctSqrt1d2 * (p1 - p7) + 128) >> 8;\n    v7 = (dctSqrt1d2 * (p1 + p7) + 128) >> 8;\n    v5 = p3 << 4;\n    v6 = p5 << 4;\n\n    // stage 3\n    v0 = (v0 + v1 + 1) >> 1;\n    v1 = v0 - v1;\n    t = (v2 * dctSin6 + v3 * dctCos6 + 128) >> 8;\n    v2 = (v2 * dctCos6 - v3 * dctSin6 + 128) >> 8;\n    v3 = t;\n    v4 = (v4 + v6 + 1) >> 1;\n    v6 = v4 - v6;\n    v7 = (v7 + v5 + 1) >> 1;\n    v5 = v7 - v5;\n\n    // stage 2\n    v0 = (v0 + v3 + 1) >> 1;\n    v3 = v0 - v3;\n    v1 = (v1 + v2 + 1) >> 1;\n    v2 = v1 - v2;\n    t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n    v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n    v7 = t;\n    t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n    v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n    v6 = t;\n\n    // stage 1\n    p[row] = v0 + v7;\n    p[row + 7] = v0 - v7;\n    p[row + 1] = v1 + v6;\n    p[row + 6] = v1 - v6;\n    p[row + 2] = v2 + v5;\n    p[row + 5] = v2 - v5;\n    p[row + 3] = v3 + v4;\n    p[row + 4] = v3 - v4;\n  }\n\n  // inverse DCT on columns\n  for (let col = 0; col < 8; ++col) {\n    p0 = p[col];\n    p1 = p[col + 8];\n    p2 = p[col + 16];\n    p3 = p[col + 24];\n    p4 = p[col + 32];\n    p5 = p[col + 40];\n    p6 = p[col + 48];\n    p7 = p[col + 56];\n\n    // check for all-zero AC coefficients\n    if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n      t = (dctSqrt2 * p0 + 8192) >> 14;\n      // Convert to 8-bit.\n      if (t < -2040) {\n        t = 0;\n      } else if (t >= 2024) {\n        t = 255;\n      } else {\n        t = (t + 2056) >> 4;\n      }\n      blockData[blockBufferOffset + col] = t;\n      blockData[blockBufferOffset + col + 8] = t;\n      blockData[blockBufferOffset + col + 16] = t;\n      blockData[blockBufferOffset + col + 24] = t;\n      blockData[blockBufferOffset + col + 32] = t;\n      blockData[blockBufferOffset + col + 40] = t;\n      blockData[blockBufferOffset + col + 48] = t;\n      blockData[blockBufferOffset + col + 56] = t;\n      continue;\n    }\n\n    // stage 4\n    v0 = (dctSqrt2 * p0 + 2048) >> 12;\n    v1 = (dctSqrt2 * p4 + 2048) >> 12;\n    v2 = p2;\n    v3 = p6;\n    v4 = (dctSqrt1d2 * (p1 - p7) + 2048) >> 12;\n    v7 = (dctSqrt1d2 * (p1 + p7) + 2048) >> 12;\n    v5 = p3;\n    v6 = p5;\n\n    // stage 3\n    // Shift v0 by 128.5 << 5 here, so we don't need to shift p0...p7 when\n    // converting to UInt8 range later.\n    v0 = ((v0 + v1 + 1) >> 1) + 4112;\n    v1 = v0 - v1;\n    t = (v2 * dctSin6 + v3 * dctCos6 + 2048) >> 12;\n    v2 = (v2 * dctCos6 - v3 * dctSin6 + 2048) >> 12;\n    v3 = t;\n    v4 = (v4 + v6 + 1) >> 1;\n    v6 = v4 - v6;\n    v7 = (v7 + v5 + 1) >> 1;\n    v5 = v7 - v5;\n\n    // stage 2\n    v0 = (v0 + v3 + 1) >> 1;\n    v3 = v0 - v3;\n    v1 = (v1 + v2 + 1) >> 1;\n    v2 = v1 - v2;\n    t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n    v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n    v7 = t;\n    t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n    v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n    v6 = t;\n\n    // stage 1\n    p0 = v0 + v7;\n    p7 = v0 - v7;\n    p1 = v1 + v6;\n    p6 = v1 - v6;\n    p2 = v2 + v5;\n    p5 = v2 - v5;\n    p3 = v3 + v4;\n    p4 = v3 - v4;\n\n    // Convert to 8-bit integers.\n    if (p0 < 16) {\n      p0 = 0;\n    } else if (p0 >= 4080) {\n      p0 = 255;\n    } else {\n      p0 >>= 4;\n    }\n    if (p1 < 16) {\n      p1 = 0;\n    } else if (p1 >= 4080) {\n      p1 = 255;\n    } else {\n      p1 >>= 4;\n    }\n    if (p2 < 16) {\n      p2 = 0;\n    } else if (p2 >= 4080) {\n      p2 = 255;\n    } else {\n      p2 >>= 4;\n    }\n    if (p3 < 16) {\n      p3 = 0;\n    } else if (p3 >= 4080) {\n      p3 = 255;\n    } else {\n      p3 >>= 4;\n    }\n    if (p4 < 16) {\n      p4 = 0;\n    } else if (p4 >= 4080) {\n      p4 = 255;\n    } else {\n      p4 >>= 4;\n    }\n    if (p5 < 16) {\n      p5 = 0;\n    } else if (p5 >= 4080) {\n      p5 = 255;\n    } else {\n      p5 >>= 4;\n    }\n    if (p6 < 16) {\n      p6 = 0;\n    } else if (p6 >= 4080) {\n      p6 = 255;\n    } else {\n      p6 >>= 4;\n    }\n    if (p7 < 16) {\n      p7 = 0;\n    } else if (p7 >= 4080) {\n      p7 = 255;\n    } else {\n      p7 >>= 4;\n    }\n\n    // store block data\n    blockData[blockBufferOffset + col] = p0;\n    blockData[blockBufferOffset + col + 8] = p1;\n    blockData[blockBufferOffset + col + 16] = p2;\n    blockData[blockBufferOffset + col + 24] = p3;\n    blockData[blockBufferOffset + col + 32] = p4;\n    blockData[blockBufferOffset + col + 40] = p5;\n    blockData[blockBufferOffset + col + 48] = p6;\n    blockData[blockBufferOffset + col + 56] = p7;\n  }\n}\n\nfunction buildComponentData(frame, component) {\n  const blocksPerLine = component.blocksPerLine;\n  const blocksPerColumn = component.blocksPerColumn;\n  const computationBuffer = new Int16Array(64);\n\n  for (let blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n    for (let blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n      const offset = getBlockBufferOffset(component, blockRow, blockCol);\n      quantizeAndInverse(component, offset, computationBuffer);\n    }\n  }\n  return component.blockData;\n}\n\nfunction findNextFileMarker(data, currentPos, startPos = currentPos) {\n  const maxPos = data.length - 1;\n  let newPos = startPos < currentPos ? startPos : currentPos;\n\n  if (currentPos >= maxPos) {\n    return null; // Don't attempt to read non-existent data and just return.\n  }\n  const currentMarker = readUint16(data, currentPos);\n  if (currentMarker >= 0xffc0 && currentMarker <= 0xfffe) {\n    return {\n      invalid: null,\n      marker: currentMarker,\n      offset: currentPos,\n    };\n  }\n  let newMarker = readUint16(data, newPos);\n  while (!(newMarker >= 0xffc0 && newMarker <= 0xfffe)) {\n    if (++newPos >= maxPos) {\n      return null; // Don't attempt to read non-existent data and just return.\n    }\n    newMarker = readUint16(data, newPos);\n  }\n  return {\n    invalid: currentMarker.toString(16),\n    marker: newMarker,\n    offset: newPos,\n  };\n}\n\nclass JpegImage {\n  constructor({ decodeTransform = null, colorTransform = -1 } = {}) {\n    this._decodeTransform = decodeTransform;\n    this._colorTransform = colorTransform;\n  }\n\n  parse(data, { dnlScanLines = null } = {}) {\n    function readDataBlock() {\n      const length = readUint16(data, offset);\n      offset += 2;\n      let endOffset = offset + length - 2;\n\n      const fileMarker = findNextFileMarker(data, endOffset, offset);\n      if (fileMarker && fileMarker.invalid) {\n        warn(\n          \"readDataBlock - incorrect length, current marker is: \" +\n            fileMarker.invalid\n        );\n        endOffset = fileMarker.offset;\n      }\n\n      const array = data.subarray(offset, endOffset);\n      offset += array.length;\n      return array;\n    }\n\n    function prepareComponents(frame) {\n      const mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n      const mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n      for (const component of frame.components) {\n        const blocksPerLine = Math.ceil(\n          (Math.ceil(frame.samplesPerLine / 8) * component.h) / frame.maxH\n        );\n        const blocksPerColumn = Math.ceil(\n          (Math.ceil(frame.scanLines / 8) * component.v) / frame.maxV\n        );\n        const blocksPerLineForMcu = mcusPerLine * component.h;\n        const blocksPerColumnForMcu = mcusPerColumn * component.v;\n\n        const blocksBufferSize =\n          64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n        component.blockData = new Int16Array(blocksBufferSize);\n        component.blocksPerLine = blocksPerLine;\n        component.blocksPerColumn = blocksPerColumn;\n      }\n      frame.mcusPerLine = mcusPerLine;\n      frame.mcusPerColumn = mcusPerColumn;\n    }\n\n    let offset = 0;\n    let jfif = null;\n    let adobe = null;\n    let frame, resetInterval;\n    let numSOSMarkers = 0;\n    const quantizationTables = [];\n    const huffmanTablesAC = [],\n      huffmanTablesDC = [];\n\n    let fileMarker = readUint16(data, offset);\n    offset += 2;\n    if (fileMarker !== /* SOI (Start of Image) = */ 0xffd8) {\n      throw new JpegError(\"SOI not found\");\n    }\n    fileMarker = readUint16(data, offset);\n    offset += 2;\n\n    markerLoop: while (fileMarker !== /* EOI (End of Image) = */ 0xffd9) {\n      let i, j, l;\n      switch (fileMarker) {\n        case 0xffe0: // APP0 (Application Specific)\n        case 0xffe1: // APP1\n        case 0xffe2: // APP2\n        case 0xffe3: // APP3\n        case 0xffe4: // APP4\n        case 0xffe5: // APP5\n        case 0xffe6: // APP6\n        case 0xffe7: // APP7\n        case 0xffe8: // APP8\n        case 0xffe9: // APP9\n        case 0xffea: // APP10\n        case 0xffeb: // APP11\n        case 0xffec: // APP12\n        case 0xffed: // APP13\n        case 0xffee: // APP14\n        case 0xffef: // APP15\n        case 0xfffe: // COM (Comment)\n          const appData = readDataBlock();\n\n          if (fileMarker === 0xffe0) {\n            // 'JFIF\\x00'\n            if (\n              appData[0] === 0x4a &&\n              appData[1] === 0x46 &&\n              appData[2] === 0x49 &&\n              appData[3] === 0x46 &&\n              appData[4] === 0\n            ) {\n              jfif = {\n                version: { major: appData[5], minor: appData[6] },\n                densityUnits: appData[7],\n                xDensity: (appData[8] << 8) | appData[9],\n                yDensity: (appData[10] << 8) | appData[11],\n                thumbWidth: appData[12],\n                thumbHeight: appData[13],\n                thumbData: appData.subarray(\n                  14,\n                  14 + 3 * appData[12] * appData[13]\n                ),\n              };\n            }\n          }\n          // TODO APP1 - Exif\n          if (fileMarker === 0xffee) {\n            // 'Adobe'\n            if (\n              appData[0] === 0x41 &&\n              appData[1] === 0x64 &&\n              appData[2] === 0x6f &&\n              appData[3] === 0x62 &&\n              appData[4] === 0x65\n            ) {\n              adobe = {\n                version: (appData[5] << 8) | appData[6],\n                flags0: (appData[7] << 8) | appData[8],\n                flags1: (appData[9] << 8) | appData[10],\n                transformCode: appData[11],\n              };\n            }\n          }\n          break;\n\n        case 0xffdb: // DQT (Define Quantization Tables)\n          const quantizationTablesLength = readUint16(data, offset);\n          offset += 2;\n          const quantizationTablesEnd = quantizationTablesLength + offset - 2;\n          let z;\n          while (offset < quantizationTablesEnd) {\n            const quantizationTableSpec = data[offset++];\n            const tableData = new Uint16Array(64);\n            if (quantizationTableSpec >> 4 === 0) {\n              // 8 bit values\n              for (j = 0; j < 64; j++) {\n                z = dctZigZag[j];\n                tableData[z] = data[offset++];\n              }\n            } else if (quantizationTableSpec >> 4 === 1) {\n              // 16 bit values\n              for (j = 0; j < 64; j++) {\n                z = dctZigZag[j];\n                tableData[z] = readUint16(data, offset);\n                offset += 2;\n              }\n            } else {\n              throw new JpegError(\"DQT - invalid table spec\");\n            }\n            quantizationTables[quantizationTableSpec & 15] = tableData;\n          }\n          break;\n\n        case 0xffc0: // SOF0 (Start of Frame, Baseline DCT)\n        case 0xffc1: // SOF1 (Start of Frame, Extended DCT)\n        case 0xffc2: // SOF2 (Start of Frame, Progressive DCT)\n          if (frame) {\n            throw new JpegError(\"Only single frame JPEGs supported\");\n          }\n          offset += 2; // Skip marker length.\n\n          frame = {};\n          frame.extended = fileMarker === 0xffc1;\n          frame.progressive = fileMarker === 0xffc2;\n          frame.precision = data[offset++];\n          const sofScanLines = readUint16(data, offset);\n          offset += 2;\n          frame.scanLines = dnlScanLines || sofScanLines;\n          frame.samplesPerLine = readUint16(data, offset);\n          offset += 2;\n          frame.components = [];\n          frame.componentIds = {};\n          const componentsCount = data[offset++];\n          let maxH = 0,\n            maxV = 0;\n          for (i = 0; i < componentsCount; i++) {\n            const componentId = data[offset];\n            const h = data[offset + 1] >> 4;\n            const v = data[offset + 1] & 15;\n            if (maxH < h) {\n              maxH = h;\n            }\n            if (maxV < v) {\n              maxV = v;\n            }\n            const qId = data[offset + 2];\n            l = frame.components.push({\n              h,\n              v,\n              quantizationId: qId,\n              quantizationTable: null, // See comment below.\n            });\n            frame.componentIds[componentId] = l - 1;\n            offset += 3;\n          }\n          frame.maxH = maxH;\n          frame.maxV = maxV;\n          prepareComponents(frame);\n          break;\n\n        case 0xffc4: // DHT (Define Huffman Tables)\n          const huffmanLength = readUint16(data, offset);\n          offset += 2;\n          for (i = 2; i < huffmanLength; ) {\n            const huffmanTableSpec = data[offset++];\n            const codeLengths = new Uint8Array(16);\n            let codeLengthSum = 0;\n            for (j = 0; j < 16; j++, offset++) {\n              codeLengthSum += codeLengths[j] = data[offset];\n            }\n            const huffmanValues = new Uint8Array(codeLengthSum);\n            for (j = 0; j < codeLengthSum; j++, offset++) {\n              huffmanValues[j] = data[offset];\n            }\n            i += 17 + codeLengthSum;\n\n            (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[\n              huffmanTableSpec & 15\n            ] = buildHuffmanTable(codeLengths, huffmanValues);\n          }\n          break;\n\n        case 0xffdd: // DRI (Define Restart Interval)\n          offset += 2; // Skip marker length.\n\n          resetInterval = readUint16(data, offset);\n          offset += 2;\n          break;\n\n        case 0xffda: // SOS (Start of Scan)\n          // A DNL marker (0xFFDC), if it exists, is only allowed at the end\n          // of the first scan segment and may only occur once in an image.\n          // Furthermore, to prevent an infinite loop, do *not* attempt to\n          // parse DNL markers during re-parsing of the JPEG scan data.\n          const parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n\n          offset += 2; // Skip marker length.\n\n          const selectorsCount = data[offset++],\n            components = [];\n          for (i = 0; i < selectorsCount; i++) {\n            const index = data[offset++];\n            const componentIndex = frame.componentIds[index];\n            const component = frame.components[componentIndex];\n            component.index = index;\n            const tableSpec = data[offset++];\n            component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n            component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n            components.push(component);\n          }\n          const spectralStart = data[offset++],\n            spectralEnd = data[offset++],\n            successiveApproximation = data[offset++];\n          try {\n            const processed = decodeScan(\n              data,\n              offset,\n              frame,\n              components,\n              resetInterval,\n              spectralStart,\n              spectralEnd,\n              successiveApproximation >> 4,\n              successiveApproximation & 15,\n              parseDNLMarker\n            );\n            offset += processed;\n          } catch (ex) {\n            if (ex instanceof DNLMarkerError) {\n              warn(`${ex.message} -- attempting to re-parse the JPEG image.`);\n              return this.parse(data, { dnlScanLines: ex.scanLines });\n            } else if (ex instanceof EOIMarkerError) {\n              warn(`${ex.message} -- ignoring the rest of the image data.`);\n              break markerLoop;\n            }\n            throw ex;\n          }\n          break;\n\n        case 0xffdc: // DNL (Define Number of Lines)\n          // Ignore the marker, since it's being handled in `decodeScan`.\n          offset += 4;\n          break;\n\n        case 0xffff: // Fill bytes\n          if (data[offset] !== 0xff) {\n            // Avoid skipping a valid marker.\n            offset--;\n          }\n          break;\n\n        default:\n          // Could be incorrect encoding -- the last 0xFF byte of the previous\n          // block could have been eaten by the encoder, hence we fallback to\n          // `startPos = offset - 3` when looking for the next valid marker.\n          const nextFileMarker = findNextFileMarker(\n            data,\n            /* currentPos = */ offset - 2,\n            /* startPos = */ offset - 3\n          );\n          if (nextFileMarker && nextFileMarker.invalid) {\n            warn(\n              \"JpegImage.parse - unexpected data, current marker is: \" +\n                nextFileMarker.invalid\n            );\n            offset = nextFileMarker.offset;\n            break;\n          }\n          if (!nextFileMarker || offset >= data.length - 1) {\n            warn(\n              \"JpegImage.parse - reached the end of the image data \" +\n                \"without finding an EOI marker (0xFFD9).\"\n            );\n            break markerLoop;\n          }\n          throw new JpegError(\n            \"JpegImage.parse - unknown marker: \" + fileMarker.toString(16)\n          );\n      }\n      fileMarker = readUint16(data, offset);\n      offset += 2;\n    }\n\n    this.width = frame.samplesPerLine;\n    this.height = frame.scanLines;\n    this.jfif = jfif;\n    this.adobe = adobe;\n    this.components = [];\n    for (const component of frame.components) {\n      // Prevent errors when DQT markers are placed after SOF{n} markers,\n      // by assigning the `quantizationTable` entry after the entire image\n      // has been parsed (fixes issue7406.pdf).\n      const quantizationTable = quantizationTables[component.quantizationId];\n      if (quantizationTable) {\n        component.quantizationTable = quantizationTable;\n      }\n\n      this.components.push({\n        index: component.index,\n        output: buildComponentData(frame, component),\n        scaleX: component.h / frame.maxH,\n        scaleY: component.v / frame.maxV,\n        blocksPerLine: component.blocksPerLine,\n        blocksPerColumn: component.blocksPerColumn,\n      });\n    }\n    this.numComponents = this.components.length;\n    return undefined;\n  }\n\n  _getLinearizedBlockData(width, height, isSourcePDF = false) {\n    const scaleX = this.width / width,\n      scaleY = this.height / height;\n\n    let component, componentScaleX, componentScaleY, blocksPerScanline;\n    let x, y, i, j, k;\n    let index;\n    let offset = 0;\n    let output;\n    const numComponents = this.components.length;\n    const dataLength = width * height * numComponents;\n    const data = new Uint8ClampedArray(dataLength);\n    const xScaleBlockOffset = new Uint32Array(width);\n    const mask3LSB = 0xfffffff8; // used to clear the 3 LSBs\n    let lastComponentScaleX;\n\n    for (i = 0; i < numComponents; i++) {\n      component = this.components[i];\n      componentScaleX = component.scaleX * scaleX;\n      componentScaleY = component.scaleY * scaleY;\n      offset = i;\n      output = component.output;\n      blocksPerScanline = (component.blocksPerLine + 1) << 3;\n      // Precalculate the `xScaleBlockOffset`. Since it doesn't depend on the\n      // component data, that's only necessary when `componentScaleX` changes.\n      if (componentScaleX !== lastComponentScaleX) {\n        for (x = 0; x < width; x++) {\n          j = 0 | (x * componentScaleX);\n          xScaleBlockOffset[x] = ((j & mask3LSB) << 3) | (j & 7);\n        }\n        lastComponentScaleX = componentScaleX;\n      }\n      // linearize the blocks of the component\n      for (y = 0; y < height; y++) {\n        j = 0 | (y * componentScaleY);\n        index = (blocksPerScanline * (j & mask3LSB)) | ((j & 7) << 3);\n        for (x = 0; x < width; x++) {\n          data[offset] = output[index + xScaleBlockOffset[x]];\n          offset += numComponents;\n        }\n      }\n    }\n\n    // decodeTransform contains pairs of multiplier (-256..256) and additive\n    let transform = this._decodeTransform;\n\n    // In PDF files, JPEG images with CMYK colour spaces are usually inverted\n    // (this can be observed by extracting the raw image data).\n    // Since the conversion algorithms (see below) were written primarily for\n    // the PDF use-cases, attempting to use `JpegImage` to parse standalone\n    // JPEG (CMYK) images may thus result in inverted images (see issue 9513).\n    //\n    // Unfortunately it's not (always) possible to tell, from the image data\n    // alone, if it needs to be inverted. Thus in an attempt to provide better\n    // out-of-box behaviour when `JpegImage` is used standalone, default to\n    // inverting JPEG (CMYK) images if and only if the image data does *not*\n    // come from a PDF file and no `decodeTransform` was passed by the user.\n    if (!isSourcePDF && numComponents === 4 && !transform) {\n      transform = new Int32Array([-256, 255, -256, 255, -256, 255, -256, 255]);\n    }\n\n    if (transform) {\n      for (i = 0; i < dataLength; ) {\n        for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n          data[i] = ((data[i] * transform[k]) >> 8) + transform[k + 1];\n        }\n      }\n    }\n    return data;\n  }\n\n  get _isColorConversionNeeded() {\n    if (this.adobe) {\n      // The adobe transform marker overrides any previous setting.\n      return !!this.adobe.transformCode;\n    }\n    if (this.numComponents === 3) {\n      if (this._colorTransform === 0) {\n        // If the Adobe transform marker is not present and the image\n        // dictionary has a 'ColorTransform' entry, explicitly set to `0`,\n        // then the colours should *not* be transformed.\n        return false;\n      } else if (\n        this.components[0].index === /* \"R\" = */ 0x52 &&\n        this.components[1].index === /* \"G\" = */ 0x47 &&\n        this.components[2].index === /* \"B\" = */ 0x42\n      ) {\n        // If the three components are indexed as RGB in ASCII\n        // then the colours should *not* be transformed.\n        return false;\n      }\n      return true;\n    }\n    // `this.numComponents !== 3`\n    if (this._colorTransform === 1) {\n      // If the Adobe transform marker is not present and the image\n      // dictionary has a 'ColorTransform' entry, explicitly set to `1`,\n      // then the colours should be transformed.\n      return true;\n    }\n    return false;\n  }\n\n  _convertYccToRgb(data) {\n    let Y, Cb, Cr;\n    for (let i = 0, length = data.length; i < length; i += 3) {\n      Y = data[i];\n      Cb = data[i + 1];\n      Cr = data[i + 2];\n      data[i] = Y - 179.456 + 1.402 * Cr;\n      data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n      data[i + 2] = Y - 226.816 + 1.772 * Cb;\n    }\n    return data;\n  }\n\n  _convertYcckToRgb(data) {\n    let Y, Cb, Cr, k;\n    let offset = 0;\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      Y = data[i];\n      Cb = data[i + 1];\n      Cr = data[i + 2];\n      k = data[i + 3];\n\n      data[offset++] =\n        -122.67195406894 +\n        Cb *\n          (-6.60635669420364e-5 * Cb +\n            0.000437130475926232 * Cr -\n            5.4080610064599e-5 * Y +\n            0.00048449797120281 * k -\n            0.154362151871126) +\n        Cr *\n          (-0.000957964378445773 * Cr +\n            0.000817076911346625 * Y -\n            0.00477271405408747 * k +\n            1.53380253221734) +\n        Y *\n          (0.000961250184130688 * Y -\n            0.00266257332283933 * k +\n            0.48357088451265) +\n        k * (-0.000336197177618394 * k + 0.484791561490776);\n\n      data[offset++] =\n        107.268039397724 +\n        Cb *\n          (2.19927104525741e-5 * Cb -\n            0.000640992018297945 * Cr +\n            0.000659397001245577 * Y +\n            0.000426105652938837 * k -\n            0.176491792462875) +\n        Cr *\n          (-0.000778269941513683 * Cr +\n            0.00130872261408275 * Y +\n            0.000770482631801132 * k -\n            0.151051492775562) +\n        Y *\n          (0.00126935368114843 * Y -\n            0.00265090189010898 * k +\n            0.25802910206845) +\n        k * (-0.000318913117588328 * k - 0.213742400323665);\n\n      data[offset++] =\n        -20.810012546947 +\n        Cb *\n          (-0.000570115196973677 * Cb -\n            2.63409051004589e-5 * Cr +\n            0.0020741088115012 * Y -\n            0.00288260236853442 * k +\n            0.814272968359295) +\n        Cr *\n          (-1.53496057440975e-5 * Cr -\n            0.000132689043961446 * Y +\n            0.000560833691242812 * k -\n            0.195152027534049) +\n        Y *\n          (0.00174418132927582 * Y -\n            0.00255243321439347 * k +\n            0.116935020465145) +\n        k * (-0.000343531996510555 * k + 0.24165260232407);\n    }\n    // Ensure that only the converted RGB data is returned.\n    return data.subarray(0, offset);\n  }\n\n  _convertYcckToCmyk(data) {\n    let Y, Cb, Cr;\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      Y = data[i];\n      Cb = data[i + 1];\n      Cr = data[i + 2];\n      data[i] = 434.456 - Y - 1.402 * Cr;\n      data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n      data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      // K in data[i + 3] is unchanged\n    }\n    return data;\n  }\n\n  _convertCmykToRgb(data) {\n    let c, m, y, k;\n    let offset = 0;\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      c = data[i];\n      m = data[i + 1];\n      y = data[i + 2];\n      k = data[i + 3];\n\n      data[offset++] =\n        255 +\n        c *\n          (-0.00006747147073602441 * c +\n            0.0008379262121013727 * m +\n            0.0002894718188643294 * y +\n            0.003264231057537806 * k -\n            1.1185611867203937) +\n        m *\n          (0.000026374107616089405 * m -\n            0.00008626949158638572 * y -\n            0.0002748769067499491 * k -\n            0.02155688794978967) +\n        y *\n          (-0.00003878099212869363 * y -\n            0.0003267808279485286 * k +\n            0.0686742238595345) -\n        k * (0.0003361971776183937 * k + 0.7430659151342254);\n\n      data[offset++] =\n        255 +\n        c *\n          (0.00013596372813588848 * c +\n            0.000924537132573585 * m +\n            0.00010567359618683593 * y +\n            0.0004791864687436512 * k -\n            0.3109689587515875) +\n        m *\n          (-0.00023545346108370344 * m +\n            0.0002702845253534714 * y +\n            0.0020200308977307156 * k -\n            0.7488052167015494) +\n        y *\n          (0.00006834815998235662 * y +\n            0.00015168452363460973 * k -\n            0.09751927774728933) -\n        k * (0.0003189131175883281 * k + 0.7364883807733168);\n\n      data[offset++] =\n        255 +\n        c *\n          (0.000013598650411385307 * c +\n            0.00012423956175490851 * m +\n            0.0004751985097583589 * y -\n            0.0000036729317476630422 * k -\n            0.05562186980264034) +\n        m *\n          (0.00016141380598724676 * m +\n            0.0009692239130725186 * y +\n            0.0007782692450036253 * k -\n            0.44015232367526463) +\n        y *\n          (5.068882914068769e-7 * y +\n            0.0017778369011375071 * k -\n            0.7591454649749609) -\n        k * (0.0003435319965105553 * k + 0.7063770186160144);\n    }\n    // Ensure that only the converted RGB data is returned.\n    return data.subarray(0, offset);\n  }\n\n  getData({ width, height, forceRGB = false, isSourcePDF = false }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        isSourcePDF === true,\n        'JpegImage.getData: Unexpected \"isSourcePDF\" value for PDF files.'\n      );\n    }\n    if (this.numComponents > 4) {\n      throw new JpegError(\"Unsupported color mode\");\n    }\n    // Type of data: Uint8ClampedArray(width * height * numComponents)\n    const data = this._getLinearizedBlockData(width, height, isSourcePDF);\n\n    if (this.numComponents === 1 && forceRGB) {\n      const rgbData = new Uint8ClampedArray(data.length * 3);\n      let offset = 0;\n      for (const grayColor of data) {\n        rgbData[offset++] = grayColor;\n        rgbData[offset++] = grayColor;\n        rgbData[offset++] = grayColor;\n      }\n      return rgbData;\n    } else if (this.numComponents === 3 && this._isColorConversionNeeded) {\n      return this._convertYccToRgb(data);\n    } else if (this.numComponents === 4) {\n      if (this._isColorConversionNeeded) {\n        if (forceRGB) {\n          return this._convertYcckToRgb(data);\n        }\n        return this._convertYcckToCmyk(data);\n      } else if (forceRGB) {\n        return this._convertCmykToRgb(data);\n      }\n    }\n    return data;\n  }\n}\n\nexport { JpegImage };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseException, info, unreachable, warn } from \"../shared/util.js\";\nimport { log2, readUint16, readUint32 } from \"./core_utils.js\";\nimport { ArithmeticDecoder } from \"./arithmetic_decoder.js\";\n\nclass JpxError extends BaseException {\n  constructor(msg) {\n    super(`JPX error: ${msg}`, \"JpxError\");\n  }\n}\n\n// Table E.1\nconst SubbandsGainLog2 = {\n  LL: 0,\n  LH: 1,\n  HL: 1,\n  HH: 2,\n};\n\nclass JpxImage {\n  constructor() {\n    this.failOnCorruptedImage = false;\n  }\n\n  parse(data) {\n    const head = readUint16(data, 0);\n    // No box header, immediate start of codestream (SOC)\n    if (head === 0xff4f) {\n      this.parseCodestream(data, 0, data.length);\n      return;\n    }\n\n    const length = data.length;\n    let position = 0;\n    while (position < length) {\n      let headerSize = 8;\n      let lbox = readUint32(data, position);\n      const tbox = readUint32(data, position + 4);\n      position += headerSize;\n      if (lbox === 1) {\n        // XLBox: read UInt64 according to spec.\n        // JavaScript's int precision of 53 bit should be sufficient here.\n        lbox =\n          readUint32(data, position) * 4294967296 +\n          readUint32(data, position + 4);\n        position += 8;\n        headerSize += 8;\n      }\n      if (lbox === 0) {\n        lbox = length - position + headerSize;\n      }\n      if (lbox < headerSize) {\n        throw new JpxError(\"Invalid box field size\");\n      }\n      const dataLength = lbox - headerSize;\n      let jumpDataLength = true;\n      switch (tbox) {\n        case 0x6a703268: // 'jp2h'\n          jumpDataLength = false; // parsing child boxes\n          break;\n        case 0x636f6c72: // 'colr'\n          // Colorspaces are not used, the CS from the PDF is used.\n          const method = data[position];\n          if (method === 1) {\n            // enumerated colorspace\n            const colorspace = readUint32(data, position + 3);\n            switch (colorspace) {\n              case 16: // this indicates a sRGB colorspace\n              case 17: // this indicates a grayscale colorspace\n              case 18: // this indicates a YUV colorspace\n                break;\n              default:\n                warn(\"Unknown colorspace \" + colorspace);\n                break;\n            }\n          } else if (method === 2) {\n            info(\"ICC profile not supported\");\n          }\n          break;\n        case 0x6a703263: // 'jp2c'\n          this.parseCodestream(data, position, position + dataLength);\n          break;\n        case 0x6a502020: // 'jP\\024\\024'\n          if (readUint32(data, position) !== 0x0d0a870a) {\n            warn(\"Invalid JP2 signature\");\n          }\n          break;\n        // The following header types are valid but currently not used:\n        case 0x6a501a1a: // 'jP\\032\\032'\n        case 0x66747970: // 'ftyp'\n        case 0x72726571: // 'rreq'\n        case 0x72657320: // 'res '\n        case 0x69686472: // 'ihdr'\n          break;\n        default:\n          const headerType = String.fromCharCode(\n            (tbox >> 24) & 0xff,\n            (tbox >> 16) & 0xff,\n            (tbox >> 8) & 0xff,\n            tbox & 0xff\n          );\n          warn(`Unsupported header type ${tbox} (${headerType}).`);\n          break;\n      }\n      if (jumpDataLength) {\n        position += dataLength;\n      }\n    }\n  }\n\n  parseImageProperties(stream) {\n    let newByte = stream.getByte();\n    while (newByte >= 0) {\n      const oldByte = newByte;\n      newByte = stream.getByte();\n      const code = (oldByte << 8) | newByte;\n      // Image and tile size (SIZ)\n      if (code === 0xff51) {\n        stream.skip(4);\n        const Xsiz = stream.getInt32() >>> 0; // Byte 4\n        const Ysiz = stream.getInt32() >>> 0; // Byte 8\n        const XOsiz = stream.getInt32() >>> 0; // Byte 12\n        const YOsiz = stream.getInt32() >>> 0; // Byte 16\n        stream.skip(16);\n        const Csiz = stream.getUint16(); // Byte 36\n        this.width = Xsiz - XOsiz;\n        this.height = Ysiz - YOsiz;\n        this.componentsCount = Csiz;\n        // Results are always returned as `Uint8ClampedArray`s.\n        this.bitsPerComponent = 8;\n        return;\n      }\n    }\n    throw new JpxError(\"No size marker found in JPX stream\");\n  }\n\n  parseCodestream(data, start, end) {\n    const context = {};\n    let doNotRecover = false;\n    try {\n      let position = start;\n      while (position + 1 < end) {\n        const code = readUint16(data, position);\n        position += 2;\n\n        let length = 0,\n          j,\n          sqcd,\n          spqcds,\n          spqcdSize,\n          scalarExpounded,\n          tile;\n        switch (code) {\n          case 0xff4f: // Start of codestream (SOC)\n            context.mainHeader = true;\n            break;\n          case 0xffd9: // End of codestream (EOC)\n            break;\n          case 0xff51: // Image and tile size (SIZ)\n            length = readUint16(data, position);\n            const siz = {};\n            siz.Xsiz = readUint32(data, position + 4);\n            siz.Ysiz = readUint32(data, position + 8);\n            siz.XOsiz = readUint32(data, position + 12);\n            siz.YOsiz = readUint32(data, position + 16);\n            siz.XTsiz = readUint32(data, position + 20);\n            siz.YTsiz = readUint32(data, position + 24);\n            siz.XTOsiz = readUint32(data, position + 28);\n            siz.YTOsiz = readUint32(data, position + 32);\n            const componentsCount = readUint16(data, position + 36);\n            siz.Csiz = componentsCount;\n            const components = [];\n            j = position + 38;\n            for (let i = 0; i < componentsCount; i++) {\n              const component = {\n                precision: (data[j] & 0x7f) + 1,\n                isSigned: !!(data[j] & 0x80),\n                XRsiz: data[j + 1],\n                YRsiz: data[j + 2],\n              };\n              j += 3;\n              calculateComponentDimensions(component, siz);\n              components.push(component);\n            }\n            context.SIZ = siz;\n            context.components = components;\n            calculateTileGrids(context, components);\n            context.QCC = [];\n            context.COC = [];\n            break;\n          case 0xff5c: // Quantization default (QCD)\n            length = readUint16(data, position);\n            const qcd = {};\n            j = position + 2;\n            sqcd = data[j++];\n            switch (sqcd & 0x1f) {\n              case 0:\n                spqcdSize = 8;\n                scalarExpounded = true;\n                break;\n              case 1:\n                spqcdSize = 16;\n                scalarExpounded = false;\n                break;\n              case 2:\n                spqcdSize = 16;\n                scalarExpounded = true;\n                break;\n              default:\n                throw new Error(\"Invalid SQcd value \" + sqcd);\n            }\n            qcd.noQuantization = spqcdSize === 8;\n            qcd.scalarExpounded = scalarExpounded;\n            qcd.guardBits = sqcd >> 5;\n            spqcds = [];\n            while (j < length + position) {\n              const spqcd = {};\n              if (spqcdSize === 8) {\n                spqcd.epsilon = data[j++] >> 3;\n                spqcd.mu = 0;\n              } else {\n                spqcd.epsilon = data[j] >> 3;\n                spqcd.mu = ((data[j] & 0x7) << 8) | data[j + 1];\n                j += 2;\n              }\n              spqcds.push(spqcd);\n            }\n            qcd.SPqcds = spqcds;\n            if (context.mainHeader) {\n              context.QCD = qcd;\n            } else {\n              context.currentTile.QCD = qcd;\n              context.currentTile.QCC = [];\n            }\n            break;\n          case 0xff5d: // Quantization component (QCC)\n            length = readUint16(data, position);\n            const qcc = {};\n            j = position + 2;\n            let cqcc;\n            if (context.SIZ.Csiz < 257) {\n              cqcc = data[j++];\n            } else {\n              cqcc = readUint16(data, j);\n              j += 2;\n            }\n            sqcd = data[j++];\n            switch (sqcd & 0x1f) {\n              case 0:\n                spqcdSize = 8;\n                scalarExpounded = true;\n                break;\n              case 1:\n                spqcdSize = 16;\n                scalarExpounded = false;\n                break;\n              case 2:\n                spqcdSize = 16;\n                scalarExpounded = true;\n                break;\n              default:\n                throw new Error(\"Invalid SQcd value \" + sqcd);\n            }\n            qcc.noQuantization = spqcdSize === 8;\n            qcc.scalarExpounded = scalarExpounded;\n            qcc.guardBits = sqcd >> 5;\n            spqcds = [];\n            while (j < length + position) {\n              const spqcd = {};\n              if (spqcdSize === 8) {\n                spqcd.epsilon = data[j++] >> 3;\n                spqcd.mu = 0;\n              } else {\n                spqcd.epsilon = data[j] >> 3;\n                spqcd.mu = ((data[j] & 0x7) << 8) | data[j + 1];\n                j += 2;\n              }\n              spqcds.push(spqcd);\n            }\n            qcc.SPqcds = spqcds;\n            if (context.mainHeader) {\n              context.QCC[cqcc] = qcc;\n            } else {\n              context.currentTile.QCC[cqcc] = qcc;\n            }\n            break;\n          case 0xff52: // Coding style default (COD)\n            length = readUint16(data, position);\n            const cod = {};\n            j = position + 2;\n            const scod = data[j++];\n            cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n            cod.sopMarkerUsed = !!(scod & 2);\n            cod.ephMarkerUsed = !!(scod & 4);\n            cod.progressionOrder = data[j++];\n            cod.layersCount = readUint16(data, j);\n            j += 2;\n            cod.multipleComponentTransform = data[j++];\n\n            cod.decompositionLevelsCount = data[j++];\n            cod.xcb = (data[j++] & 0xf) + 2;\n            cod.ycb = (data[j++] & 0xf) + 2;\n            const blockStyle = data[j++];\n            cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n            cod.resetContextProbabilities = !!(blockStyle & 2);\n            cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n            cod.verticallyStripe = !!(blockStyle & 8);\n            cod.predictableTermination = !!(blockStyle & 16);\n            cod.segmentationSymbolUsed = !!(blockStyle & 32);\n            cod.reversibleTransformation = data[j++];\n            if (cod.entropyCoderWithCustomPrecincts) {\n              const precinctsSizes = [];\n              while (j < length + position) {\n                const precinctsSize = data[j++];\n                precinctsSizes.push({\n                  PPx: precinctsSize & 0xf,\n                  PPy: precinctsSize >> 4,\n                });\n              }\n              cod.precinctsSizes = precinctsSizes;\n            }\n            const unsupported = [];\n            if (cod.selectiveArithmeticCodingBypass) {\n              unsupported.push(\"selectiveArithmeticCodingBypass\");\n            }\n            if (cod.terminationOnEachCodingPass) {\n              unsupported.push(\"terminationOnEachCodingPass\");\n            }\n            if (cod.verticallyStripe) {\n              unsupported.push(\"verticallyStripe\");\n            }\n            if (cod.predictableTermination) {\n              unsupported.push(\"predictableTermination\");\n            }\n            if (unsupported.length > 0) {\n              doNotRecover = true;\n              warn(`JPX: Unsupported COD options (${unsupported.join(\", \")}).`);\n            }\n            if (context.mainHeader) {\n              context.COD = cod;\n            } else {\n              context.currentTile.COD = cod;\n              context.currentTile.COC = [];\n            }\n            break;\n          case 0xff90: // Start of tile-part (SOT)\n            length = readUint16(data, position);\n            tile = {};\n            tile.index = readUint16(data, position + 2);\n            tile.length = readUint32(data, position + 4);\n            tile.dataEnd = tile.length + position - 2;\n            tile.partIndex = data[position + 8];\n            tile.partsCount = data[position + 9];\n\n            context.mainHeader = false;\n            if (tile.partIndex === 0) {\n              // reset component specific settings\n              tile.COD = context.COD;\n              tile.COC = context.COC.slice(0); // clone of the global COC\n              tile.QCD = context.QCD;\n              tile.QCC = context.QCC.slice(0); // clone of the global COC\n            }\n            context.currentTile = tile;\n            break;\n          case 0xff93: // Start of data (SOD)\n            tile = context.currentTile;\n            if (tile.partIndex === 0) {\n              initializeTile(context, tile.index);\n              buildPackets(context);\n            }\n\n            // moving to the end of the data\n            length = tile.dataEnd - position;\n            parseTilePackets(context, data, position, length);\n            break;\n          case 0xff53: // Coding style component (COC)\n            warn(\"JPX: Codestream code 0xFF53 (COC) is not implemented.\");\n          /* falls through */\n          case 0xff55: // Tile-part lengths, main header (TLM)\n          case 0xff57: // Packet length, main header (PLM)\n          case 0xff58: // Packet length, tile-part header (PLT)\n          case 0xff64: // Comment (COM)\n            length = readUint16(data, position);\n            // skipping content\n            break;\n          default:\n            throw new Error(\"Unknown codestream code: \" + code.toString(16));\n        }\n        position += length;\n      }\n    } catch (e) {\n      if (doNotRecover || this.failOnCorruptedImage) {\n        throw new JpxError(e.message);\n      } else {\n        warn(`JPX: Trying to recover from: \"${e.message}\".`);\n      }\n    }\n    this.tiles = transformComponents(context);\n    this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n    this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n    this.componentsCount = context.SIZ.Csiz;\n  }\n}\n\nfunction calculateComponentDimensions(component, siz) {\n  // Section B.2 Component mapping\n  component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n  component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n  component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n  component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n  component.width = component.x1 - component.x0;\n  component.height = component.y1 - component.y0;\n}\nfunction calculateTileGrids(context, components) {\n  const siz = context.SIZ;\n  // Section B.3 Division into tile and tile-components\n  const tiles = [];\n  let tile;\n  const numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n  const numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n  for (let q = 0; q < numYtiles; q++) {\n    for (let p = 0; p < numXtiles; p++) {\n      tile = {};\n      tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n      tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n      tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n      tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n      tile.width = tile.tx1 - tile.tx0;\n      tile.height = tile.ty1 - tile.ty0;\n      tile.components = [];\n      tiles.push(tile);\n    }\n  }\n  context.tiles = tiles;\n\n  const componentsCount = siz.Csiz;\n  for (let i = 0, ii = componentsCount; i < ii; i++) {\n    const component = components[i];\n    for (let j = 0, jj = tiles.length; j < jj; j++) {\n      const tileComponent = {};\n      tile = tiles[j];\n      tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n      tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n      tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n      tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n      tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n      tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n      tile.components[i] = tileComponent;\n    }\n  }\n}\nfunction getBlocksDimensions(context, component, r) {\n  const codOrCoc = component.codingStyleParameters;\n  const result = {};\n  if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n    result.PPx = 15;\n    result.PPy = 15;\n  } else {\n    result.PPx = codOrCoc.precinctsSizes[r].PPx;\n    result.PPy = codOrCoc.precinctsSizes[r].PPy;\n  }\n  // calculate codeblock size as described in section B.7\n  result.xcb_ =\n    r > 0\n      ? Math.min(codOrCoc.xcb, result.PPx - 1)\n      : Math.min(codOrCoc.xcb, result.PPx);\n  result.ycb_ =\n    r > 0\n      ? Math.min(codOrCoc.ycb, result.PPy - 1)\n      : Math.min(codOrCoc.ycb, result.PPy);\n  return result;\n}\nfunction buildPrecincts(context, resolution, dimensions) {\n  // Section B.6 Division resolution to precincts\n  const precinctWidth = 1 << dimensions.PPx;\n  const precinctHeight = 1 << dimensions.PPy;\n  // Jasper introduces codeblock groups for mapping each subband codeblocks\n  // to precincts. Precinct partition divides a resolution according to width\n  // and height parameters. The subband that belongs to the resolution level\n  // has a different size than the level, unless it is the zero resolution.\n\n  // From Jasper documentation: jpeg2000.pdf, section K: Tier-2 coding:\n  // The precinct partitioning for a particular subband is derived from a\n  // partitioning of its parent LL band (i.e., the LL band at the next higher\n  // resolution level)... The LL band associated with each resolution level is\n  // divided into precincts... Each of the resulting precinct regions is then\n  // mapped into its child subbands (if any) at the next lower resolution\n  // level. This is accomplished by using the coordinate transformation\n  // (u, v) = (ceil(x/2), ceil(y/2)) where (x, y) and (u, v) are the\n  // coordinates of a point in the LL band and child subband, respectively.\n  const isZeroRes = resolution.resLevel === 0;\n  const precinctWidthInSubband = 1 << (dimensions.PPx + (isZeroRes ? 0 : -1));\n  const precinctHeightInSubband = 1 << (dimensions.PPy + (isZeroRes ? 0 : -1));\n  const numprecinctswide =\n    resolution.trx1 > resolution.trx0\n      ? Math.ceil(resolution.trx1 / precinctWidth) -\n        Math.floor(resolution.trx0 / precinctWidth)\n      : 0;\n  const numprecinctshigh =\n    resolution.try1 > resolution.try0\n      ? Math.ceil(resolution.try1 / precinctHeight) -\n        Math.floor(resolution.try0 / precinctHeight)\n      : 0;\n  const numprecincts = numprecinctswide * numprecinctshigh;\n\n  resolution.precinctParameters = {\n    precinctWidth,\n    precinctHeight,\n    numprecinctswide,\n    numprecinctshigh,\n    numprecincts,\n    precinctWidthInSubband,\n    precinctHeightInSubband,\n  };\n}\nfunction buildCodeblocks(context, subband, dimensions) {\n  // Section B.7 Division sub-band into code-blocks\n  const xcb_ = dimensions.xcb_;\n  const ycb_ = dimensions.ycb_;\n  const codeblockWidth = 1 << xcb_;\n  const codeblockHeight = 1 << ycb_;\n  const cbx0 = subband.tbx0 >> xcb_;\n  const cby0 = subband.tby0 >> ycb_;\n  const cbx1 = (subband.tbx1 + codeblockWidth - 1) >> xcb_;\n  const cby1 = (subband.tby1 + codeblockHeight - 1) >> ycb_;\n  const precinctParameters = subband.resolution.precinctParameters;\n  const codeblocks = [];\n  const precincts = [];\n  let i, j, codeblock, precinctNumber;\n  for (j = cby0; j < cby1; j++) {\n    for (i = cbx0; i < cbx1; i++) {\n      codeblock = {\n        cbx: i,\n        cby: j,\n        tbx0: codeblockWidth * i,\n        tby0: codeblockHeight * j,\n        tbx1: codeblockWidth * (i + 1),\n        tby1: codeblockHeight * (j + 1),\n      };\n\n      codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n      codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n      codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n      codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n\n      // Calculate precinct number for this codeblock, codeblock position\n      // should be relative to its subband, use actual dimension and position\n      // See comment about codeblock group width and height\n      const pi = Math.floor(\n        (codeblock.tbx0_ - subband.tbx0) /\n          precinctParameters.precinctWidthInSubband\n      );\n      const pj = Math.floor(\n        (codeblock.tby0_ - subband.tby0) /\n          precinctParameters.precinctHeightInSubband\n      );\n      precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n\n      codeblock.precinctNumber = precinctNumber;\n      codeblock.subbandType = subband.type;\n      codeblock.Lblock = 3;\n\n      if (\n        codeblock.tbx1_ <= codeblock.tbx0_ ||\n        codeblock.tby1_ <= codeblock.tby0_\n      ) {\n        continue;\n      }\n      codeblocks.push(codeblock);\n      // building precinct for the sub-band\n      let precinct = precincts[precinctNumber];\n      if (precinct !== undefined) {\n        if (i < precinct.cbxMin) {\n          precinct.cbxMin = i;\n        } else if (i > precinct.cbxMax) {\n          precinct.cbxMax = i;\n        }\n        if (j < precinct.cbyMin) {\n          precinct.cbxMin = j;\n        } else if (j > precinct.cbyMax) {\n          precinct.cbyMax = j;\n        }\n      } else {\n        precincts[precinctNumber] = precinct = {\n          cbxMin: i,\n          cbyMin: j,\n          cbxMax: i,\n          cbyMax: j,\n        };\n      }\n      codeblock.precinct = precinct;\n    }\n  }\n  subband.codeblockParameters = {\n    codeblockWidth: xcb_,\n    codeblockHeight: ycb_,\n    numcodeblockwide: cbx1 - cbx0 + 1,\n    numcodeblockhigh: cby1 - cby0 + 1,\n  };\n  subband.codeblocks = codeblocks;\n  subband.precincts = precincts;\n}\nfunction createPacket(resolution, precinctNumber, layerNumber) {\n  const precinctCodeblocks = [];\n  // Section B.10.8 Order of info in packet\n  const subbands = resolution.subbands;\n  // sub-bands already ordered in 'LL', 'HL', 'LH', and 'HH' sequence\n  for (let i = 0, ii = subbands.length; i < ii; i++) {\n    const subband = subbands[i];\n    const codeblocks = subband.codeblocks;\n    for (let j = 0, jj = codeblocks.length; j < jj; j++) {\n      const codeblock = codeblocks[j];\n      if (codeblock.precinctNumber !== precinctNumber) {\n        continue;\n      }\n      precinctCodeblocks.push(codeblock);\n    }\n  }\n  return {\n    layerNumber,\n    codeblocks: precinctCodeblocks,\n  };\n}\nfunction LayerResolutionComponentPositionIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  let maxDecompositionLevelsCount = 0;\n  for (let q = 0; q < componentsCount; q++) {\n    maxDecompositionLevelsCount = Math.max(\n      maxDecompositionLevelsCount,\n      tile.components[q].codingStyleParameters.decompositionLevelsCount\n    );\n  }\n\n  let l = 0,\n    r = 0,\n    i = 0,\n    k = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.1 Layer-resolution-component-position\n    for (; l < layersCount; l++) {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; i < componentsCount; i++) {\n          const component = tile.components[i];\n          if (r > component.codingStyleParameters.decompositionLevelsCount) {\n            continue;\n          }\n\n          const resolution = component.resolutions[r];\n          const numprecincts = resolution.precinctParameters.numprecincts;\n          for (; k < numprecincts; ) {\n            const packet = createPacket(resolution, k, l);\n            k++;\n            return packet;\n          }\n          k = 0;\n        }\n        i = 0;\n      }\n      r = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction ResolutionLayerComponentPositionIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  let maxDecompositionLevelsCount = 0;\n  for (let q = 0; q < componentsCount; q++) {\n    maxDecompositionLevelsCount = Math.max(\n      maxDecompositionLevelsCount,\n      tile.components[q].codingStyleParameters.decompositionLevelsCount\n    );\n  }\n\n  let r = 0,\n    l = 0,\n    i = 0,\n    k = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.2 Resolution-layer-component-position\n    for (; r <= maxDecompositionLevelsCount; r++) {\n      for (; l < layersCount; l++) {\n        for (; i < componentsCount; i++) {\n          const component = tile.components[i];\n          if (r > component.codingStyleParameters.decompositionLevelsCount) {\n            continue;\n          }\n\n          const resolution = component.resolutions[r];\n          const numprecincts = resolution.precinctParameters.numprecincts;\n          for (; k < numprecincts; ) {\n            const packet = createPacket(resolution, k, l);\n            k++;\n            return packet;\n          }\n          k = 0;\n        }\n        i = 0;\n      }\n      l = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction ResolutionPositionComponentLayerIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  let l, r, c, p;\n  let maxDecompositionLevelsCount = 0;\n  for (c = 0; c < componentsCount; c++) {\n    const component = tile.components[c];\n    maxDecompositionLevelsCount = Math.max(\n      maxDecompositionLevelsCount,\n      component.codingStyleParameters.decompositionLevelsCount\n    );\n  }\n  const maxNumPrecinctsInLevel = new Int32Array(\n    maxDecompositionLevelsCount + 1\n  );\n  for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n    let maxNumPrecincts = 0;\n    for (c = 0; c < componentsCount; ++c) {\n      const resolutions = tile.components[c].resolutions;\n      if (r < resolutions.length) {\n        maxNumPrecincts = Math.max(\n          maxNumPrecincts,\n          resolutions[r].precinctParameters.numprecincts\n        );\n      }\n    }\n    maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n  }\n  l = 0;\n  r = 0;\n  c = 0;\n  p = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.3 Resolution-position-component-layer\n    for (; r <= maxDecompositionLevelsCount; r++) {\n      for (; p < maxNumPrecinctsInLevel[r]; p++) {\n        for (; c < componentsCount; c++) {\n          const component = tile.components[c];\n          if (r > component.codingStyleParameters.decompositionLevelsCount) {\n            continue;\n          }\n          const resolution = component.resolutions[r];\n          const numprecincts = resolution.precinctParameters.numprecincts;\n          if (p >= numprecincts) {\n            continue;\n          }\n          for (; l < layersCount; ) {\n            const packet = createPacket(resolution, p, l);\n            l++;\n            return packet;\n          }\n          l = 0;\n        }\n        c = 0;\n      }\n      p = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction PositionComponentResolutionLayerIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  const precinctsSizes = getPrecinctSizesInImageScale(tile);\n  const precinctsIterationSizes = precinctsSizes;\n  let l = 0,\n    r = 0,\n    c = 0,\n    px = 0,\n    py = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.4 Position-component-resolution-layer\n    for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n      for (; px < precinctsIterationSizes.maxNumWide; px++) {\n        for (; c < componentsCount; c++) {\n          const component = tile.components[c];\n          const decompositionLevelsCount =\n            component.codingStyleParameters.decompositionLevelsCount;\n          for (; r <= decompositionLevelsCount; r++) {\n            const resolution = component.resolutions[r];\n            const sizeInImageScale =\n              precinctsSizes.components[c].resolutions[r];\n            const k = getPrecinctIndexIfExist(\n              px,\n              py,\n              sizeInImageScale,\n              precinctsIterationSizes,\n              resolution\n            );\n            if (k === null) {\n              continue;\n            }\n            for (; l < layersCount; ) {\n              const packet = createPacket(resolution, k, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          r = 0;\n        }\n        c = 0;\n      }\n      px = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction ComponentPositionResolutionLayerIterator(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const layersCount = tile.codingStyleDefaultParameters.layersCount;\n  const componentsCount = siz.Csiz;\n  const precinctsSizes = getPrecinctSizesInImageScale(tile);\n  let l = 0,\n    r = 0,\n    c = 0,\n    px = 0,\n    py = 0;\n\n  this.nextPacket = function JpxImage_nextPacket() {\n    // Section B.12.1.5 Component-position-resolution-layer\n    for (; c < componentsCount; ++c) {\n      const component = tile.components[c];\n      const precinctsIterationSizes = precinctsSizes.components[c];\n      const decompositionLevelsCount =\n        component.codingStyleParameters.decompositionLevelsCount;\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; r <= decompositionLevelsCount; r++) {\n            const resolution = component.resolutions[r];\n            const sizeInImageScale = precinctsIterationSizes.resolutions[r];\n            const k = getPrecinctIndexIfExist(\n              px,\n              py,\n              sizeInImageScale,\n              precinctsIterationSizes,\n              resolution\n            );\n            if (k === null) {\n              continue;\n            }\n            for (; l < layersCount; ) {\n              const packet = createPacket(resolution, k, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          r = 0;\n        }\n        px = 0;\n      }\n      py = 0;\n    }\n    throw new JpxError(\"Out of packets\");\n  };\n}\nfunction getPrecinctIndexIfExist(\n  pxIndex,\n  pyIndex,\n  sizeInImageScale,\n  precinctIterationSizes,\n  resolution\n) {\n  const posX = pxIndex * precinctIterationSizes.minWidth;\n  const posY = pyIndex * precinctIterationSizes.minHeight;\n  if (\n    posX % sizeInImageScale.width !== 0 ||\n    posY % sizeInImageScale.height !== 0\n  ) {\n    return null;\n  }\n  const startPrecinctRowIndex =\n    (posY / sizeInImageScale.width) *\n    resolution.precinctParameters.numprecinctswide;\n  return posX / sizeInImageScale.height + startPrecinctRowIndex;\n}\nfunction getPrecinctSizesInImageScale(tile) {\n  const componentsCount = tile.components.length;\n  let minWidth = Number.MAX_VALUE;\n  let minHeight = Number.MAX_VALUE;\n  let maxNumWide = 0;\n  let maxNumHigh = 0;\n  const sizePerComponent = new Array(componentsCount);\n  for (let c = 0; c < componentsCount; c++) {\n    const component = tile.components[c];\n    const decompositionLevelsCount =\n      component.codingStyleParameters.decompositionLevelsCount;\n    const sizePerResolution = new Array(decompositionLevelsCount + 1);\n    let minWidthCurrentComponent = Number.MAX_VALUE;\n    let minHeightCurrentComponent = Number.MAX_VALUE;\n    let maxNumWideCurrentComponent = 0;\n    let maxNumHighCurrentComponent = 0;\n    let scale = 1;\n    for (let r = decompositionLevelsCount; r >= 0; --r) {\n      const resolution = component.resolutions[r];\n      const widthCurrentResolution =\n        scale * resolution.precinctParameters.precinctWidth;\n      const heightCurrentResolution =\n        scale * resolution.precinctParameters.precinctHeight;\n      minWidthCurrentComponent = Math.min(\n        minWidthCurrentComponent,\n        widthCurrentResolution\n      );\n      minHeightCurrentComponent = Math.min(\n        minHeightCurrentComponent,\n        heightCurrentResolution\n      );\n      maxNumWideCurrentComponent = Math.max(\n        maxNumWideCurrentComponent,\n        resolution.precinctParameters.numprecinctswide\n      );\n      maxNumHighCurrentComponent = Math.max(\n        maxNumHighCurrentComponent,\n        resolution.precinctParameters.numprecinctshigh\n      );\n      sizePerResolution[r] = {\n        width: widthCurrentResolution,\n        height: heightCurrentResolution,\n      };\n      scale <<= 1;\n    }\n    minWidth = Math.min(minWidth, minWidthCurrentComponent);\n    minHeight = Math.min(minHeight, minHeightCurrentComponent);\n    maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n    maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n    sizePerComponent[c] = {\n      resolutions: sizePerResolution,\n      minWidth: minWidthCurrentComponent,\n      minHeight: minHeightCurrentComponent,\n      maxNumWide: maxNumWideCurrentComponent,\n      maxNumHigh: maxNumHighCurrentComponent,\n    };\n  }\n  return {\n    components: sizePerComponent,\n    minWidth,\n    minHeight,\n    maxNumWide,\n    maxNumHigh,\n  };\n}\nfunction buildPackets(context) {\n  const siz = context.SIZ;\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const componentsCount = siz.Csiz;\n  // Creating resolutions and sub-bands for each component\n  for (let c = 0; c < componentsCount; c++) {\n    const component = tile.components[c];\n    const decompositionLevelsCount =\n      component.codingStyleParameters.decompositionLevelsCount;\n    // Section B.5 Resolution levels and sub-bands\n    const resolutions = [];\n    const subbands = [];\n    for (let r = 0; r <= decompositionLevelsCount; r++) {\n      const blocksDimensions = getBlocksDimensions(context, component, r);\n      const resolution = {};\n      const scale = 1 << (decompositionLevelsCount - r);\n      resolution.trx0 = Math.ceil(component.tcx0 / scale);\n      resolution.try0 = Math.ceil(component.tcy0 / scale);\n      resolution.trx1 = Math.ceil(component.tcx1 / scale);\n      resolution.try1 = Math.ceil(component.tcy1 / scale);\n      resolution.resLevel = r;\n      buildPrecincts(context, resolution, blocksDimensions);\n      resolutions.push(resolution);\n\n      let subband;\n      if (r === 0) {\n        // one sub-band (LL) with last decomposition\n        subband = {};\n        subband.type = \"LL\";\n        subband.tbx0 = Math.ceil(component.tcx0 / scale);\n        subband.tby0 = Math.ceil(component.tcy0 / scale);\n        subband.tbx1 = Math.ceil(component.tcx1 / scale);\n        subband.tby1 = Math.ceil(component.tcy1 / scale);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolution.subbands = [subband];\n      } else {\n        const bscale = 1 << (decompositionLevelsCount - r + 1);\n        const resolutionSubbands = [];\n        // three sub-bands (HL, LH and HH) with rest of decompositions\n        subband = {};\n        subband.type = \"HL\";\n        subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n        subband.tby0 = Math.ceil(component.tcy0 / bscale);\n        subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n        subband.tby1 = Math.ceil(component.tcy1 / bscale);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolutionSubbands.push(subband);\n\n        subband = {};\n        subband.type = \"LH\";\n        subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n        subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n        subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n        subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolutionSubbands.push(subband);\n\n        subband = {};\n        subband.type = \"HH\";\n        subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n        subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n        subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n        subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolutionSubbands.push(subband);\n\n        resolution.subbands = resolutionSubbands;\n      }\n    }\n    component.resolutions = resolutions;\n    component.subbands = subbands;\n  }\n  // Generate the packets sequence\n  const progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n  switch (progressionOrder) {\n    case 0:\n      tile.packetsIterator = new LayerResolutionComponentPositionIterator(\n        context\n      );\n      break;\n    case 1:\n      tile.packetsIterator = new ResolutionLayerComponentPositionIterator(\n        context\n      );\n      break;\n    case 2:\n      tile.packetsIterator = new ResolutionPositionComponentLayerIterator(\n        context\n      );\n      break;\n    case 3:\n      tile.packetsIterator = new PositionComponentResolutionLayerIterator(\n        context\n      );\n      break;\n    case 4:\n      tile.packetsIterator = new ComponentPositionResolutionLayerIterator(\n        context\n      );\n      break;\n    default:\n      throw new JpxError(`Unsupported progression order ${progressionOrder}`);\n  }\n}\nfunction parseTilePackets(context, data, offset, dataLength) {\n  let position = 0;\n  let buffer,\n    bufferSize = 0,\n    skipNextBit = false;\n  function readBits(count) {\n    while (bufferSize < count) {\n      const b = data[offset + position];\n      position++;\n      if (skipNextBit) {\n        buffer = (buffer << 7) | b;\n        bufferSize += 7;\n        skipNextBit = false;\n      } else {\n        buffer = (buffer << 8) | b;\n        bufferSize += 8;\n      }\n      if (b === 0xff) {\n        skipNextBit = true;\n      }\n    }\n    bufferSize -= count;\n    return (buffer >>> bufferSize) & ((1 << count) - 1);\n  }\n  function skipMarkerIfEqual(value) {\n    if (\n      data[offset + position - 1] === 0xff &&\n      data[offset + position] === value\n    ) {\n      skipBytes(1);\n      return true;\n    } else if (\n      data[offset + position] === 0xff &&\n      data[offset + position + 1] === value\n    ) {\n      skipBytes(2);\n      return true;\n    }\n    return false;\n  }\n  function skipBytes(count) {\n    position += count;\n  }\n  function alignToByte() {\n    bufferSize = 0;\n    if (skipNextBit) {\n      position++;\n      skipNextBit = false;\n    }\n  }\n  function readCodingpasses() {\n    if (readBits(1) === 0) {\n      return 1;\n    }\n    if (readBits(1) === 0) {\n      return 2;\n    }\n    let value = readBits(2);\n    if (value < 3) {\n      return value + 3;\n    }\n    value = readBits(5);\n    if (value < 31) {\n      return value + 6;\n    }\n    value = readBits(7);\n    return value + 37;\n  }\n  const tileIndex = context.currentTile.index;\n  const tile = context.tiles[tileIndex];\n  const sopMarkerUsed = context.COD.sopMarkerUsed;\n  const ephMarkerUsed = context.COD.ephMarkerUsed;\n  const packetsIterator = tile.packetsIterator;\n  while (position < dataLength) {\n    alignToByte();\n    if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n      // Skip also marker segment length and packet sequence ID\n      skipBytes(4);\n    }\n    const packet = packetsIterator.nextPacket();\n    if (!readBits(1)) {\n      continue;\n    }\n    const layerNumber = packet.layerNumber,\n      queue = [];\n    let codeblock;\n    for (let i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n      codeblock = packet.codeblocks[i];\n      let precinct = codeblock.precinct;\n      const codeblockColumn = codeblock.cbx - precinct.cbxMin;\n      const codeblockRow = codeblock.cby - precinct.cbyMin;\n      let codeblockIncluded = false;\n      let firstTimeInclusion = false;\n      let valueReady, zeroBitPlanesTree;\n      if (codeblock.included !== undefined) {\n        codeblockIncluded = !!readBits(1);\n      } else {\n        // reading inclusion tree\n        precinct = codeblock.precinct;\n        let inclusionTree;\n        if (precinct.inclusionTree !== undefined) {\n          inclusionTree = precinct.inclusionTree;\n        } else {\n          // building inclusion and zero bit-planes trees\n          const width = precinct.cbxMax - precinct.cbxMin + 1;\n          const height = precinct.cbyMax - precinct.cbyMin + 1;\n          inclusionTree = new InclusionTree(width, height, layerNumber);\n          zeroBitPlanesTree = new TagTree(width, height);\n          precinct.inclusionTree = inclusionTree;\n          precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          for (let l = 0; l < layerNumber; l++) {\n            if (readBits(1) !== 0) {\n              throw new JpxError(\"Invalid tag tree\");\n            }\n          }\n        }\n\n        if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !inclusionTree.nextLevel();\n              if (valueReady) {\n                codeblock.included = true;\n                codeblockIncluded = firstTimeInclusion = true;\n                break;\n              }\n            } else {\n              inclusionTree.incrementValue(layerNumber);\n              break;\n            }\n          }\n        }\n      }\n      if (!codeblockIncluded) {\n        continue;\n      }\n      if (firstTimeInclusion) {\n        zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n        zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n        while (true) {\n          if (readBits(1)) {\n            valueReady = !zeroBitPlanesTree.nextLevel();\n            if (valueReady) {\n              break;\n            }\n          } else {\n            zeroBitPlanesTree.incrementValue();\n          }\n        }\n        codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n      }\n      const codingpasses = readCodingpasses();\n      while (readBits(1)) {\n        codeblock.Lblock++;\n      }\n      const codingpassesLog2 = log2(codingpasses);\n      // rounding down log2\n      const bits =\n        (codingpasses < 1 << codingpassesLog2\n          ? codingpassesLog2 - 1\n          : codingpassesLog2) + codeblock.Lblock;\n      const codedDataLength = readBits(bits);\n      queue.push({\n        codeblock,\n        codingpasses,\n        dataLength: codedDataLength,\n      });\n    }\n    alignToByte();\n    if (ephMarkerUsed) {\n      skipMarkerIfEqual(0x92);\n    }\n    while (queue.length > 0) {\n      const packetItem = queue.shift();\n      codeblock = packetItem.codeblock;\n      if (codeblock.data === undefined) {\n        codeblock.data = [];\n      }\n      codeblock.data.push({\n        data,\n        start: offset + position,\n        end: offset + position + packetItem.dataLength,\n        codingpasses: packetItem.codingpasses,\n      });\n      position += packetItem.dataLength;\n    }\n  }\n  return position;\n}\nfunction copyCoefficients(\n  coefficients,\n  levelWidth,\n  levelHeight,\n  subband,\n  delta,\n  mb,\n  reversible,\n  segmentationSymbolUsed,\n  resetContextProbabilities\n) {\n  const x0 = subband.tbx0;\n  const y0 = subband.tby0;\n  const width = subband.tbx1 - subband.tbx0;\n  const codeblocks = subband.codeblocks;\n  const right = subband.type.charAt(0) === \"H\" ? 1 : 0;\n  const bottom = subband.type.charAt(1) === \"H\" ? levelWidth : 0;\n\n  for (let i = 0, ii = codeblocks.length; i < ii; ++i) {\n    const codeblock = codeblocks[i];\n    const blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n    const blockHeight = codeblock.tby1_ - codeblock.tby0_;\n    if (blockWidth === 0 || blockHeight === 0) {\n      continue;\n    }\n    if (codeblock.data === undefined) {\n      continue;\n    }\n\n    const bitModel = new BitModel(\n      blockWidth,\n      blockHeight,\n      codeblock.subbandType,\n      codeblock.zeroBitPlanes,\n      mb\n    );\n    let currentCodingpassType = 2; // first bit plane starts from cleanup\n\n    // collect data\n    const data = codeblock.data;\n    let totalLength = 0,\n      codingpasses = 0;\n    let j, jj, dataItem;\n    for (j = 0, jj = data.length; j < jj; j++) {\n      dataItem = data[j];\n      totalLength += dataItem.end - dataItem.start;\n      codingpasses += dataItem.codingpasses;\n    }\n    const encodedData = new Uint8Array(totalLength);\n    let position = 0;\n    for (j = 0, jj = data.length; j < jj; j++) {\n      dataItem = data[j];\n      const chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n      encodedData.set(chunk, position);\n      position += chunk.length;\n    }\n    // decoding the item\n    const decoder = new ArithmeticDecoder(encodedData, 0, totalLength);\n    bitModel.setDecoder(decoder);\n\n    for (j = 0; j < codingpasses; j++) {\n      switch (currentCodingpassType) {\n        case 0:\n          bitModel.runSignificancePropagationPass();\n          break;\n        case 1:\n          bitModel.runMagnitudeRefinementPass();\n          break;\n        case 2:\n          bitModel.runCleanupPass();\n          if (segmentationSymbolUsed) {\n            bitModel.checkSegmentationSymbol();\n          }\n          break;\n      }\n\n      if (resetContextProbabilities) {\n        bitModel.reset();\n      }\n\n      currentCodingpassType = (currentCodingpassType + 1) % 3;\n    }\n\n    let offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n    const sign = bitModel.coefficentsSign;\n    const magnitude = bitModel.coefficentsMagnitude;\n    const bitsDecoded = bitModel.bitsDecoded;\n    const magnitudeCorrection = reversible ? 0 : 0.5;\n    let k, n, nb;\n    position = 0;\n    // Do the interleaving of Section F.3.3 here, so we do not need\n    // to copy later. LL level is not interleaved, just copied.\n    const interleave = subband.type !== \"LL\";\n    for (j = 0; j < blockHeight; j++) {\n      const row = (offset / width) | 0; // row in the non-interleaved subband\n      const levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n      for (k = 0; k < blockWidth; k++) {\n        n = magnitude[position];\n        if (n !== 0) {\n          n = (n + magnitudeCorrection) * delta;\n          if (sign[position] !== 0) {\n            n = -n;\n          }\n          nb = bitsDecoded[position];\n          const pos = interleave ? levelOffset + (offset << 1) : offset;\n          if (reversible && nb >= mb) {\n            coefficients[pos] = n;\n          } else {\n            coefficients[pos] = n * (1 << (mb - nb));\n          }\n        }\n        offset++;\n        position++;\n      }\n      offset += width - blockWidth;\n    }\n  }\n}\nfunction transformTile(context, tile, c) {\n  const component = tile.components[c];\n  const codingStyleParameters = component.codingStyleParameters;\n  const quantizationParameters = component.quantizationParameters;\n  const decompositionLevelsCount =\n    codingStyleParameters.decompositionLevelsCount;\n  const spqcds = quantizationParameters.SPqcds;\n  const scalarExpounded = quantizationParameters.scalarExpounded;\n  const guardBits = quantizationParameters.guardBits;\n  const segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n  const resetContextProbabilities =\n    codingStyleParameters.resetContextProbabilities;\n  const precision = context.components[c].precision;\n\n  const reversible = codingStyleParameters.reversibleTransformation;\n  const transform = reversible\n    ? new ReversibleTransform()\n    : new IrreversibleTransform();\n\n  const subbandCoefficients = [];\n  let b = 0;\n  for (let i = 0; i <= decompositionLevelsCount; i++) {\n    const resolution = component.resolutions[i];\n\n    const width = resolution.trx1 - resolution.trx0;\n    const height = resolution.try1 - resolution.try0;\n    // Allocate space for the whole sublevel.\n    const coefficients = new Float32Array(width * height);\n\n    for (let j = 0, jj = resolution.subbands.length; j < jj; j++) {\n      let mu, epsilon;\n      if (!scalarExpounded) {\n        // formula E-5\n        mu = spqcds[0].mu;\n        epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n      } else {\n        mu = spqcds[b].mu;\n        epsilon = spqcds[b].epsilon;\n        b++;\n      }\n\n      const subband = resolution.subbands[j];\n      const gainLog2 = SubbandsGainLog2[subband.type];\n\n      // calculate quantization coefficient (Section E.1.1.1)\n      const delta = reversible\n        ? 1\n        : 2 ** (precision + gainLog2 - epsilon) * (1 + mu / 2048);\n      const mb = guardBits + epsilon - 1;\n\n      // In the first resolution level, copyCoefficients will fill the\n      // whole array with coefficients. In the succeeding passes,\n      // copyCoefficients will consecutively fill in the values that belong\n      // to the interleaved positions of the HL, LH, and HH coefficients.\n      // The LL coefficients will then be interleaved in Transform.iterate().\n      copyCoefficients(\n        coefficients,\n        width,\n        height,\n        subband,\n        delta,\n        mb,\n        reversible,\n        segmentationSymbolUsed,\n        resetContextProbabilities\n      );\n    }\n    subbandCoefficients.push({\n      width,\n      height,\n      items: coefficients,\n    });\n  }\n\n  const result = transform.calculate(\n    subbandCoefficients,\n    component.tcx0,\n    component.tcy0\n  );\n  return {\n    left: component.tcx0,\n    top: component.tcy0,\n    width: result.width,\n    height: result.height,\n    items: result.items,\n  };\n}\nfunction transformComponents(context) {\n  const siz = context.SIZ;\n  const components = context.components;\n  const componentsCount = siz.Csiz;\n  const resultImages = [];\n  for (let i = 0, ii = context.tiles.length; i < ii; i++) {\n    const tile = context.tiles[i];\n    const transformedTiles = [];\n    for (let c = 0; c < componentsCount; c++) {\n      transformedTiles[c] = transformTile(context, tile, c);\n    }\n    const tile0 = transformedTiles[0];\n    const out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n    const result = {\n      left: tile0.left,\n      top: tile0.top,\n      width: tile0.width,\n      height: tile0.height,\n      items: out,\n    };\n\n    // Section G.2.2 Inverse multi component transform\n    let shift, offset;\n    let pos = 0,\n      j,\n      jj,\n      y0,\n      y1,\n      y2;\n    if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n      const fourComponents = componentsCount === 4;\n      const y0items = transformedTiles[0].items;\n      const y1items = transformedTiles[1].items;\n      const y2items = transformedTiles[2].items;\n      const y3items = fourComponents ? transformedTiles[3].items : null;\n\n      // HACK: The multiple component transform formulas below assume that\n      // all components have the same precision. With this in mind, we\n      // compute shift and offset only once.\n      shift = components[0].precision - 8;\n      offset = (128 << shift) + 0.5;\n\n      const component0 = tile.components[0];\n      const alpha01 = componentsCount - 3;\n      jj = y0items.length;\n      if (!component0.codingStyleParameters.reversibleTransformation) {\n        // inverse irreversible multiple component transform\n        for (j = 0; j < jj; j++, pos += alpha01) {\n          y0 = y0items[j] + offset;\n          y1 = y1items[j];\n          y2 = y2items[j];\n          out[pos++] = (y0 + 1.402 * y2) >> shift;\n          out[pos++] = (y0 - 0.34413 * y1 - 0.71414 * y2) >> shift;\n          out[pos++] = (y0 + 1.772 * y1) >> shift;\n        }\n      } else {\n        // inverse reversible multiple component transform\n        for (j = 0; j < jj; j++, pos += alpha01) {\n          y0 = y0items[j] + offset;\n          y1 = y1items[j];\n          y2 = y2items[j];\n          const g = y0 - ((y2 + y1) >> 2);\n\n          out[pos++] = (g + y2) >> shift;\n          out[pos++] = g >> shift;\n          out[pos++] = (g + y1) >> shift;\n        }\n      }\n      if (fourComponents) {\n        for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n          out[pos] = (y3items[j] + offset) >> shift;\n        }\n      }\n    } else {\n      // no multi-component transform\n      for (let c = 0; c < componentsCount; c++) {\n        const items = transformedTiles[c].items;\n        shift = components[c].precision - 8;\n        offset = (128 << shift) + 0.5;\n        for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n          out[pos] = (items[j] + offset) >> shift;\n          pos += componentsCount;\n        }\n      }\n    }\n    resultImages.push(result);\n  }\n  return resultImages;\n}\nfunction initializeTile(context, tileIndex) {\n  const siz = context.SIZ;\n  const componentsCount = siz.Csiz;\n  const tile = context.tiles[tileIndex];\n  for (let c = 0; c < componentsCount; c++) {\n    const component = tile.components[c];\n    const qcdOrQcc =\n      context.currentTile.QCC[c] !== undefined\n        ? context.currentTile.QCC[c]\n        : context.currentTile.QCD;\n    component.quantizationParameters = qcdOrQcc;\n    const codOrCoc =\n      context.currentTile.COC[c] !== undefined\n        ? context.currentTile.COC[c]\n        : context.currentTile.COD;\n    component.codingStyleParameters = codOrCoc;\n  }\n  tile.codingStyleDefaultParameters = context.currentTile.COD;\n}\n\n// Section B.10.2 Tag trees\nclass TagTree {\n  constructor(width, height) {\n    const levelsLength = log2(Math.max(width, height)) + 1;\n    this.levels = [];\n    for (let i = 0; i < levelsLength; i++) {\n      const level = {\n        width,\n        height,\n        items: [],\n      };\n      this.levels.push(level);\n      width = Math.ceil(width / 2);\n      height = Math.ceil(height / 2);\n    }\n  }\n\n  reset(i, j) {\n    let currentLevel = 0,\n      value = 0,\n      level;\n    while (currentLevel < this.levels.length) {\n      level = this.levels[currentLevel];\n      const index = i + j * level.width;\n      if (level.items[index] !== undefined) {\n        value = level.items[index];\n        break;\n      }\n      level.index = index;\n      i >>= 1;\n      j >>= 1;\n      currentLevel++;\n    }\n    currentLevel--;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    this.currentLevel = currentLevel;\n    delete this.value;\n  }\n\n  incrementValue() {\n    const level = this.levels[this.currentLevel];\n    level.items[level.index]++;\n  }\n\n  nextLevel() {\n    let currentLevel = this.currentLevel;\n    let level = this.levels[currentLevel];\n    const value = level.items[level.index];\n    currentLevel--;\n    if (currentLevel < 0) {\n      this.value = value;\n      return false;\n    }\n\n    this.currentLevel = currentLevel;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    return true;\n  }\n}\n\nclass InclusionTree {\n  constructor(width, height, defaultValue) {\n    const levelsLength = log2(Math.max(width, height)) + 1;\n    this.levels = [];\n    for (let i = 0; i < levelsLength; i++) {\n      const items = new Uint8Array(width * height);\n      for (let j = 0, jj = items.length; j < jj; j++) {\n        items[j] = defaultValue;\n      }\n\n      const level = {\n        width,\n        height,\n        items,\n      };\n      this.levels.push(level);\n\n      width = Math.ceil(width / 2);\n      height = Math.ceil(height / 2);\n    }\n  }\n\n  reset(i, j, stopValue) {\n    let currentLevel = 0;\n    while (currentLevel < this.levels.length) {\n      const level = this.levels[currentLevel];\n      const index = i + j * level.width;\n      level.index = index;\n      const value = level.items[index];\n\n      if (value === 0xff) {\n        break;\n      }\n\n      if (value > stopValue) {\n        this.currentLevel = currentLevel;\n        // already know about this one, propagating the value to top levels\n        this.propagateValues();\n        return false;\n      }\n\n      i >>= 1;\n      j >>= 1;\n      currentLevel++;\n    }\n    this.currentLevel = currentLevel - 1;\n    return true;\n  }\n\n  incrementValue(stopValue) {\n    const level = this.levels[this.currentLevel];\n    level.items[level.index] = stopValue + 1;\n    this.propagateValues();\n  }\n\n  propagateValues() {\n    let levelIndex = this.currentLevel;\n    let level = this.levels[levelIndex];\n    const currentValue = level.items[level.index];\n    while (--levelIndex >= 0) {\n      level = this.levels[levelIndex];\n      level.items[level.index] = currentValue;\n    }\n  }\n\n  nextLevel() {\n    let currentLevel = this.currentLevel;\n    let level = this.levels[currentLevel];\n    const value = level.items[level.index];\n    level.items[level.index] = 0xff;\n    currentLevel--;\n    if (currentLevel < 0) {\n      return false;\n    }\n\n    this.currentLevel = currentLevel;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    return true;\n  }\n}\n\n// Section D. Coefficient bit modeling\nconst BitModel = (function BitModelClosure() {\n  const UNIFORM_CONTEXT = 17;\n  const RUNLENGTH_CONTEXT = 18;\n  // Table D-1\n  // The index is binary presentation: 0dddvvhh, ddd - sum of Di (0..4),\n  // vv - sum of Vi (0..2), and hh - sum of Hi (0..2)\n  const LLAndLHContextsLabel = new Uint8Array([\n    0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4,\n    7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6,\n    8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8,\n  ]);\n  const HLContextLabel = new Uint8Array([\n    0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8,\n    8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3,\n    4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8,\n  ]);\n  const HHContextLabel = new Uint8Array([\n    0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5,\n    5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8,\n    8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8,\n  ]);\n\n  // eslint-disable-next-line no-shadow\n  class BitModel {\n    constructor(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n\n      let contextLabelTable;\n      if (subband === \"HH\") {\n        contextLabelTable = HHContextLabel;\n      } else if (subband === \"HL\") {\n        contextLabelTable = HLContextLabel;\n      } else {\n        contextLabelTable = LLAndLHContextsLabel;\n      }\n      this.contextLabelTable = contextLabelTable;\n\n      const coefficientCount = width * height;\n\n      // coefficients outside the encoding region treated as insignificant\n      // add border state cells for significanceState\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      let coefficentsMagnitude;\n      if (mb > 14) {\n        coefficentsMagnitude = new Uint32Array(coefficientCount);\n      } else if (mb > 6) {\n        coefficentsMagnitude = new Uint16Array(coefficientCount);\n      } else {\n        coefficentsMagnitude = new Uint8Array(coefficientCount);\n      }\n      this.coefficentsMagnitude = coefficentsMagnitude;\n      this.processingFlags = new Uint8Array(coefficientCount);\n\n      const bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (let i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n\n      this.reset();\n    }\n\n    setDecoder(decoder) {\n      this.decoder = decoder;\n    }\n\n    reset() {\n      // We have 17 contexts that are accessed via context labels,\n      // plus the uniform and runlength context.\n      this.contexts = new Int8Array(19);\n\n      // Contexts are packed into 1 byte:\n      // highest 7 bits carry the index, lowest bit carries mps\n      this.contexts[0] = (4 << 1) | 0;\n      this.contexts[UNIFORM_CONTEXT] = (46 << 1) | 0;\n      this.contexts[RUNLENGTH_CONTEXT] = (3 << 1) | 0;\n    }\n\n    setNeighborsSignificance(row, column, index) {\n      const neighborsSignificance = this.neighborsSignificance;\n      const width = this.width,\n        height = this.height;\n      const left = column > 0;\n      const right = column + 1 < width;\n      let i;\n\n      if (row > 0) {\n        i = index - width;\n        if (left) {\n          neighborsSignificance[i - 1] += 0x10;\n        }\n        if (right) {\n          neighborsSignificance[i + 1] += 0x10;\n        }\n        neighborsSignificance[i] += 0x04;\n      }\n\n      if (row + 1 < height) {\n        i = index + width;\n        if (left) {\n          neighborsSignificance[i - 1] += 0x10;\n        }\n        if (right) {\n          neighborsSignificance[i + 1] += 0x10;\n        }\n        neighborsSignificance[i] += 0x04;\n      }\n\n      if (left) {\n        neighborsSignificance[index - 1] += 0x01;\n      }\n      if (right) {\n        neighborsSignificance[index + 1] += 0x01;\n      }\n      neighborsSignificance[index] |= 0x80;\n    }\n\n    runSignificancePropagationPass() {\n      const decoder = this.decoder;\n      const width = this.width,\n        height = this.height;\n      const coefficentsMagnitude = this.coefficentsMagnitude;\n      const coefficentsSign = this.coefficentsSign;\n      const neighborsSignificance = this.neighborsSignificance;\n      const processingFlags = this.processingFlags;\n      const contexts = this.contexts;\n      const labels = this.contextLabelTable;\n      const bitsDecoded = this.bitsDecoded;\n      const processedInverseMask = ~1;\n      const processedMask = 1;\n      const firstMagnitudeBitMask = 2;\n\n      for (let i0 = 0; i0 < height; i0 += 4) {\n        for (let j = 0; j < width; j++) {\n          let index = i0 * width + j;\n          for (let i1 = 0; i1 < 4; i1++, index += width) {\n            const i = i0 + i1;\n            if (i >= height) {\n              break;\n            }\n            // clear processed flag first\n            processingFlags[index] &= processedInverseMask;\n\n            if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n              continue;\n            }\n\n            const contextLabel = labels[neighborsSignificance[index]];\n            const decision = decoder.readBit(contexts, contextLabel);\n            if (decision) {\n              const sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n            }\n            bitsDecoded[index]++;\n            processingFlags[index] |= processedMask;\n          }\n        }\n      }\n    }\n\n    decodeSignBit(row, column, index) {\n      const width = this.width,\n        height = this.height;\n      const coefficentsMagnitude = this.coefficentsMagnitude;\n      const coefficentsSign = this.coefficentsSign;\n      let contribution, sign0, sign1, significance1;\n      let contextLabel, decoded;\n\n      // calculate horizontal contribution\n      significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n      if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n        sign1 = coefficentsSign[index + 1];\n        if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign1 - sign0;\n        } else {\n          contribution = 1 - sign1 - sign1;\n        }\n      } else if (significance1) {\n        sign0 = coefficentsSign[index - 1];\n        contribution = 1 - sign0 - sign0;\n      } else {\n        contribution = 0;\n      }\n      const horizontalContribution = 3 * contribution;\n\n      // calculate vertical contribution and combine with the horizontal\n      significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n      if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n        sign1 = coefficentsSign[index + width];\n        if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign1 - sign0 + horizontalContribution;\n        } else {\n          contribution = 1 - sign1 - sign1 + horizontalContribution;\n        }\n      } else if (significance1) {\n        sign0 = coefficentsSign[index - width];\n        contribution = 1 - sign0 - sign0 + horizontalContribution;\n      } else {\n        contribution = horizontalContribution;\n      }\n\n      if (contribution >= 0) {\n        contextLabel = 9 + contribution;\n        decoded = this.decoder.readBit(this.contexts, contextLabel);\n      } else {\n        contextLabel = 9 - contribution;\n        decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n      }\n      return decoded;\n    }\n\n    runMagnitudeRefinementPass() {\n      const decoder = this.decoder;\n      const width = this.width,\n        height = this.height;\n      const coefficentsMagnitude = this.coefficentsMagnitude;\n      const neighborsSignificance = this.neighborsSignificance;\n      const contexts = this.contexts;\n      const bitsDecoded = this.bitsDecoded;\n      const processingFlags = this.processingFlags;\n      const processedMask = 1;\n      const firstMagnitudeBitMask = 2;\n      const length = width * height;\n      const width4 = width * 4;\n\n      for (let index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n        indexNext = Math.min(length, index0 + width4);\n        for (let j = 0; j < width; j++) {\n          for (let index = index0 + j; index < indexNext; index += width) {\n            // significant but not those that have just become\n            if (\n              !coefficentsMagnitude[index] ||\n              (processingFlags[index] & processedMask) !== 0\n            ) {\n              continue;\n            }\n\n            let contextLabel = 16;\n            if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n              processingFlags[index] ^= firstMagnitudeBitMask;\n              // first refinement\n              const significance = neighborsSignificance[index] & 127;\n              contextLabel = significance === 0 ? 15 : 14;\n            }\n\n            const bit = decoder.readBit(contexts, contextLabel);\n            coefficentsMagnitude[index] =\n              (coefficentsMagnitude[index] << 1) | bit;\n            bitsDecoded[index]++;\n            processingFlags[index] |= processedMask;\n          }\n        }\n      }\n    }\n\n    runCleanupPass() {\n      const decoder = this.decoder;\n      const width = this.width,\n        height = this.height;\n      const neighborsSignificance = this.neighborsSignificance;\n      const coefficentsMagnitude = this.coefficentsMagnitude;\n      const coefficentsSign = this.coefficentsSign;\n      const contexts = this.contexts;\n      const labels = this.contextLabelTable;\n      const bitsDecoded = this.bitsDecoded;\n      const processingFlags = this.processingFlags;\n      const processedMask = 1;\n      const firstMagnitudeBitMask = 2;\n      const oneRowDown = width;\n      const twoRowsDown = width * 2;\n      const threeRowsDown = width * 3;\n      let iNext;\n      for (let i0 = 0; i0 < height; i0 = iNext) {\n        iNext = Math.min(i0 + 4, height);\n        const indexBase = i0 * width;\n        const checkAllEmpty = i0 + 3 < height;\n        for (let j = 0; j < width; j++) {\n          const index0 = indexBase + j;\n          // using the property: labels[neighborsSignificance[index]] === 0\n          // when neighborsSignificance[index] === 0\n          const allEmpty =\n            checkAllEmpty &&\n            processingFlags[index0] === 0 &&\n            processingFlags[index0 + oneRowDown] === 0 &&\n            processingFlags[index0 + twoRowsDown] === 0 &&\n            processingFlags[index0 + threeRowsDown] === 0 &&\n            neighborsSignificance[index0] === 0 &&\n            neighborsSignificance[index0 + oneRowDown] === 0 &&\n            neighborsSignificance[index0 + twoRowsDown] === 0 &&\n            neighborsSignificance[index0 + threeRowsDown] === 0;\n          let i1 = 0,\n            index = index0;\n          let i = i0,\n            sign;\n          if (allEmpty) {\n            const hasSignificantCoefficent = decoder.readBit(\n              contexts,\n              RUNLENGTH_CONTEXT\n            );\n            if (!hasSignificantCoefficent) {\n              bitsDecoded[index0]++;\n              bitsDecoded[index0 + oneRowDown]++;\n              bitsDecoded[index0 + twoRowsDown]++;\n              bitsDecoded[index0 + threeRowsDown]++;\n              continue; // next column\n            }\n            i1 =\n              (decoder.readBit(contexts, UNIFORM_CONTEXT) << 1) |\n              decoder.readBit(contexts, UNIFORM_CONTEXT);\n            if (i1 !== 0) {\n              i = i0 + i1;\n              index += i1 * width;\n            }\n\n            sign = this.decodeSignBit(i, j, index);\n            coefficentsSign[index] = sign;\n            coefficentsMagnitude[index] = 1;\n            this.setNeighborsSignificance(i, j, index);\n            processingFlags[index] |= firstMagnitudeBitMask;\n\n            index = index0;\n            for (let i2 = i0; i2 <= i; i2++, index += width) {\n              bitsDecoded[index]++;\n            }\n\n            i1++;\n          }\n          for (i = i0 + i1; i < iNext; i++, index += width) {\n            if (\n              coefficentsMagnitude[index] ||\n              (processingFlags[index] & processedMask) !== 0\n            ) {\n              continue;\n            }\n\n            const contextLabel = labels[neighborsSignificance[index]];\n            const decision = decoder.readBit(contexts, contextLabel);\n            if (decision === 1) {\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n            }\n            bitsDecoded[index]++;\n          }\n        }\n      }\n    }\n\n    checkSegmentationSymbol() {\n      const decoder = this.decoder;\n      const contexts = this.contexts;\n      const symbol =\n        (decoder.readBit(contexts, UNIFORM_CONTEXT) << 3) |\n        (decoder.readBit(contexts, UNIFORM_CONTEXT) << 2) |\n        (decoder.readBit(contexts, UNIFORM_CONTEXT) << 1) |\n        decoder.readBit(contexts, UNIFORM_CONTEXT);\n      if (symbol !== 0xa) {\n        throw new JpxError(\"Invalid segmentation symbol\");\n      }\n    }\n  }\n\n  return BitModel;\n})();\n\n// Section F, Discrete wavelet transformation\nclass Transform {\n  constructor() {\n    if (this.constructor === Transform) {\n      unreachable(\"Cannot initialize Transform.\");\n    }\n  }\n\n  calculate(subbands, u0, v0) {\n    let ll = subbands[0];\n    for (let i = 1, ii = subbands.length; i < ii; i++) {\n      ll = this.iterate(ll, subbands[i], u0, v0);\n    }\n    return ll;\n  }\n\n  extend(buffer, offset, size) {\n    // Section F.3.7 extending... using max extension of 4\n    let i1 = offset - 1,\n      j1 = offset + 1;\n    let i2 = offset + size - 2,\n      j2 = offset + size;\n    buffer[i1--] = buffer[j1++];\n    buffer[j2++] = buffer[i2--];\n    buffer[i1--] = buffer[j1++];\n    buffer[j2++] = buffer[i2--];\n    buffer[i1--] = buffer[j1++];\n    buffer[j2++] = buffer[i2--];\n    buffer[i1] = buffer[j1];\n    buffer[j2] = buffer[i2];\n  }\n\n  filter(x, offset, length) {\n    unreachable(\"Abstract method `filter` called\");\n  }\n\n  iterate(ll, hl_lh_hh, u0, v0) {\n    const llWidth = ll.width,\n      llHeight = ll.height;\n    let llItems = ll.items;\n    const width = hl_lh_hh.width;\n    const height = hl_lh_hh.height;\n    const items = hl_lh_hh.items;\n    let i, j, k, l, u, v;\n\n    // Interleave LL according to Section F.3.3\n    for (k = 0, i = 0; i < llHeight; i++) {\n      l = i * 2 * width;\n      for (j = 0; j < llWidth; j++, k++, l += 2) {\n        items[l] = llItems[k];\n      }\n    }\n    // The LL band is not needed anymore.\n    llItems = ll.items = null;\n\n    const bufferPadding = 4;\n    const rowBuffer = new Float32Array(width + 2 * bufferPadding);\n\n    // Section F.3.4 HOR_SR\n    if (width === 1) {\n      // if width = 1, when u0 even keep items as is, when odd divide by 2\n      if ((u0 & 1) !== 0) {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          items[k] *= 0.5;\n        }\n      }\n    } else {\n      for (v = 0, k = 0; v < height; v++, k += width) {\n        rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n\n        this.extend(rowBuffer, bufferPadding, width);\n        this.filter(rowBuffer, bufferPadding, width);\n\n        items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n      }\n    }\n\n    // Accesses to the items array can take long, because it may not fit into\n    // CPU cache and has to be fetched from main memory. Since subsequent\n    // accesses to the items array are not local when reading columns, we\n    // have a cache miss every time. To reduce cache misses, get up to\n    // 'numBuffers' items at a time and store them into the individual\n    // buffers. The colBuffers should be small enough to fit into CPU cache.\n    let numBuffers = 16;\n    const colBuffers = [];\n    for (i = 0; i < numBuffers; i++) {\n      colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n    }\n    let b,\n      currentBuffer = 0;\n    ll = bufferPadding + height;\n\n    // Section F.3.5 VER_SR\n    if (height === 1) {\n      // if height = 1, when v0 even keep items as is, when odd divide by 2\n      if ((v0 & 1) !== 0) {\n        for (u = 0; u < width; u++) {\n          items[u] *= 0.5;\n        }\n      }\n    } else {\n      for (u = 0; u < width; u++) {\n        // if we ran out of buffers, copy several image columns at once\n        if (currentBuffer === 0) {\n          numBuffers = Math.min(width - u, numBuffers);\n          for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n            for (b = 0; b < numBuffers; b++) {\n              colBuffers[b][l] = items[k + b];\n            }\n          }\n          currentBuffer = numBuffers;\n        }\n\n        currentBuffer--;\n        const buffer = colBuffers[currentBuffer];\n        this.extend(buffer, bufferPadding, height);\n        this.filter(buffer, bufferPadding, height);\n\n        // If this is last buffer in this group of buffers, flush all buffers.\n        if (currentBuffer === 0) {\n          k = u - numBuffers + 1;\n          for (l = bufferPadding; l < ll; k += width, l++) {\n            for (b = 0; b < numBuffers; b++) {\n              items[k + b] = colBuffers[b][l];\n            }\n          }\n        }\n      }\n    }\n\n    return { width, height, items };\n  }\n}\n\n// Section 3.8.2 Irreversible 9-7 filter\nclass IrreversibleTransform extends Transform {\n  filter(x, offset, length) {\n    const len = length >> 1;\n    offset |= 0;\n    let j, n, current, next;\n\n    const alpha = -1.586134342059924;\n    const beta = -0.052980118572961;\n    const gamma = 0.882911075530934;\n    const delta = 0.443506852043971;\n    const K = 1.230174104914001;\n    const K_ = 1 / K;\n\n    // step 1 is combined with step 3\n\n    // step 2\n    j = offset - 3;\n    for (n = len + 4; n--; j += 2) {\n      x[j] *= K_;\n    }\n\n    // step 1 & 3\n    j = offset - 2;\n    current = delta * x[j - 1];\n    for (n = len + 3; n--; j += 2) {\n      next = delta * x[j + 1];\n      x[j] = K * x[j] - current - next;\n      if (n--) {\n        j += 2;\n        current = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n      } else {\n        break;\n      }\n    }\n\n    // step 4\n    j = offset - 1;\n    current = gamma * x[j - 1];\n    for (n = len + 2; n--; j += 2) {\n      next = gamma * x[j + 1];\n      x[j] -= current + next;\n      if (n--) {\n        j += 2;\n        current = gamma * x[j + 1];\n        x[j] -= current + next;\n      } else {\n        break;\n      }\n    }\n\n    // step 5\n    j = offset;\n    current = beta * x[j - 1];\n    for (n = len + 1; n--; j += 2) {\n      next = beta * x[j + 1];\n      x[j] -= current + next;\n      if (n--) {\n        j += 2;\n        current = beta * x[j + 1];\n        x[j] -= current + next;\n      } else {\n        break;\n      }\n    }\n\n    // step 6\n    if (len !== 0) {\n      j = offset + 1;\n      current = alpha * x[j - 1];\n      for (n = len; n--; j += 2) {\n        next = alpha * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = alpha * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n    }\n  }\n}\n\n// Section 3.8.1 Reversible 5-3 filter\nclass ReversibleTransform extends Transform {\n  filter(x, offset, length) {\n    const len = length >> 1;\n    offset |= 0;\n    let j, n;\n\n    for (j = offset, n = len + 1; n--; j += 2) {\n      x[j] -= (x[j - 1] + x[j + 1] + 2) >> 2;\n    }\n\n    for (j = offset + 1, n = len; n--; j += 2) {\n      x[j] += (x[j - 1] + x[j + 1]) >> 1;\n    }\n  }\n}\n\nexport { JpxImage };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getVerbosityLevel, setVerbosityLevel } from \"./shared/util.js\";\nimport { Jbig2Image } from \"./core/jbig2.js\";\nimport { JpegImage } from \"./core/jpg.js\";\nimport { JpxImage } from \"./core/jpx.js\";\n\n// To ensure that the standalone PDF.js image decoders have the same\n// browser/environment compatibility as the regular PDF.js library,\n// the standard set of polyfills are thus included in this build as well.\n//\n// Given that the (current) image decoders don't use all of the features\n// of the complete PDF.js library, e.g. they are completely synchronous,\n// some of the larger polyfills are thus unnecessary.\n//\n// In an attempt to reduce the size of the standalone PDF.js image decoders,\n// the following polyfills are currently being excluded:\n//  - ReadableStream\n//  - Promise\n//  - URL\n\n// eslint-disable-next-line no-unused-vars\nconst pdfjsVersion = PDFJSDev.eval(\"BUNDLE_VERSION\");\n// eslint-disable-next-line no-unused-vars\nconst pdfjsBuild = PDFJSDev.eval(\"BUNDLE_BUILD\");\n\nexport {\n  getVerbosityLevel,\n  Jbig2Image,\n  JpegImage,\n  JpxImage,\n  setVerbosityLevel,\n};\n"],"names":["IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","LINE_FACTOR","LINE_DESCENT_FACTOR","BASELINE_FACTOR","RenderingIntentFlag","ANY","DISPLAY","PRINT","SAVE","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","AnnotationMode","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","AnnotationEditorPrefix","AnnotationEditorType","NONE","FREETEXT","INK","AnnotationEditorParamsType","FREETEXT_SIZE","FREETEXT_COLOR","FREETEXT_OPACITY","INK_COLOR","INK_THICKNESS","INK_OPACITY","PermissionFlag","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","AnnotationActionEventType","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","DocumentActionEventType","WC","WS","DS","WP","DP","PageActionEventType","O","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","VerbosityLevel","ERRORS","WARNINGS","INFOS","CMapCompressionType","BINARY","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotation","endAnnotation","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","UNSUPPORTED_FEATURES","forms","javaScript","signatures","smask","shadingPattern","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","errorContentSubStream","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","setVerbosityLevel","level","Number","isInteger","getVerbosityLevel","info","msg","console","log","warn","unreachable","Error","assert","cond","_isValidProtocol","url","protocol","createValidAbsoluteUrl","baseUrl","options","addDefaultProtocol","startsWith","dots","match","length","tryConvertEncoding","stringToUTF8String","ex","absoluteUrl","URL","shadow","obj","prop","value","nonSerializable","Object","defineProperty","enumerable","configurable","writable","BaseException","BaseExceptionClosure","message","name","constructor","prototype","PasswordException","code","UnknownErrorException","details","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","bytesToString","bytes","undefined","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","i","chunkEnd","Math","min","chunk","subarray","push","join","stringToBytes","str","Uint8Array","charCodeAt","arrayByteLength","arr","byteLength","arraysToBytes","resultLength","pos","data","item","itemLength","set","string32","objectSize","keys","objectFromMap","map","create","key","isLittleEndian","buffer8","view32","Uint32Array","buffer","isEvalSupported","Function","e","FeatureTest","isOffscreenCanvasSupported","OffscreenCanvas","hexNumbers","Array","n","toString","padStart","Util","makeHexColor","r","g","b","scaleMinMax","minMax","temp","m1","m2","applyTransform","p","m","xt","yt","applyInverseTransform","d","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","singularValueDecompose2dScale","transpose","a","c","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","xLow","xHigh","yLow","yHigh","bezierBoundingBox","x0","y0","x1","y1","x2","y2","x3","y3","tvalues","bounds","t","t1","t2","b2ac","sqrtb2ac","abs","j","mt","jlen","PDFStringTranslateTable","stringToPDFString","encoding","decoder","TextDecoder","fatal","decode","ii","charAt","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isArrayBuffer","v","isArrayEqual","arr1","arr2","getModificationDate","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createPromiseCapability","capability","isSettled","get","promise","Promise","resolve","reject","reason","Jbig2Error","ContextCache","getContexts","id","Int8Array","DecodingContext","start","end","ArithmeticDecoder","contextCache","cache","decodeInteger","procedure","contexts","prev","readBits","bit","readBit","sign","decodeIAID","codeLength","SegmentTypes","CodingTemplates","x","y","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmapTemplate0","width","height","decodingContext","bitmap","contextLabel","pixel","row","row1","row2","OLD_PIXEL_MASK","decodeBitmap","mmr","templateIndex","prediction","skip","at","input","Reader","decodeMMRBitmap","useskip","template","concat","sort","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","maxX","minY","k","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","Uint16Array","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","i0","j0","shift","sltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","Int32Array","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeSymbolDictionary","huffman","refinement","symbols","numberOfNewSymbols","numberOfExportedSymbols","huffmanTables","refinementTemplateIndex","refinementAt","huffmanInput","newSymbols","currentHeight","symbolCodeLength","log2","tableB1","symbolWidths","getStandardTable","deltaHeight","tableDeltaHeight","currentWidth","totalWidth","firstSymbol","deltaWidth","tableDeltaWidth","numberOfInstances","decodeTextRegion","symbolId","rdx","rdy","symbol","bitmapSize","tableBitmapSize","byteAlign","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","position","numberOfSymbolsDecoded","xMin","xMax","bitmapWidth","symbolBitmap","exportedSymbols","flags","currentFlag","totalSymbolsLength","runLength","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","transposed","dsOffset","referenceCorner","combinationOperator","logStripSize","stripT","tableDeltaT","firstS","deltaT","deltaFirstS","tableFirstS","currentS","currentT","symbolIDTable","applyRefinement","symbolWidth","symbolHeight","rdw","rdh","offsetT","offsetS","s2","symbolRow","maxWidth","deltaS","tableDeltaS","decodePatternDictionary","patternWidth","patternHeight","maxPatternIndex","collectiveWidth","patterns","patternBitmap","decodeHalftoneRegion","regionWidth","regionHeight","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","readSegmentHeader","segmentHeader","number","readUint32","segmentType","type","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","readUint16","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionSegmentFlags","RegionSegmentInformationFieldLength","genericRegionMmr","searchPatternLength","searchPattern","headerEnd","readSegments","header","segments","segment","randomAccess","processSegment","visitor","args","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","readInt8","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","halftoneRegion","halftoneRegionFlags","genericRegion","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","parseJbig2Chunks","chunks","SimpleSegmentVisitor","parseJbig2","numberOfPages","currentPageInfo","bitPacked","imgData","Uint8ClampedArray","q","mask","onPageInformation","rowSize","drawBitmap","regionInfo","mask0","offset0","offset","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","arguments","onSymbolDictionary","currentSegment","referredSegments","getSymbolDictionaryHuffmanTables","customTables","referredSegment","referredSymbols","onImmediateTextRegion","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","onImmediateHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","decodeTablesSegment","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","buildTree","node","decodeNode","reader","htOffset","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","standardTablesCache","table","currentByte","numBits","result","next","getCustomHuffmanTable","index","currentIndex","numberOfSymbols","codes","runCodesTable","repeatedLength","numberOfRepeats","customIndex","tableAggregateInstances","endOfBlock","params","Columns","Rows","BlackIs1","EndOfBlock","CCITTFaxDecoder","eof","readNextChar","lookForEOFLimit","Jbig2Image","parseChunks","parse","PDF_VERSION_REGEXP","getLookupTableFactory","initializer","lookup","getArrayLookupTableFactory","MissingDataException","begin","ParserEOFException","XRefEntryException","XRefParseException","DocStats","handler","_handler","_streamTypes","Set","_fontTypes","_send","streamTypes","fontTypes","send","addStreamType","has","add","addFontType","getInheritableProperty","dict","getArray","stopWhenFound","values","visited","RefSet","Dict","objId","put","ROMAN_NUMBER_MAP","toRomanNumerals","lowerCase","romanBuf","romanStr","toLowerCase","ceil","isWhiteSpace","ch","parseXFAPath","path","positionPattern","split","component","parseInt","escapePDFName","char","substring","escapeString","replace","_collectJS","entry","xref","list","parents","parent","Ref","fetch","isArray","element","isName","js","BaseStream","getString","getRaw","remove","collectActions","eventType","actions","additionalActionsDicts","additionalActions","getKeys","action","actionDict","Action","XMLEntities","encodeToXmlString","codePointAt","entity","toUpperCase","validateCSSFont","cssFontInfo","DEFAULT_CSS_FONT_OBLIQUE","DEFAULT_CSS_FONT_WEIGHT","CSS_FONT_WEIGHT_VALUES","fontFamily","fontWeight","italicAngle","test","ident","weight","angle","parseFloat","isNaN","recoverJsURL","URL_OPEN_METHODS","regex","RegExp","jsUrl","exec","newWindow","numberToString","roundedValue","round","toFixed","getNewAnnotationsMap","annotationStorage","newAnnotationsByPage","Map","annotations","pageIndex","size","isAscii","stringToUTF16HexString","buf","stringToUTF16String","bigEndian","getRotationMatrix","rotation","CIRCULAR_REF","Symbol","EOF","Name","NameClosure","nameCache","_clearCache","Cmd","CmdClosure","cmdCache","cmd","nonSerializableClosure","_map","suppressEncryption","__nonSerializable__","assignXref","newXref","key1","key2","key3","getAsync","fetchAsync","getRawValues","forEach","callback","empty","emptyDict","merge","dictArray","mergeSubDicts","mergedDict","properties","entries","property","subDict","clear","RefClosure","refCache","num","gen","_set","ref","delete","iterator","RefSetCache","putAlias","aliasRef","isCmd","isDict","isRefsEqual","v1","v2","clearPrimitiveCaches","isEmpty","isDataLoaded","getByte","getBytes","peekByte","peekedByte","peekBytes","getUint16","b0","b1","getInt32","b2","b3","getByteRange","reset","moveStart","makeSubStream","getBaseStreams","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","cx_index","cx_mps","qeTableIcx","qeIcx","ccittEOL","ccittEOF","twoDimPass","twoDimHoriz","twoDimVert0","twoDimVertR1","twoDimVertL1","twoDimVertR2","twoDimVertL2","twoDimVertR3","twoDimVertL3","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","source","eoline","EndOfLine","EncodedByteAlign","columns","rows","eoblock","black","codingLine","refLine","codingPos","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","code1","_lookBits","_eatBits","refPos","blackPixels","bits","err","code2","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limit","limitValue","JpegError","DNLMarkerError","scanLines","EOIMarkerError","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","codeLengths","pop","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","components","resetInterval","spectralStart","spectralEnd","successivePrev","successive","parseDNLMarker","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","maybeScanLines","blockRow","precision","decodeHuffman","tree","receive","receiveAndExtend","decodeBaseline","blockOffset","huffmanTableDC","diff","blockData","pred","rs","huffmanTableAC","s","z","decodeDCFirst","decodeDCSuccessive","eobrun","decodeACFirst","successiveACState","successiveACNextValue","decodeACSuccessive","offsetZ","decodeMcu","mcu","mcuRow","mcuCol","blockCol","h","decodeBlock","componentsLength","decodeFn","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","invalid","partialMsg","marker","quantizeAndInverse","blockBufferOffset","qt","quantizationTable","v0","v3","v4","v5","v6","v7","p0","p5","p6","p7","buildComponentData","computationBuffer","Int16Array","currentPos","startPos","maxPos","newPos","currentMarker","newMarker","JpegImage","decodeTransform","colorTransform","_decodeTransform","_colorTransform","dnlScanLines","readDataBlock","endOffset","array","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksPerColumnForMcu","blocksBufferSize","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","markerLoop","l","appData","version","major","minor","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","extended","sofScanLines","componentIds","componentsCount","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","processed","nextFileMarker","output","scaleX","scaleY","numComponents","_getLinearizedBlockData","isSourcePDF","componentScaleX","componentScaleY","blocksPerScanline","dataLength","xScaleBlockOffset","mask3LSB","lastComponentScaleX","_isColorConversionNeeded","_convertYccToRgb","Y","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","getData","forceRGB","rgbData","grayColor","JpxError","SubbandsGainLog2","LL","LH","HL","HH","JpxImage","failOnCorruptedImage","head","parseCodestream","headerSize","lbox","tbox","jumpDataLength","method","colorspace","headerType","parseImageProperties","stream","newByte","oldByte","Xsiz","Ysiz","XOsiz","YOsiz","Csiz","bitsPerComponent","context","doNotRecover","sqcd","spqcds","spqcdSize","scalarExpounded","tile","mainHeader","siz","XTsiz","YTsiz","XTOsiz","YTOsiz","isSigned","XRsiz","YRsiz","calculateComponentDimensions","SIZ","calculateTileGrids","QCC","COC","qcd","noQuantization","guardBits","spqcd","epsilon","mu","SPqcds","QCD","currentTile","qcc","cqcc","cod","scod","entropyCoderWithCustomPrecincts","sopMarkerUsed","ephMarkerUsed","progressionOrder","layersCount","multipleComponentTransform","decompositionLevelsCount","xcb","ycb","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticallyStripe","predictableTermination","segmentationSymbolUsed","reversibleTransformation","precinctsSizes","precinctsSize","PPx","PPy","unsupported","COD","partIndex","partsCount","initializeTile","buildPackets","parseTilePackets","tiles","transformComponents","numXtiles","numYtiles","tx0","ty0","tx1","ty1","jj","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","xcb_","ycb_","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","floor","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","codeblock","precinctNumber","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","pi","pj","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","LayerResolutionComponentPositionIterator","tileIndex","codingStyleDefaultParameters","maxDecompositionLevelsCount","nextPacket","JpxImage_nextPacket","resolutions","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","maxNumPrecincts","PositionComponentResolutionLayerIterator","getPrecinctSizesInImageScale","precinctsIterationSizes","px","py","maxNumHigh","maxNumWide","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","MAX_VALUE","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","scale","widthCurrentResolution","heightCurrentResolution","blocksDimensions","bscale","resolutionSubbands","packetsIterator","bufferSize","skipNextBit","count","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","queue","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","valueReady","zeroBitPlanesTree","included","inclusionTree","InclusionTree","TagTree","nextLevel","incrementValue","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","right","bottom","blockWidth","blockHeight","bitModel","BitModel","currentCodingpassType","totalLength","dataItem","encodedData","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","nb","interleave","levelOffset","transformTile","quantizationParameters","ReversibleTransform","IrreversibleTransform","subbandCoefficients","Float32Array","gainLog2","items","calculate","left","top","resultImages","transformedTiles","tile0","out","fourComponents","y0items","y1items","y2items","y3items","component0","alpha01","qcdOrQcc","levelsLength","levels","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","BitModelClosure","UNIFORM_CONTEXT","RUNLENGTH_CONTEXT","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","setNeighborsSignificance","column","labels","processedInverseMask","processedMask","firstMagnitudeBitMask","i1","decision","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","width4","index0","indexNext","significance","oneRowDown","twoRowsDown","threeRowsDown","iNext","indexBase","checkAllEmpty","allEmpty","hasSignificantCoefficent","i2","Transform","u0","ll","iterate","extend","j1","j2","filter","hl_lh_hh","llWidth","llHeight","llItems","u","bufferPadding","rowBuffer","numBuffers","colBuffers","currentBuffer","len","current","alpha","beta","gamma","K_","pdfjsVersion","pdfjsBuild"],"sourceRoot":""}